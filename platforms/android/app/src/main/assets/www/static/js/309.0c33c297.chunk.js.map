{"version":3,"sources":["containers/Modules/CompanyMaster/Company/updateForm.js","containers/Modules/CompanyMaster/Company/updateContactForm.js","containers/Modules/CompanyMaster/Company/updateTaxForm.js","containers/Modules/CompanyMaster/Company/updateInventoryForm.js","containers/Modules/CompanyMaster/Company/updateLogo.js","redux/companyMaster/company/actions.js","containers/Modules/CompanyMaster/Company/update.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","containers/App/app.style.js","components/utility/box.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/utility/pageHeader.style.js","components/utility/pageHeader.js"],"names":["TextArea","Input","ProjectUpdateForm","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","submit","this","getFieldDecorator","getFieldError","company","data","error","is_used","errorField","formItemLayout","labelCol","xs","span","sm","wrapperCol","layout","onSubmit","className","style","padding","Item","label","id","validateStatus","company_code","help","initialValue","rules","required","message","max","disabled","company_name","company_type","company_type_name","address","autosize","minRows","country","country_name","province","province_name","city","city_name","district","district_name","zip_code","Component","WrappedProjectUpdateForm","Form","create","name","CompanyContactUpdateForm","loading","loadingSubmit","user","auth","permissions","undefined","length","join","phone1","pattern","width","phone2","fax","includes","offset","type","htmlType","marginTop","email","website","WrappedCompanyContactUpdateForm","Option","Select","tax_registered_date","format","accounts","id_account_income_tax","showSearch","optionFilterProp","map","x","key","id_account_type","value","id_account","account_code","account_name","tax_number","moment","allowClear","CompanyInventoryUpdateForm","radioButtonStyle","flex","textAlign","costing_method","Group","buttonStyle","display","Button","getLanguage","WrappedCompanyInventoryUpdateForm","CompanyLogoUpdateForm","state","image","handleUpload","logo_small_url","fileList","push","listType","multiple","onRemove","file","setState","beforeUpload","notification","maxHeight","maxWidth","border","src","localStorage","getItem","onClick","marginLeft","WrappedCompanyLogoUpdateForm","actions","getCompany","updateCompany","payload","body","clearSuccess","clearError","clearErrorField","TabPane","Tabs","UpdateCompany","success","title","margin","history","replace","defaultActiveKey","tab","size","compose","connect","BoxTitle","styled","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","div","children","StatusTag","StatusBadge","TransNo","CardWrapper","customCollapseStyle","background","marginBottom","customDot","icon","status","Title","h4","Text","MiniText","Strong","color","Span","TotalField","Array","isArray","amount","parseAmount","isDiscount","labelAlign","amountAlign","discount","discountAlign","justify","fontSize","convertDiscountMask","parseFloat","toFixed","Signature","Box","WithDirection","LayoutContentWrapper","WDComponentTitleWrapper","h1","ComponentTitleWrapper"],"mappings":"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","file":"static/js/309.0c33c297.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\n// import Button from \"../../../../components/uielements/button\";\r\nimport { Form, Input, Select, DatePicker } from \"antd\";\r\n// import moment from \"moment\";\r\n\r\n//const { Option } = Select;\r\nconst { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n// const { RangePicker } = DatePicker;\r\n\r\n\r\nclass ProjectUpdateForm extends Component {\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"やった\")\r\n        // console.log(values);\r\n        this.props.submit(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const { getFieldDecorator, getFieldError } = this.props.form;\r\n    const { company } = this.props;\r\n    // const { loading, loadingSubmit } = company;\r\n    const data = company.company ? company.company : [];\r\n\r\n    const used = data.is_used;\r\n    const error = company.errorField ? company.errorField : [];\r\n    // console.log(data);\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const formTextArea = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        {/* {used ? (\r\n          <Row style={{ marginBottom: \"20px\" }}>\r\n            <Col span={24}>\r\n              <Alert\r\n                message={<IntlMessages id=\"companie.help\" />}\r\n                type=\"warning\"\r\n                showIcon\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 15px 0 0\" }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"companies.code\" />}\r\n              validateStatus={\r\n                error.company_code || getFieldError(\"company_code\")\r\n                  ? \"error\"\r\n                  : null\r\n              }\r\n              help={\r\n                error.company_code\r\n                  ? error.company_code\r\n                  : getFieldError(\"company_code\")\r\n              }\r\n            >\r\n              {getFieldDecorator(\"company_code\", {\r\n                initialValue: data.company_code,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                  {\r\n                    max: 30,\r\n                    message: <IntlMessages id=\"maxLength30\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  disabled={true}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"companies.name\" />}\r\n            >\r\n              {getFieldDecorator(\"company_name\", {\r\n                initialValue: data.company_name,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                  {\r\n                    max: 50,\r\n                    message: <IntlMessages id=\"maxLength50\" />\r\n                  }\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"companies.companyType\" />}\r\n            >\r\n              {getFieldDecorator(\"company_type\", {\r\n                initialValue: data.company_type ? data.company_type.company_type_name : \"\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formTextArea}\r\n              label={<IntlMessages id=\"address\" />}\r\n            >\r\n              {getFieldDecorator(\"address\", {\r\n                initialValue: data.address,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n              })(<TextArea \r\n                  autosize={{ minRows: 5 }} \r\n                  disabled={true}       \r\n              />)}\r\n            </Form.Item>\r\n          \r\n          </div>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 0 0 15px\" }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"country\" />}\r\n            >\r\n              {getFieldDecorator(\"id_country\", {\r\n                initialValue: data.country ? data.country.country_name : \"\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"province\" />}\r\n            >\r\n              {getFieldDecorator(\"id_province\", {\r\n                initialValue: data.province ? data.province.province_name : \"\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"city\" />}\r\n            >\r\n              {getFieldDecorator(\"id_city\", {\r\n                initialValue: data.city ? data.city.city_name : \"\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"district\" />}\r\n            >\r\n              {getFieldDecorator(\"id_district\", {\r\n                initialValue: data.district ? data.district.district_name : \"\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"zipCode\" />}\r\n            >\r\n              {getFieldDecorator(\"zip_code\", {\r\n                initialValue: data.zip_code,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                ]\r\n                })\r\n                (<Input \r\n                  //autosize={{ minRows: 2 }} \r\n                    disabled={true} \r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    ); \r\n  }\r\n}\r\n\r\nconst WrappedProjectUpdateForm = Form.create({\r\n  name: \"update_company\"\r\n})(ProjectUpdateForm);\r\n\r\nexport default WrappedProjectUpdateForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Input } from \"antd\";\r\n\r\n// const { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n// const { RangePicker } = DatePicker;\r\n\r\nclass CompanyContactUpdateForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"やった\");\r\n        this.props.submit(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const { getFieldDecorator, getFieldError } = this.props.form;\r\n    const { company } = this.props;\r\n    const { loading, loadingSubmit } = company;\r\n    const data = company.company ? company.company : [];\r\n\r\n    const { user } = this.props.auth;\r\n    let { permissions } = user ? user : [];\r\n    permissions = permissions ? permissions : [];\r\n    // console.log(getFieldError(\"phone2\"));\r\n    // const used = data.is_used;\r\n    // const error = company.errorField ? company.errorField : [];\r\n    // console.log(data);\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const formTextArea = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 15px 0 0\" }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"phone1\" />}\r\n              help={\r\n                getFieldError(\"phone1\") !== undefined &&\r\n                  getFieldError(\"phone1\").length > 1\r\n                  ? getFieldError(\"phone1\").join(\". \")\r\n                  : getFieldError(\"phone1\")\r\n              }\r\n            >\r\n              {getFieldDecorator(\"phone1\", {\r\n                initialValue: data.phone1,\r\n                rules: [\r\n                  {\r\n                    max: 15,\r\n                    message: <IntlMessages id=\"maxLength15\" />\r\n                  },\r\n                  {\r\n                    pattern: \"^[0-9]*$\",\r\n                    message: <IntlMessages id=\"phoneMustNumber\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  style={{ width: \"100%\" }}\r\n                //autosize={{ minRows: 2 }}\r\n                //disabled={used ? true : false}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"phone2\" />}\r\n              help={\r\n                getFieldError(\"phone2\") !== undefined &&\r\n                  getFieldError(\"phone2\").length > 1\r\n                  ? getFieldError(\"phone2\").join(\". \")\r\n                  : getFieldError(\"phone2\")\r\n              }\r\n            >\r\n              {getFieldDecorator(\"phone2\", {\r\n                initialValue: data.phone2,\r\n                rules: [\r\n                  {\r\n                    pattern: \"^[0-9]*$\",\r\n                    message: <IntlMessages id=\"phoneMustNumber\" />\r\n                  },\r\n                  {\r\n                    max: 15,\r\n                    message: <IntlMessages id=\"maxLength15\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  style={{ width: \"100%\" }}\r\n                //autosize={{ minRows: 2 }}\r\n                //disabled={used ? true : false}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"fax\" />}\r\n              help={\r\n                getFieldError(\"fax\") !== undefined &&\r\n                  getFieldError(\"fax\").length > 1\r\n                  ? getFieldError(\"fax\").join(\". \")\r\n                  : getFieldError(\"fax\")\r\n              }\r\n            >\r\n              {getFieldDecorator(\"fax\", {\r\n                initialValue: data.fax,\r\n                rules: [\r\n                  {\r\n                    max: 15,\r\n                    message: <IntlMessages id=\"maxLength15\" />\r\n                  },\r\n                  {\r\n                    pattern: \"^[0-9]*$\",\r\n                    message: <IntlMessages id=\"invalidFax\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  style={{ width: \"100%\" }}\r\n                //autosize={{ minRows: 2 }}\r\n                //disabled={used ? true : false}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            {permissions.includes(\"Update Company\") ? (\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  loading={loading || loadingSubmit}\r\n                >\r\n                  <IntlMessages id=\"button.submit\" />\r\n                </Button>\r\n              </Form.Item>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 0 0 15px\" }}>\r\n            <Form.Item {...formItemLayout} label={<IntlMessages id=\"email\" />}>\r\n              {getFieldDecorator(\"email\", {\r\n                initialValue: data.email,\r\n                rules: [\r\n                  {\r\n                    type: \"email\",\r\n                    message: <IntlMessages id=\"invalidEmail\" />\r\n                  }\r\n                ]\r\n              })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"website\" />}\r\n            >\r\n              {getFieldDecorator(\"website\", {\r\n                initialValue: data.website\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedCompanyContactUpdateForm = Form.create({\r\n  name: \"update_company_contact\"\r\n})(CompanyContactUpdateForm);\r\n\r\nexport default WrappedCompanyContactUpdateForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Input, DatePicker, Select } from \"antd\";\r\nimport moment from \"moment\"\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n// const { RangePicker } = DatePicker;\r\n\r\n\r\nclass CompanyContactUpdateForm extends Component {\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        // console.log(values)\r\n        values.tax_registered_date =  values.tax_registered_date \r\n          ?  values.tax_registered_date.format(\"YYYY-MM-DD\") \r\n          : null\r\n        this.props.submit(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { company } = this.props;\r\n    const { loading, loadingSubmit, accounts } = company;\r\n    const data = company.company ? company.company : [];\r\n\r\n    const { user } = this.props.auth;\r\n    let { permissions } = user ? user : [];\r\n    permissions = permissions ? permissions : [];\r\n\r\n    // const used = data.is_used;\r\n    // const error = company.errorField ? company.errorField : [];\r\n    //console.log(accounts);\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 15px 0 0\" }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"incomeTaxExpenseAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"id_account_income_tax\", {\r\n                initialValue: data.id_account_income_tax,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  //disabled={used ? true : false}\r\n                >\r\n                  {accounts.map((x, key) => (\r\n                    x.id_account_type === \"18\"\r\n                    ?\r\n                     (<Option key={key} value={x.id_account}>\r\n                        {x.account_code + \" (\" + x.account_name +\")\"}\r\n                      </Option>)\r\n                    : null\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"taxNumber\" />}\r\n            >\r\n              {getFieldDecorator(\"tax_number\", {\r\n                initialValue: data.tax_number,\r\n                // rules: [\r\n                //   {\r\n                //     required: true,\r\n                //     message: <IntlMessages id=\"required\" />\r\n                //   }\r\n                // ]\r\n              })(\r\n                <Input\r\n                //   disabled={used ? true : false}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"taxRegisteredDate\" />}\r\n            >\r\n              {getFieldDecorator(\"tax_registered_date\", {\r\n                initialValue: data.tax_registered_date ? moment(data.tax_registered_date, \"YYYY-MM-DD\") : null,\r\n                // rules: [\r\n                //   {\r\n                //     required: true,\r\n                //     message: <IntlMessages id=\"required\" />\r\n                //   }\r\n                // ]\r\n              })(\r\n                <DatePicker\r\n                  style={{ width: \"100%\" }}\r\n                  allowClear={false}\r\n                  // showTime={{ format: \"HH:mm:ss\" }}\r\n                  format=\"DD MMMM YYYY\"\r\n                  //disabledDate={e => e.valueOf() > moment()}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n\r\n            { permissions.includes(\"Update Company\") ?\r\n              (\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginTop: \"20px\" }}\r\n                    loading={loading || loadingSubmit}\r\n                  >\r\n                    <IntlMessages id=\"button.submit\" />\r\n                  </Button>\r\n                </Form.Item>\r\n              ) : null       \r\n            }\r\n            \r\n          \r\n            \r\n          </div>\r\n        </div>\r\n      </Form>\r\n    ); \r\n  }\r\n}\r\n\r\nconst WrappedCompanyContactUpdateForm = Form.create({\r\n  name: \"update_company_contact\"\r\n})(CompanyContactUpdateForm);\r\n\r\nexport default WrappedCompanyContactUpdateForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Radio } from \"antd\";\r\nimport getLanguage from \"../../../App/MyLanguange\";\r\n\r\nclass CompanyInventoryUpdateForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.props.submit(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { company } = this.props;\r\n    const { loading, loadingSubmit, accounts } = company;\r\n    const data = company.company ? company.company : [];\r\n\r\n    const { user } = this.props.auth;\r\n    let { permissions } = user ? user : [];\r\n    permissions = permissions ? permissions : [];\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    const radioGroupStyle = {\r\n      display: \"flex\",\r\n      width: \"50%\"\r\n    };\r\n\r\n    const radioButtonStyle = {\r\n      flex: \"1\",\r\n      textAlign: \"center\"\r\n    };\r\n\r\n    return (\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div\r\n            className=\"isoColumn-2 isoFormGroupComp\"\r\n            style={{ padding: \"0 15px 0 0\" }}\r\n          >\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"locations.add.costingMethod\" />}\r\n            >\r\n              {getFieldDecorator(\"costing_method\", {\r\n                initialValue: data.costing_method,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Radio.Group buttonStyle=\"solid\" style={radioGroupStyle}>\r\n                  <Radio.Button style={radioButtonStyle} value={1}>\r\n                    {getLanguage({ id: \"Average\" })}\r\n                  </Radio.Button>\r\n                  <Radio.Button style={radioButtonStyle} value={2}>\r\n                    {getLanguage({ id: \"FIFO\" })}\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              )}\r\n            </Form.Item>\r\n\r\n            {permissions.includes(\"Update Company\") ? (\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  loading={loading || loadingSubmit}\r\n                >\r\n                  <IntlMessages id=\"button.submit\" />\r\n                </Button>\r\n              </Form.Item>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedCompanyInventoryUpdateForm = Form.create({\r\n  name: \"update_company_inventory\"\r\n})(CompanyInventoryUpdateForm);\r\n\r\nexport default WrappedCompanyInventoryUpdateForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Upload, Row, Icon, Col } from \"antd\";\r\n// import moment from \"moment\"\r\nimport notification from \"../../../../components/notification\"\r\n\r\nclass CompanyLogoUpdateForm extends Component {\r\n\r\n  state = {\r\n    image: null\r\n  }\r\n\r\n  handleUpload = () => {\r\n    const { image } = this.state;\r\n    let values = {\r\n      logo_small_url: image,\r\n    };\r\n    this.props.submit(values);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.handleUpload()\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { company, loading } = this.props.company;\r\n\r\n    const { user } = this.props.auth;\r\n    let { permissions } = user ? user : [];\r\n    permissions = permissions ? permissions : [];\r\n\r\n    const { image } = this.state;\r\n    let fileList = [];\r\n\r\n    if (image) {\r\n      fileList.push(image)\r\n    }\r\n\r\n    const props = {\r\n      //className: \"avatar-uploader\",\r\n      listType: 'picture',\r\n      multiple: false,\r\n      onRemove: (file) => {\r\n        this.setState({\r\n          image: null,\r\n        });\r\n      },\r\n      beforeUpload: (file) => {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n          notification(\"error\", 'You can only upload JPG/PNG file!');\r\n          return true\r\n        }\r\n        else {\r\n          this.setState({\r\n            image: file,\r\n          });\r\n          return false;\r\n        }\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    // console.log(image, fileList);\r\n    // console.log(localStorage.getItem('server') + company.logo_small_url)\r\n\r\n    return (\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\">\r\n            {company.logo_small_url ? (\r\n              <Row style={{ marginTop: \"20px\" }}>\r\n                <img\r\n\r\n                  style={{\r\n                    // width: \"90%\",\r\n                    maxHeight: \"300px\",\r\n                    maxWidth: \"300px\",\r\n                    border: \"1px solid\"\r\n                  }}\r\n                  src={localStorage.getItem('server') + company.logo_small_url}\r\n                />\r\n              </Row>\r\n            ) : (\r\n                <Row style={{ marginTop: \"20px\" }}>\r\n                  <img\r\n                    style={{\r\n                      // width: \"90%\",\r\n                      maxHeight: \"300px\",\r\n                      maxWidth: \"300px\"\r\n                    }}\r\n                    src=\"https://via.placeholder.com/300\"\r\n                  />\r\n                </Row>\r\n              )}\r\n\r\n            <Row style={{ marginTop: \"40px\" }}>\r\n              <Col span={10}>\r\n                <Upload\r\n                  {...props}\r\n                >\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> <IntlMessages id=\"selectLogo\"></IntlMessages>\r\n                  </Button>\r\n                </Upload>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={this.handleSubmit}\r\n                  disabled={!this.state.image ? true : false}\r\n                  loading={loading}\r\n                  style={{ marginLeft: \"0%\" }}\r\n                >\r\n                  {loading ? 'Saving' : 'Save'}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\">\r\n\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedCompanyLogoUpdateForm = Form.create({\r\n  name: \"update_company_logo\"\r\n})(CompanyLogoUpdateForm);\r\n\r\nexport default WrappedCompanyLogoUpdateForm;\r\n","const actions = {\r\n  getCompany: () => ({\r\n    type: \"GET_COMPANY_REQUEST\"\r\n  }),\r\n  updateCompany: data => ({\r\n    type: \"UPDATE_COMPANY_REQUEST\",\r\n    payload: {\r\n      body: data\r\n    }\r\n  }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\nexport default actions;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nimport CompanyUpdateForm from \"./updateForm\";\r\nimport CompanyContactUpdateForm from \"./updateContactForm\";\r\nimport CompanyTaxUpdateForm from \"./updateTaxForm\";\r\nimport CompanyInventoryUpdateForm from \"./updateInventoryForm\";\r\nimport CompanyLogoUpdateForm from \"./updateLogo\";\r\n\r\nimport notification from \"../../../../components/notification\";\r\nimport { Spin, Tabs } from \"antd\";\r\n\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport actions from \"../../../../redux/companyMaster/company/actions\";\r\nimport { Box } from \"../../../App/app.style\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst redirectTo = \"/dashboard/setup/menus\";\r\n\r\nclass UpdateCompany extends Component {\r\n  // Get All data diawal\r\n  componentDidMount() {\r\n    const { getCompany } = this.props;\r\n    getCompany();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // Display error notif\r\n    if (this.props.company.error) {\r\n      notification(\"error\", this.props.company.error);\r\n      this.props.clearError();\r\n    }\r\n\r\n    if (this.props.company.success) {\r\n      notification(\"success\", this.props.company.success);\r\n      this.props.clearSuccess();\r\n    }\r\n  }\r\n\r\n  handleSubmit = value => {\r\n    const { updateCompany } = this.props;\r\n    updateCompany(value);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.company);\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <PageHeader\r\n            title={<IntlMessages id=\"companies.update.title\" />}\r\n            style={{ margin: 0 }}\r\n          >\r\n            <Button onClick={() => this.props.history.replace(redirectTo)}>\r\n              <IntlMessages id=\"button.back\" />\r\n            </Button>\r\n          </PageHeader>\r\n\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane\r\n              tab={<IntlMessages id=\"companies.tab.information\" />}\r\n              key=\"1\"\r\n            >\r\n              {this.props.company.loading &&\r\n              this.props.company.loadingSubmit ? (\r\n                <div className=\"spinStyle\">\r\n                  <Spin size=\"large\" />\r\n                </div>\r\n              ) : (\r\n                <CompanyUpdateForm\r\n                  submit={this.handleSubmit}\r\n                  company={this.props.company}\r\n                  auth={this.props.auth}\r\n                />\r\n              )}\r\n            </TabPane>\r\n            <TabPane tab={<IntlMessages id=\"companies.tab.contact\" />} key=\"2\">\r\n              {this.props.company.loading &&\r\n              this.props.company.loadingSubmit ? (\r\n                <div className=\"spinStyle\">\r\n                  <Spin size=\"large\" />\r\n                </div>\r\n              ) : (\r\n                <CompanyContactUpdateForm\r\n                  submit={this.handleSubmit}\r\n                  company={this.props.company}\r\n                  auth={this.props.auth}\r\n                />\r\n              )}\r\n            </TabPane>\r\n            <TabPane\r\n              tab={<IntlMessages id=\"companies.tab.taxAccount\" />}\r\n              key=\"3\"\r\n            >\r\n              {this.props.company.loading &&\r\n              this.props.company.loadingSubmit ? (\r\n                <div className=\"spinStyle\">\r\n                  <Spin size=\"large\" />\r\n                </div>\r\n              ) : (\r\n                <CompanyTaxUpdateForm\r\n                  submit={this.handleSubmit}\r\n                  company={this.props.company}\r\n                  auth={this.props.auth}\r\n                />\r\n              )}\r\n            </TabPane>\r\n            <TabPane\r\n              tab={<IntlMessages id=\"companies.tab.inventory\" />}\r\n              key=\"4\"\r\n            >\r\n              {this.props.company.loading &&\r\n              this.props.company.loadingSubmit ? (\r\n                <div className=\"spinStyle\">\r\n                  <Spin size=\"large\" />\r\n                </div>\r\n              ) : (\r\n                <CompanyInventoryUpdateForm\r\n                  submit={this.handleSubmit}\r\n                  company={this.props.company}\r\n                  auth={this.props.auth}\r\n                />\r\n              )}\r\n            </TabPane>\r\n            <TabPane tab={<IntlMessages id=\"companies.tab.logo\" />} key=\"5\">\r\n              {this.props.company.loading &&\r\n              this.props.company.loadingSubmit ? (\r\n                <div className=\"spinStyle\">\r\n                  <Spin size=\"large\" />\r\n                </div>\r\n              ) : (\r\n                <CompanyLogoUpdateForm\r\n                  submit={this.handleSubmit}\r\n                  company={this.props.company}\r\n                  auth={this.props.auth}\r\n                />\r\n              )}\r\n            </TabPane>\r\n          </Tabs>\r\n\r\n          {/* {this.props.company.loading &&\r\n          !this.props.company.loadingSubmit ? (\r\n            <div className=\"spinStyle\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          ) : (\r\n            <CompanyUpdateForm\r\n              submit={this.handleSubmit}\r\n              company={this.props.company}\r\n            />\r\n          )} */}\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    company: state.company,\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, actions))(UpdateCompany);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${palette('text', 0)};\r\n  margin: 0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BoxSubTitle = styled.p`\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  color: ${palette('text', 3)};\r\n  line-height: 24px;\r\n`;\r\n\r\nexport { BoxTitle, BoxSubTitle };\r\n","import React from 'react';\r\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {props.title\r\n        ? <BoxTitle className=\"isoBoxTitle\">\r\n            {' '}{props.title}{' '}\r\n          </BoxTitle>\r\n        : ''}\r\n      {props.subtitle\r\n        ? <BoxSubTitle className=\"isoBoxSubTitle\">\r\n            {' '}{props.subtitle}{' '}\r\n          </BoxSubTitle>\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border: 1px solid ${palette('border', 0)};\r\n  margin: 0 0 30px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 20px;\r\n    ${'' /* margin: 0 10px 30px; */};\r\n  }\r\n\r\n  &.half {\r\n    width: calc(50% - 34px);\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { BoxWrapper };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\n// import theme from \"../../settings/themes/themedefault\";\r\nimport BoxComponent from \"../../components/utility/box\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\nimport { Row, Col } from \"antd\";\r\nimport { convertDiscountMask } from \"../../helpers/helper\";\r\n\r\nconst BoxWrapper = styled(BoxComponent)`\r\n  border-radius: 5px;\r\n\r\n  .isoInvoiceTableBtn {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .isoPageHeaderWrapper {\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .spinStyle {\r\n    text-align: center;\r\n    padding: 30px 50px;\r\n  }\r\n\r\n  .isoCode {\r\n    color: ${palette(\"text\", 1)};\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  .isoDetailDataFlex {\r\n    display: flex;\r\n    .isoColumn-1 {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    .isoColumn-2 {\r\n      width: 50%;\r\n    }\r\n    .isoColumn-3 {\r\n      width: 33%;\r\n    }\r\n  }\r\n\r\n  .isoFormGroupComp {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  .isoDetailDataBlock {\r\n    display: block;\r\n    .isoColumn {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .isoFilter {\r\n    margin-bottom: 30px;\r\n    .isoFilterContent {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .isoFormGroup {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    .isoInputCode-20 {\r\n      width: 20%;\r\n    }\r\n    .isoInputCode-30 {\r\n      width: 30%;\r\n    }\r\n    .isoInputCode-40 {\r\n      width: 40%;\r\n    }\r\n    .isoInputCode-50 {\r\n      width: 50%;\r\n    }\r\n    .isoInputCode-100 {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Fieldset = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 13px;\r\n  color: ${palette(\"text\", 1)};\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  margin: 0 0 8px;\r\n`;\r\n\r\nconst Form = styled.div``;\r\n\r\nconst StatusTag = styled.span`\r\n  padding: 0 5px;\r\n  height: 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n  text-transform: capitalize;\r\n\r\n  &.inside-form {\r\n    height: 25px;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span`\r\n  margin-right: 8px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  width: 10px;\r\n  height: 10px;\r\n  display: flex;\r\n  border-radius: 2%;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  color: #ffffff;\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst TransNo = styled.span`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  width: auto;\r\n  overflow: inherit;\r\n  position: relative;\r\n  .isoInvoiceTable {\r\n    table {\r\n      tbody {\r\n        tr {\r\n          td {\r\n            .isoInvoiceBtnView {\r\n              display: flex;\r\n              flex-direction: row;\r\n              > a {\r\n                margin: ${props =>\r\n    props[\"data-rtl\"] === \"rtl\" ? \"0 0 0 15px\" : \"0 15px 0 0\"};\r\n              }\r\n            }\r\n          }\r\n          &:hover {\r\n            .isoInvoiceBtnView {\r\n              ${\"\" /* opacity: 1; */};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .invoiceListTable {\r\n    .ant-dropdown-menu-item,\r\n    .ant-dropdown-menu-submenu-title {\r\n      &:hover {\r\n        background-color: ${palette(\"secondary\", 1)};\r\n      }\r\n    }\r\n\r\n    .invoiceViewBtn {\r\n      color: ${palette(\"text\", 3)};\r\n\r\n      &:hover {\r\n        color: ${palette(\"primary\", 0)};\r\n      }\r\n    }\r\n\r\n    .invoiceMrBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"grayscale\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"grayscale\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceDltBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"error\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"error\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRestBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"secondary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"secondary\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRstBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"success\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"success\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceEdtBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"primary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"primary\", 2)};\r\n      }\r\n  }\r\n}`;\r\n\r\nconst customCollapseStyle = {\r\n  background: \"#F1F3F6\",\r\n  marginBottom: \"-7px\"\r\n  // background: \"#797979\"\r\n};\r\n\r\nconst customPanelStyle = {\r\n  // background: \"#f7f7f7\",\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  // border: 1,\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst customDot = (icon, { status, title }) => {\r\n  // if (status && title === \"Pending\") {\r\n  //   return <span className=\"ant-steps-icon-dot\" />;\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Processed\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[4] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Cancelled\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[3] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  return icon;\r\n};\r\n\r\nconst Title = styled.h4`\r\n  text-align: center;\r\n  color: rgba(0, 0, 0, 0.85);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  font-variant: tabular-nums;\r\n  font-variant-ligatures: normal;\r\n  font-variant-caps: normal;\r\n  font-variant-numeric: tabular-nums;\r\n  font-variant-east-asian: normal;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 14px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n\r\n  &.company-name {\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n\r\nconst MiniText = styled.span`\r\n  margin-bottom: 1em;\r\n  font-weight: 400;\r\n  font-style: ${props => (props[\"italic\"] === true ? \"italic\" : \"normal\")};\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 10px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n`;\r\n\r\nexport const Strong = props => (\r\n  <strong style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </strong>\r\n);\r\nexport const Span = props => (\r\n  <span style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </span>\r\n);\r\n\r\nexport const TotalField = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <>\r\n        {data.map((data, key) => {\r\n          const {\r\n            label,\r\n            amount,\r\n            parseAmount,\r\n            isDiscount,\r\n            labelAlign,\r\n            amountAlign\r\n          } = data;\r\n          if (isDiscount) {\r\n            const { discount, discountAlign } = data;\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={10}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={4}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: discountAlign ? discountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? convertDiscountMask(discount)\r\n                      : discount\r\n                        ? convertDiscountMask(discount.replace(/\\$\\s?|(,*)/g, \"\"))\r\n                        : \"0.00\"}\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          } else {\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={15}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const Signature = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <Row className=\"avoid-page-break\" justify=\"space-between\" type=\"flex\">\r\n        {data.map((data, key) => {\r\n          const { label, name } = data;\r\n          return (\r\n            <Col style={{ textAlign: \"center\" }} key={key}>\r\n              <Row>\r\n                <Col style={{ marginBottom: \"84px\" }}>\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col>\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {name\r\n                      ? `( ${name} )`\r\n                      : \"(..............................................)\"}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nconst Box = WithDirection(BoxWrapper);\r\nexport {\r\n  Box,\r\n  StatusTag,\r\n  StatusBadge,\r\n  TransNo,\r\n  Fieldset,\r\n  Form,\r\n  Label,\r\n  customCollapseStyle,\r\n  customPanelStyle,\r\n  customDot,\r\n  Title,\r\n  Text,\r\n  MiniText\r\n};\r\nexport default WithDirection(CardWrapper);\r\n","import React from 'react';\r\nimport BoxTitleWrapper from './boxTitle';\r\nimport { BoxWrapper } from './box.style';\r\n\r\nexport default props => (\r\n  <BoxWrapper\r\n    className={`${props.className} isoBoxWrapper`}\r\n    style={props.style}\r\n  >\r\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\r\n    {props.children}\r\n  </BoxWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 10px 20px 10px 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from \"react\";\r\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\r\n\r\nexport default props => (\r\n  <LayoutContentWrapper\r\n    className={\r\n      props.className != null\r\n        ? `${props.className} isoLayoutContentWrapper`\r\n        : \"isoLayoutContentWrapper\"\r\n    }\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </LayoutContentWrapper>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDComponentTitleWrapper = styled.h1`\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  color: ${palette('secondary', 2)};\r\n  width: 100%;\r\n  margin-right: 17px;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    margin: 0 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    width: 5px;\r\n    height: 40px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n  }\r\n`;\r\n\r\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\r\nexport { ComponentTitleWrapper };\r\n","import React from \"react\";\r\nimport { ComponentTitleWrapper } from \"./pageHeader.style\";\r\nimport { Divider } from \"antd\";\r\n\r\nexport default props =>\r\n  props.title ? (\r\n    <div>\r\n      <div className=\"isoPageHeaderWrapper\">\r\n        <h1 className=\"isoCode\">{props.title}</h1>\r\n        {props.children}\r\n      </div>\r\n      <Divider\r\n        style={{ margin: props.marginBottom ? \"10px 0 20px 0\" : \"10px 0\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <ComponentTitleWrapper className=\"isoComponentTitle\">\r\n      {props.children}\r\n    </ComponentTitleWrapper>\r\n  );\r\n"],"sourceRoot":""}