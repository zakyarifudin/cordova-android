{"version":3,"sources":["containers/App/dashboard.style.js","redux/dashboard/actions.js","containers/dashboard.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","containers/App/app.style.js","components/utility/box.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","containers/App/NumberFormat.js","redux/report/financialRatioReport/actions.js","redux/report/topItemReport/actions.js"],"names":["CenterContent","styled","div","DashboardWrapper","DateTime","Form","Header","Title","h4","SubTitle","h5","actions","getDashboardReports","filter","type","payload","dashboardActions","getFinancialRatioReports","fRActions","getTopItemReports","tIActions","Option","Select","chartColor","Dashboard","state","account_payables","account_receivables","doneCalcAccPay","doneCalcAccRec","doneCalcTotSales","end_date","moment","format","fixed_end_date","id_location","limit","month_year","startOf","sort_by","sort_type","start_date","subtract","topItemAmtBasedData","topItemQtyBasedData","totalSales","handleFilter","props","setState","generateChartDatas","dashboardReport","loading","top_items_by_amount","top_items_by_qty","total_sales","length","datasets","label","getLanguage","id","backgroundColor","data","map","total_qty","labels","item_name","total_amount","parseFloat","this","prevProps","title","scales","yAxes","ticks","beginAtZero","callback","value","index","values","toFixed","replace","xAxes","slice","hover","mode","intersect","tooltips","callbacks","tooltipItem","datasetIndex","yLabel","t","d","legend","display","text","responsive","cash_flow_daily_data","current_ratio_data","cash_turnover_data","net_profit_data","payable_turnover_data","retained_earning_daily_data","user","auth","permissions","receivable_turnover_data","locations","topItemReport","cash_flow","retained_earning","financial_ratio_reports","financialRatioReport","generateDatas","datas","find","last_ratio","ratio","cash_in","cash_out","net_movement","amount","style","minHeight","includes","span","className","width","marginBottom","showSearch","filterOption","placeholder","optionFilterProp","onChange","e","key","location_code","location_name","height","marginLeft","onClick","number","fromDate","toDate","options","globalOptions","marginTop","$txt","NumberFormat","flexDirection","flex","padding","autoplay","currency_code","currency_name","paddingBottom","fontWeight","fontSize","Component","mapDispatchToProps","compose","connect","BoxTitle","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","children","StatusTag","StatusBadge","TransNo","CardWrapper","customCollapseStyle","background","customDot","icon","status","Text","MiniText","Strong","color","error","Span","TotalField","Array","isArray","parseAmount","isDiscount","labelAlign","amountAlign","discount","discountAlign","justify","textAlign","offset","convertDiscountMask","Signature","name","Box","WithDirection","LayoutContentWrapper","GlobalNumberFormat","prefix","suffix","displayType","thousandSeparator","separator","decimalSeparator","decimal","decimalScale","parseInt","precision","fixedDecimalScale","fixed_precision","undefined","page","search","filter_select","clearSuccess","clearError","clearErrorField","based"],"mappings":"kpHAEA,IAAMA,EAAgBC,IAAOC,IAAV,KA2BbC,EAAmBF,IAAOC,IAAV,KAsGhBE,EAAWH,IAAOC,IAAV,KAsBRG,EAAOJ,IAAOC,IAAV,KAgBJI,EAASL,IAAOC,IAAV,KAONK,EAAQN,IAAOO,GAAV,KAMLC,EAAWR,IAAOS,GAAV,K,4CC7KCC,EATC,CACdC,oBAAqB,SAAAC,GAAM,MAAK,CAC9BC,KAAM,gCACNC,QAAS,CACPF,OAAQA,M,kBC8BND,EAAwBI,EAAxBJ,oBACAK,EAA6BC,IAA7BD,yBACAE,EAAsBC,IAAtBD,kBAEFE,EAASC,IAAOD,OAEhBE,EACC,oBADDA,EAEI,oBAFJA,EAGI,oBAHJA,EAIG,oBAJHA,GAKE,UALFA,GAMI,qBAIJC,G,2MACJC,MAAQ,CACNC,iBAAkB,KAClBC,oBAAqB,KACrBC,gBAAgB,EAChBC,gBAAgB,EAChBC,kBAAkB,EAClBjB,OAAQ,CACNkB,SAAUC,MAASC,OAAO,uBAC1BC,eAAgBF,MAASC,OAAO,uBAChCE,YAAa,cACbC,MAAO,EACPC,WAAYL,MAASM,QAAQ,SAC7BC,QAAS,YACTC,UAAW,OACXC,WAAYT,MAASU,SAAS,EAAG,SAAST,OAAO,wBAEnDU,oBAAqB,KACrBC,oBAAqB,KACrBC,WAAY,G,EAkGdC,aAAe,WAAO,IAEZX,EADW,EAAKV,MAAhBZ,OACAsB,YACFM,EAAaT,MAASU,SAAS,EAAG,SAAST,OAAO,uBAClDF,EAAWC,MAASC,OAAO,uBAE/BrB,EACE,EAAKmC,MADPnC,oBAIAA,EADkB,gBAAhBuB,EACkB,cAAgBM,EAAa,aAAeV,EAAW,gBAAkBI,EAEzE,cAAgBM,EAAa,aAAeV,GAGlE,EAAKiB,SAAS,CAAEnC,OAAO,eAAM,EAAKY,MAAMZ,OAAlB,CAA0B4B,aAAYV,gB,EAgD9DkB,mBAAqB,WAEnB,IAAIL,EAAqBD,EAAsB,KAC3CE,EAAa,EAETK,EAAoB,EAAKH,MAAzBG,gBAENxB,EAMEwB,EANFxB,iBACAC,EAKEuB,EALFvB,oBACAwB,EAIED,EAJFC,QACAC,EAGEF,EAHFE,oBACAC,EAEEH,EAFFG,iBACAC,EACEJ,EADFI,YAMAV,EADES,GAAoBA,EAAiBE,OAAS,EAC1B,CACpBC,SAAU,CACR,CACEC,MAAOC,YAAY,CAAEC,GAAG,kBACxBC,gBAAiB,CACfrC,GACAA,EACAA,EACAA,EACAA,GAEFsC,KAAMR,EAAiBS,KAAI,SAAAD,GAAI,OAAIA,EAAKE,eAG5CC,OAAQX,EAAiBS,KAAI,SAAAD,GAAI,OAAIA,EAAKI,cAGtB,CACpBT,SAAU,CACR,CACEC,MAAOC,YAAY,CAAEC,GAAG,kBACxBC,gBAAiB,GACjBC,KAAM,KAGVG,OAAQ,IAMVrB,EADES,GAAuBA,EAAoBG,OAAS,EAChC,CACpBC,SAAU,CACR,CACEC,MAAOC,YAAY,CAAEC,GAAG,qBACxBC,gBAAiB,CACfrC,GACAA,EACAA,EACAA,EACAA,GAEFsC,KAAMT,EAAoBU,KAAI,SAAAD,GAAI,OAAIA,EAAKK,kBAG/CF,OAAQZ,EAAoBU,KAAI,SAAAD,GAAI,OAAIA,EAAKI,cAGzB,CACpBT,SAAU,CACR,CACEC,MAAOC,YAAY,CAAEC,GAAG,qBACxBC,gBAAiB,GACjBC,KAAM,KAGVG,OAAQ,IAMPb,IACHN,EAAasB,WAAWb,IAI1B,EAAKN,SAAS,CACZtB,mBACAC,sBACAG,kBAAkB,EAClBD,gBAAgB,EAChBD,gBAAgB,EAChBgB,sBACAD,sBACAE,gB,mFA3PiB,IAAD,EAKduB,KAAKrB,MAHPnC,EAFgB,EAEhBA,oBACAK,EAHgB,EAGhBA,yBACAE,EAJgB,EAIhBA,kBAEMN,EAAWuD,KAAK3C,MAAhBZ,OACRD,EAAoB,cAAgBC,EAAO4B,WAAa,aAAe5B,EAAOkB,UAC9Ed,EAAyB,EAAG,KAAM,QAAUe,MAASC,OAAO,SAa5Dd,EAAkB,EAAG,KATnB,sBAGAa,MAEGU,SAAS,EAAG,SACf,aACA7B,EAAOkB,SACP,oCACuC,KAAM,e,yCAI9BsC,GACGD,KAAKrB,MAAMG,gBAAvBC,SAEQiB,KAAKrB,MAAMG,kBAAoBmB,EAAUnB,iBACvDkB,KAAKnB,uB,oCAKKqB,GAyDZ,MAxDc,CACZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,EACbC,SAAU,SAAUC,EAAOC,EAAOC,GAChC,OAAOF,EAAMG,QAAQ,GAAGC,QAAQ,wBAAyB,SAKjEC,MAAO,CACL,CACER,MAAO,CACLE,SAAU,SAAUC,EAAOC,EAAOC,GAChC,OAAIF,EAAMrB,OAAS,EACVqB,EAAMM,MAAM,EAAG,GAAK,MACfN,OAMxBO,MAAO,CACLC,KAAM,UACNC,WAAW,GAEbC,SAAU,CACRF,KAAM,QACNC,WAAW,EACXE,UAAW,CACT9B,MAAO,SAAU+B,EAAa3B,GAC5B,IAAIJ,EAAQI,EAAKL,SAASgC,EAAYC,cAAchC,OAAS,GAU7D,OANIA,IACFA,GAAS,MAEXA,GAAS+B,EAAYE,OAClBX,QAAQ,GACRC,QAAQ,wBAAyB,KAC7BvB,GAETa,MAAO,SAAUqB,EAAGC,GAClB,OAAOA,EAAE5B,OAAO2B,EAAE,GAAGd,UAI3BgB,OAAQ,CAAEC,SAAS,GACnBxB,MAAO,CACLwB,SAAS,EACTC,KAAMzB,M,oCA0BEA,GAwCZ,MAvCc,CACZ0B,YAAY,EACZzB,OAAQ,CACNU,MAAO,CACL,CACEnE,KAAM,SAEN2D,MAAO,CACLC,aAAa,EACbC,SAAU,SAAUC,EAAOC,EAAOC,GAChC,OAAOF,EAAMG,QAAQ,GAAGC,QAAQ,wBAAyB,QAI/D,CACElE,KAAM,SAEN2D,MAAO,CACLC,aAAa,MAMrBJ,MAAO,CACLwB,SAAS,EACTC,KAAMzB,GAERgB,SAAU,CAQRF,KAAM,Y,+BAwGF,IAMJa,EACFC,EACAC,EACAC,EACAC,EACAC,EAXK,OAECC,EAASnC,KAAKrB,MAAMyD,KAApBD,KACAE,GAAgBF,GAAc,IAA9BE,YASNC,EAA2B,KAGrBC,EAAcvC,KAAKrB,MAAM6D,cAAzBD,UAEAzD,EAAoBkB,KAAKrB,MAAzBG,gBAEN2D,EAGE3D,EAHF2D,UACA1D,EAEED,EAFFC,QACA2D,EACE5D,EADF4D,iBArBK,EA+BU1C,KAAK3C,MAPdC,EAxBD,EAwBCA,iBACNC,EAzBK,EAyBLA,oBACAG,EA1BK,EA0BLA,iBACAD,EA3BK,EA2BLA,eACAD,EA5BK,EA4BLA,eACAgB,EA7BK,EA6BLA,oBACAD,EA9BK,EA8BLA,oBACAE,EA/BK,EA+BLA,WAECF,IACDC,EAAoBY,SAAS,GAAGC,MAAOC,YAAY,CAAEC,GAAI,mBAEvDhB,IACFA,EAAoBa,SAAS,GAAGC,MAAQC,YAAY,CAAEC,GAAI,sBArCrD,IA0CCoD,EADyB3C,KAAKrB,MAA9BiE,qBACAD,wBAER,GAAIA,GAA2BA,EAAwBxD,OAAS,EAAG,CAAC,IACzD0D,EAAT,SAAuBtD,EAAIF,GACzB,IAAIyD,EAAQH,EAAwBI,MAAK,SAAAtD,GAAI,OAAIA,EAAKF,KAAOA,KAW7D,MAVkB,CAChBH,SAAU,CACR,CACEC,MAAOA,EACPG,gBAAiB,CAACrC,EAAgBA,IAClCsC,KAAM,CAACqD,EAAME,WAAYF,EAAMG,SAGnCrD,OAAQ,CAAChC,MAASC,OAAO,QAAU,EAAGD,MAASC,OAAO,WAK1DmE,EAAkBa,EAAc,IAAKvD,YAAY,CAAEC,GAAI,oCAAuC,QAG9FuC,EAAqBe,EAAc,IAAKvD,YAAY,CAAEC,GAAI,uCAA0C,QAGpGwC,EAAqBc,EAAc,IAAKvD,YAAY,CAAEC,GAAI,uCAA0C,KAAOD,YAAY,CAAEC,GAAI,UAAa,KAG1I0C,EAAwBY,EAAc,IAAKvD,YAAY,CAAEC,GAAI,0CAA6C,KAAOD,YAAY,CAAEC,GAAI,UAAa,KAGhJ+C,EAA2BO,EACzB,IACAvD,YAAY,CAAEC,GAAI,6CAAgD,KAAOD,YAAY,CAAEC,GAAI,UAAa,KA0E5G,OArEIkD,GAAaA,EAAUtD,OAAS,IAClC0C,EAAuB,CACrBzC,SAAU,CACR,CACEC,MAAOC,YAAY,CAAEC,GAAI,WAAc,SACvCC,gBAAiB,CAIfrC,EACAA,EAEAA,IAEFsC,KAAM,CAACgD,EAAU,GAAGS,QAAST,EAAU,GAAGU,SAAUV,EAAU,GAAGW,gBAGrExD,OAAQ,CAACN,YAAY,CAAEC,GAAI,WAAaD,YAAY,CAAEC,GAAI,YAAcD,YAAY,CAAEC,GAAI,mBAM1FmD,GAAoBA,EAAiBvD,OAAS,IAChD+C,EAA8B,CAC5B9C,SAAU,CACR,CACEC,MAAOC,YAAY,CAAEC,GAAI,WAAc,SACvCC,gBAAiBrC,GAUjBsC,KAAMiD,EAAiBhD,KAAI,SAAAD,GAAI,OAAIA,EAAK4D,YAG5CzD,OAAQ,CAACN,YAAY,CAAEC,GAAI,YAAcD,YAAY,CAAEC,GAAI,aAAeD,YAAY,CAAEC,GAAI,UAAYD,YAAY,CAAEC,GAAI,UAAYD,YAAY,CAAEC,GAAI,QAAUD,YAAY,CAAEC,GAAI,SAAWD,YAAY,CAAEC,GAAI,SAAWD,YAAY,CAAEC,GAAI,WAAaD,YAAY,CAAEC,GAAI,cAAgBD,YAAY,CAAEC,GAAI,YAAcD,YAAY,CAAEC,GAAI,aAAeD,YAAY,CAAEC,GAAI,gBA6BlX,kBAAC,IAAD,CAAsB+D,MAAO,CAAEC,UAAW,UACvClB,GAAeA,EAAYmB,SAAS,oBAClC,oCACC,kBAACzH,EAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK0H,KAAM,IACT,yBAAKC,UAAU,mBAAmBJ,MAAO,CAAEK,MAAO,SAChD,kBAAC,IAAD,KACE,4BACE,kBAAC,IAAD,CAAcpE,GAAG,0BAM3B,kBAAC,IAAD,CAAK+D,MAAO,CAAEM,aAAc,WAC1B,kBAAC,IAAD,CAAKH,KAAM,IACT,kBAACxH,EAAD,KAIE,kBAAC,IAAD,CACE4H,YAAU,EACVC,cAAc,EACdR,MAAO,CAAEK,MAAO,QAChBI,YACE,kBAAC,IAAD,CAAcxE,GAAG,oBAEnByE,iBAAiB,WACjBC,SAAU,SAAAC,GAAC,OACT,EAAKtF,SAAS,CACZnC,OAAO,eACF,EAAKY,MAAMZ,OADV,CAEJsB,YAAamG,OAInB1D,MACER,KAAK3C,MAAMZ,OAAOsB,YACdiC,KAAK3C,MAAMZ,OAAOsB,YAClB,IAIN,kBAACd,EAAD,CAAQkH,IAAI,cAAc3D,MAAM,eAC9B,kBAAC,IAAD,CAAcjB,GAAG,kBAElBgD,EAAU7C,KAAI,SAACD,EAAM0E,GAAP,OACb,kBAAClH,EAAD,CAAQkH,IAAKA,EAAK3D,MAAOf,EAAK1B,aAA9B,UACM0B,EAAK2E,cADX,aAC6B3E,EAAK4E,cADlC,UAKJ,kBAAC,IAAD,CACE3H,KAAK,UACL4G,MAAO,CAAEgB,OAAQ,OAAQC,WAAY,QACrCC,QAASxE,KAAKtB,cAEd,kBAAC,IAAD,CAAca,GAAG,oBAOzB,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKkE,KAAM,IACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CACEoD,GAAG,wBACHmB,OAAQ,CAAE+D,OAAQ,MAGtB,kBAACpI,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,kBACHmB,OAAQ,CACNgE,SAAU9G,IAAOoC,KAAK3C,MAAMZ,OAAO4B,YAChCR,OAAO,gBACV8G,OAAQ/G,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,qBAK1D,kBAAC7B,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,iBACjD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,cAEnD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,UACXnF,GAAuBQ,EACvB,kBAAC,IAAD,MAEE,kBAAC,IAAD,CACE4E,MAAO,IACPW,OAAQ,IACR7E,KAAMlB,EACNqG,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,iBAAoB,MAAQD,YAAY,CAAEC,GAAI,uBAWhF,kBAAC,IAAD,CAAKkE,KAAM,IACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CACEoD,GAAG,wBACHmB,OAAQ,CAAE+D,OAAQ,MAGtB,kBAACpI,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,kBACHmB,OAAQ,CACNgE,SAAU9G,MAEPU,SAAS,EAAG,SACZT,OAAO,gBACV8G,OAAQ/G,MAASC,OAAO,qBAKhC,kBAAC7B,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,iBACjD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,cAEnD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,UACXlF,GAAuBO,EACvB,kBAAC,IAAD,MAEE,kBAAC,IAAD,CACE4E,MAAO,IACPW,OAAQ,IACR7E,KAAMjB,EACNoG,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,iBAAoB,MAAQD,YAAY,CAAEC,GAAI,0BAYlF,kBAAC,IAAD,CAAK+D,MAAO,CAAEwB,UAAW,UAEvB,kBAAC,IAAD,CAAKrB,KAAM,GACT,yBAAKC,UAAU,wCACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,iBAEnB,kBAAClD,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,SACH,SAAAwF,GAAI,OAAIA,EAAO,IAAMnH,IAAO,EAAKP,MAAMZ,OAAOkB,UAAUE,OAAO,qBAGrE,kBAAC7B,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,iBACjD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,cAEnD,8BACE,uBAAG6F,UAAU,iBAInB,kBAAC9H,EAAD,CAAe8H,UAAU,cACvB,8BAAOhG,GAAoBqB,EAAU,kBAAC,IAAD,MAAW,IAChD,yBAAK2E,UAAU,cACZjF,EAAa,kBAACuG,EAAA,EAAD,CAAcxE,MAAOT,WAAWtB,KAA+B,KAE/E,yBAAKiF,UAAU,QAAf,+BAOR,kBAAC,IAAD,CAAKD,KAAM,GACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,4BAEnB,kBAAClD,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,SACH,SAAAwF,GAAI,OAAIA,EAAO,IAAMnH,IAAO,EAAKP,MAAMZ,OAAOkB,UAAUE,OAAO,qBAGrE,kBAAC7B,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,iBACjD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,cAEnD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACX7B,EAGE,oCACE,kBAAC,IAAD,CACE8B,MAAO,IACPW,OAAQ,IACR7E,KAAMoC,EACN+C,QAAS5E,KAAK6E,cAAcvF,YAAY,CAAEC,GAAI,+BAPpD,kBAAC,IAAD,UAgBV,kBAAC,IAAD,CAAKkE,KAAM,GAET,kBAAC,IAAD,CAAKH,MAAO,CAAE5B,QAAS,OAAQ4C,OAAQ,OAAQW,cAAe,WAE5D,kBAAC,IAAD,CAAKxB,KAAM,GAAIH,MAAO,CAAEM,aAAc,SAAUsB,KAAM,MACpD,yBAAKxB,UAAU,iBAAiBJ,MAAO,CAAEM,aAAc,SACrD,kBAAC,IAAD,CAAKN,MAAO,CAAE6B,QAAS,mBACrB,kBAACjJ,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,gBAEnB,kBAAClD,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,SACH,SAAAwF,GAAI,OAAIA,EAAO,IAAMnH,IAAO,EAAKP,MAAMZ,OAAOkB,UAAUE,OAAO,qBAGrE,kBAAC7B,EAAD,KACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,0BACjD,8BACE,uBAAG6F,UAAU,iBAInB,6BACE,yBAAKA,UAAU,oBACb,8BAAOjG,GAAkBsB,EAAU,kBAAC,IAAD,MACjC,kBAAC,IAAD,CAAUqG,UAAQ,GACf7H,EAAoB4B,OAAS,EAAI5B,EAAoBmC,KAAI,SAACD,EAAM0E,GAAP,OACxD,yBAAKA,IAAKA,GACR,kBAACvI,EAAD,CAAe0H,MAAO,CAAE6B,QAAS,eAC/B,yBAAKzB,UAAU,cACZjE,EAAK4D,OAAS,kBAAC2B,EAAA,EAAD,CAAcxE,MAAOT,WAAWN,EAAK4D,UAAc,KAEpE,yBAAKK,UAAU,QAAQjE,EAAK4F,cAAgB,KAAO5F,EAAK6F,cAAgB,IAAM7F,EAAK6F,cAAgB,IAAM,UAG3G,kBAAC1J,EAAD,KACE,yBAAK8H,UAAU,cACZ,QAEH,yBAAKA,UAAU,QAAf,aAYpB,kBAAC,IAAD,CAAKD,KAAM,GAAIH,MAAO,CAAEwB,UAAW,QAASlB,aAAc,OAAQsB,KAAM,MACtE,yBAAKxB,UAAU,uCAAuCJ,MAAO,CAAEM,aAAc,SAC3E,kBAAC,IAAD,CAAKN,MAAO,CAAE6B,QAAS,mBACrB,kBAACjJ,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,aAEnB,kBAAClD,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,SACH,SAAAwF,GAAI,OAAIA,EAAO,IAAMnH,IAAO,EAAKP,MAAMZ,OAAOkB,UAAUE,OAAO,qBAGrE,kBAAC7B,EAAD,KACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,0BACjD,8BACE,uBAAG6F,UAAU,iBAInB,6BACE,yBAAKA,UAAU,oBACb,8BAAOlG,GAAkBuB,EAAU,kBAAC,IAAD,MACjC,kBAAC,IAAD,CAAUqG,UAAQ,GACf9H,EAAiB6B,OAAS,EAAK7B,EAAiBoC,KAAI,SAACD,EAAM0E,GAAP,OACnD,yBAAKA,IAAKA,GACR,kBAACvI,EAAD,CAAe0H,MAAO,CAAE6B,QAAS,eAC/B,yBAAKzB,UAAU,cACZjE,EAAK4D,OAAS,kBAAC2B,EAAA,EAAD,CAAcxE,MAAOT,WAAWN,EAAK4D,UAAc,KAEpE,yBAAKK,UAAU,QAAQjE,EAAK4F,cAAgB,KAAO5F,EAAK6F,cAAgB,IAAM7F,EAAK6F,cAAgB,IAAM,UAG3G,kBAAC1J,EAAD,KACE,yBAAK8H,UAAU,cACZ,QAEH,yBAAKA,UAAU,QAAf,gBAiB1B,kBAAC,IAAD,CAAKJ,MAAO,CAAEwB,UAAW,UAEvB,kBAAC,IAAD,CAAKrB,KAAM,IACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,mCAEnB,kBAAClD,EAAD,KACE,kBAAC,IAAD,CACEkD,GAAG,aACH,SAAAwF,GAAI,OAAIA,EAAO,IAAMnH,IAAO,EAAKP,MAAMZ,OAAOkB,UAAUE,OAAO,aAGrE,kBAAC7B,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,iBACjD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOkB,UAAUE,OAAO,cAEnD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACXxB,EAGE,oCACE,kBAAC,IAAD,CACEyB,MAAO,IACPW,OAAQ,IACR7E,KAAMyC,EACN0C,QAAS5E,KAAK6E,cAAcvF,YAAY,CAAEC,GAAI,sCAPpD,kBAAC,IAAD,YAoBd,kBAACxD,EAAD,CAAkBuH,MAAO,CAAEwB,UAAW,SAEpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKrB,KAAM,IACT,yBAAKC,UAAU,mBAAmBJ,MAAO,CAAEK,MAAO,SAChD,kBAAC,IAAD,KACE,wBAAIL,MAAO,CAAEM,aAAc,IACzB,kBAAC,IAAD,CAAcrE,GAAG,kCAEnB,uBAAG+D,MAAO,CAAEiC,cAAe,UAAW,kBAAC,IAAD,CAAchG,GAAG,sBAO/D,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKkE,KAAM,GACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,yCAGrB,kBAACvD,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,iBACvD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,cAEzD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACX3B,EAGE,oCACE,kBAAC,IAAD,CACE4B,MAAO,IACPW,OAAQ,IACR7E,KAAMsC,EACN6C,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,uCAA0C,KAAOD,YAAY,CAAEC,GAAI,uBAA0B,QARvH,kBAAC,IAAD,UAmBV,kBAAC,IAAD,CAAKkE,KAAM,GAET,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,4CAGrB,kBAACvD,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,iBACvD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,cAEzD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACXzB,EAGE,oCACE,kBAAC,IAAD,CACE0B,MAAO,IACPW,OAAQ,IACR7E,KAAMwC,EACN2C,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,0CAA6C,KAAOD,YAAY,CAAEC,GAAI,uBAA0B,QAR1H,kBAAC,IAAD,UAmBV,kBAAC,IAAD,CAAKkE,KAAM,GAET,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,+CAGrB,kBAACvD,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,iBACvD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,cAEzD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACXpB,EAGE,kBAAC,IAAD,CACEqB,MAAO,IACPW,OAAQ,IACR7E,KAAM6C,EACNsC,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,6CAAgD,KAAOD,YAAY,CAAEC,GAAI,uBAA0B,OAP3H,kBAAC,IAAD,WAmBZ,kBAAC,IAAD,CAAK+D,MAAO,CAAEwB,UAAW,UAEvB,kBAAC,IAAD,CAAKrB,KAAM,IACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,sCAGrB,kBAACvD,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,iBACvD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,cAEzD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACX1B,EAGE,oCACE,kBAAC,IAAD,CACE2B,MAAO,IACPW,OAAQ,IACR7E,KAAMuC,EACN4C,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,oCAAuC,KAAOD,YAAY,CAAEC,GAAI,uBAA0B,QARpH,kBAAC,IAAD,UAmBV,kBAAC,IAAD,CAAKkE,KAAM,IACT,yBAAKC,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACxH,EAAD,KACE,6BACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAcoD,GAAG,yCAQrB,kBAACvD,EAAD,KACE,6BACE,8BAAO4B,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,iBACvD,8BAAOD,IAAOoC,KAAK3C,MAAMZ,OAAOqB,gBAAgBD,OAAO,cAEzD,8BACE,uBAAG6F,UAAU,iBAInB,yBAAKA,UAAU,SACX5B,EAGE,oCACE,kBAAC,IAAD,CACE6B,MAAO,IACPW,OAAQ,IACR7E,KAAMqC,EACN8C,QAAS5E,KAAK6E,cACZvF,YAAY,CAAEC,GAAI,uCAA0C,KAAOD,YAAY,CAAEC,GAAI,uBAA0B,QARvH,kBAAC,IAAD,aAuBd,kBAACxD,EAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK0H,KAAM,IACT,yBAAKC,UAAU,mBAAmBJ,MAAO,CAAEK,MAAO,SAChD,kBAAC,IAAD,KACE,wBAAIL,MAAO,CAAEM,aAAc,EAAG4B,WAAY,OAAQC,SAAU,WAC1D,kBAAC,IAAD,CAAclG,GAAG,aAEnB,uBAAG+D,MAAO,CAAEiC,cAAe,UAAW,kBAAC,IAAD,CAAchG,GAAG,uC,GAtjCrDmG,aA4kClBC,GAAqB,CACzBnJ,sBACAK,2BACAE,qBAGa6I,sBACbC,aAhBsB,SAAAxI,GACtB,MAAO,CACLyB,gBAAiBzB,EAAMyB,gBACvB8D,qBAAsBvF,EAAMuF,qBAC5BJ,cAAenF,EAAMmF,cACrBJ,KAAM/E,EAAM+E,QAaZuD,IAHWC,CAKbxI,K,6YCtoCF,IAAM0I,EAAWjK,IAAOkK,GAAV,IAGHC,kBAAQ,OAAQ,IAKrBC,EAAcpK,IAAOqK,EAAV,IAGNF,kBAAQ,OAAQ,ICXZ,WAAArH,GACb,OACE,6BACGA,EAAMuB,MACH,kBAAC4F,EAAD,CAAUpC,UAAU,eACjB,IAAK/E,EAAMuB,MAAO,KAErB,GACHvB,EAAMwH,SACH,kBAACF,EAAD,CAAavC,UAAU,kBACpB,IAAK/E,EAAMwH,SAAU,KAExB,K,wbCZV,IAAMC,EAAavK,IAAOC,IAAV,IAKMkK,kBAAQ,SAAU,GASlC,I,4wRCRN,IAAMI,EAAavK,aCLJ,SAAA8C,GAAK,OAClB,kBAACyH,EAAD,CACE1C,UAAS,UAAK/E,EAAM+E,UAAX,kBACTJ,MAAO3E,EAAM2E,OAEb,kBAAC,EAAD,CAAiBpD,MAAOvB,EAAMuB,MAAOiG,SAAUxH,EAAMwH,WACpDxH,EAAM0H,YDDQxK,CAAH,IA2BHmK,kBAAQ,OAAQ,IAiFvBM,GAtBWzK,IAAOC,IAAV,KAWAD,IAAOwD,MAAV,IAEA2G,kBAAQ,OAAQ,IAOdnK,IAAOC,IAAV,KAEQD,IAAO4H,KAAV,IAOOuC,kBAAQ,UAAW,GAcjBA,kBAAQ,QAAS,GAIjBA,kBAAQ,UAAW,GAInBA,kBAAQ,UAAW,GAInBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,KAIpCO,EAAc1K,IAAO4H,KAAV,IAQKuC,kBAAQ,UAAW,GAIjBA,kBAAQ,QAAS,GAIjBA,kBAAQ,UAAW,GAInBA,kBAAQ,UAAW,GAInBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,GAIlBA,kBAAQ,SAAU,IAIpCQ,EAAU3K,IAAO4H,KAAV,KAMPgD,EAAc5K,IAAOC,IAAV,KAaS,SAAA6C,GAAK,MACL,QAAtBA,EAAM,YAAwB,aAAe,eAMjC,GAYYqH,kBAAQ,YAAa,GAKlCA,kBAAQ,OAAQ,GAGdA,kBAAQ,UAAW,GAOrBA,kBAAQ,YAAa,GAInBA,kBAAQ,YAAa,GAOvBA,kBAAQ,QAAS,GAIfA,kBAAQ,QAAS,GAOnBA,kBAAQ,YAAa,GAInBA,kBAAQ,YAAa,GAOvBA,kBAAQ,UAAW,GAIjBA,kBAAQ,UAAW,GAOrBA,kBAAQ,UAAW,GAIjBA,kBAAQ,UAAW,IAK9BU,EAAsB,CAC1BC,WAAY,UACZ/C,aAAc,QAYVgD,EAAY,SAACC,EAAD,GAA6B,EAApBC,OAAoB,EAAZ5G,MAuBjC,OAAO2G,GAGH1K,EAAQN,IAAOO,GAAV,KAgBL2K,EAAOlL,IAAO4H,KAAV,KAgBJuD,EAAWnL,IAAO4H,KAAV,KAGE,SAAA9E,GAAK,OAAyB,IAApBA,EAAK,OAAsB,SAAW,YAWnDsI,EAAS,SAAAtI,GAAK,OACzB,4BAAQ2E,MAAO,CAAE4D,MAAOvI,EAAMwI,MAAQ,UAAY,YAC/CxI,EAAM0H,WAGEe,EAAO,SAAAzI,GAAK,OACvB,0BAAM2E,MAAO,CAAE4D,MAAOvI,EAAMwI,MAAQ,UAAY,YAC7CxI,EAAM0H,WAIEgB,EAAa,SAAA1I,GAAU,IAC1Bc,EAASd,EAATc,KACR,OAAI6H,MAAMC,QAAQ9H,IAASA,EAAKN,OAAS,EAErC,oCACGM,EAAKC,KAAI,SAACD,EAAM0E,GAAS,IA6DjB,EA3DL9E,EAMEI,EANFJ,MACAgE,EAKE5D,EALF4D,OACAmE,EAIE/H,EAJF+H,YACAC,EAGEhI,EAHFgI,WACAC,EAEEjI,EAFFiI,WACAC,EACElI,EADFkI,YAEF,GAAIF,EAAY,CAAC,IAAD,EACNG,EAA4BnI,EAA5BmI,SAAUC,EAAkBpI,EAAlBoI,cAClB,OACE,kBAAC,KAAD,GACEC,QAAQ,QADV,wBAEU,OAFV,oBAGO3D,GAHP,sBAIS,CAAEP,aAAc,QAJzB,GAME,kBAAC,IAAD,CACEH,KAAM,GACNH,MAAO,CACLwB,UAAW,MACXiD,UAAWL,GAA0B,UAGvC,0BAAMpE,MAAO,CAAEmC,SAAU,SAAWpG,IAEtC,kBAAC,IAAD,CACEoE,KAAM,EACNuE,OAAQ,EACR1E,MAAO,CACLwB,UAAW,MACXiD,UAAWF,GAAgC,UAG7C,0BAAMvE,MAAO,CAAEmC,SAAU,SACtB+B,EACGS,YAAoBL,GACpBA,EACEK,YAAoBL,EAAShH,QAAQ,cAAe,KACpD,SAGV,kBAAC,IAAD,CACE6C,KAAM,EACNuE,OAAQ,EACR1E,MAAO,CACLwB,UAAW,MACXiD,UAAWJ,GAA4B,UAGzC,0BAAMrE,MAAO,CAAEmC,SAAU,SACtB+B,EACGzH,WAAWsD,GACV1C,QAAQ,GACRC,QAAQ,wBAAyB,KAClCyC,KAMZ,OACE,kBAAC,KAAD,GACEyE,QAAQ,QADV,wBAEU,OAFV,oBAGO3D,GAHP,sBAIS,CAAEP,aAAc,QAJzB,GAME,kBAAC,IAAD,CACEH,KAAM,GACNH,MAAO,CACLwB,UAAW,MACXiD,UAAWL,GAA0B,UAGvC,0BAAMpE,MAAO,CAAEmC,SAAU,SAAWpG,IAEtC,kBAAC,IAAD,CACEoE,KAAM,EACNuE,OAAQ,EACR1E,MAAO,CACLwB,UAAW,MACXiD,UAAWJ,GAA4B,UAGzC,0BAAMrE,MAAO,CAAEmC,SAAU,SACtB+B,EACGzH,WAAWsD,GACV1C,QAAQ,GACRC,QAAQ,wBAAyB,KAClCyC,SAUb,MAIE6E,EAAY,SAAAvJ,GAAU,IACzBc,EAASd,EAATc,KACR,GAAI6H,MAAMC,QAAQ9H,IAASA,EAAKN,OAAS,EACvC,OACE,kBAAC,IAAD,CAAKuE,UAAU,mBAAmBoE,QAAQ,gBAAgBpL,KAAK,QAC5D+C,EAAKC,KAAI,SAACD,EAAM0E,GAAS,IAChB9E,EAAgBI,EAAhBJ,MAAO8I,EAAS1I,EAAT0I,KACf,OACE,kBAAC,IAAD,CAAK7E,MAAO,CAAEyE,UAAW,UAAY5D,IAAKA,GACxC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKb,MAAO,CAAEM,aAAc,SAC1B,0BAAMN,MAAO,CAAEmC,SAAU,SAAWpG,IAEtC,kBAAC,IAAD,KACE,0BAAMiE,MAAO,CAAEmC,SAAU,SACtB0C,EAAI,YACIA,EADJ,MAED,4DAYlBC,EAAMC,YAAcjC,GAgBXiC,gBAAc5B,I,oYElsB7B,IAAM6B,E,MAAuBzM,EAAOC,IAAV,KCCX,aAAA6C,GAAK,OAClB,kBAAC2J,EAAD,eACE5E,UACqB,MAAnB/E,EAAM+E,UAAN,UACO/E,EAAM+E,UADb,4BAEI,2BAEF/E,GAEHA,EAAM0H,Y,+HCNLkC,E,iLAEM,IACApG,EAASnC,KAAKrB,MAAMyD,KAApBD,KADD,EAEoBnC,KAAKrB,MAAxB6J,EAFD,EAECA,OAAQC,EAFT,EAESA,OACVhE,GAAWtC,GAAc,IAAzBsC,OAEN,OACE,kBAAC,IAAD,CACEjE,MAAOT,WAAWA,WAAWC,KAAKrB,MAAM6B,OAAOG,QAAQ,IACvD+H,YAAa,OACbC,kBAAmBlE,EAASA,EAAOmE,UAAY,IAC/CC,iBAAkBpE,EAASA,EAAOqE,QAAU,IAC5CC,aAActE,EAASuE,SAASvE,EAAOwE,WAAa,EACpDC,oBAAmBzE,GAA8C,IAArCuE,SAASvE,EAAO0E,iBAC5CX,OAAQA,QAAkBY,EAC1BX,OAAQA,QAAkBW,Q,GAhBD1D,aA+BlBE,gBACbC,aAPsB,SAAAxI,GACtB,MAAO,CACL+E,KAAM/E,EAAM+E,SAIDwD,CAIb2C,I,iCCpBahM,IArBC,CACdM,yBAA0B,SAACwM,EAAMC,EAAQ7M,EAAQ8M,GAAvB,MAA0C,CAClE7M,KAAM,sCACNC,QAAS,CACP0M,KAAMA,EACNC,OAAQA,EACR7M,OAAQA,EACR8M,mBAGJC,aAAc,iBAAO,CACnB9M,KAAM,kBAER+M,WAAY,iBAAO,CACjB/M,KAAM,gBAERgN,gBAAiB,iBAAO,CACtBhN,KAAM,wB,iCCKKH,IAtBC,CACdQ,kBAAmB,SAACsM,EAAMC,EAAQ7M,EAAQ8M,EAAeI,GAAtC,MAAiD,CAClEjN,KAAM,+BACNC,QAAS,CACP0M,KAAMA,EACNC,OAAQA,EACR7M,OAAQA,EACR8M,gBACAI,MAAOA,KAGXH,aAAc,iBAAO,CACnB9M,KAAM,kBAER+M,WAAY,iBAAO,CACjB/M,KAAM,gBAERgN,gBAAiB,iBAAO,CACtBhN,KAAM","file":"static/js/342.8245328d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst CenterContent = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n\r\n  &.span-chart {\r\n    flex: 1;\r\n    min-height: 230px;\r\n  }\r\n\r\n  .big-number {\r\n    font-weight: bold;\r\n    font-size: 1.7rem;\r\n    text-align: center;\r\n    span {\r\n      word-break: break-word;\r\n    }\r\n  }\r\n\r\n  .curr {\r\n    font-size: 1rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst DashboardWrapper = styled.div`\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  border: 1px solid #e2e2e2;\r\n  // margin-top: 10px;\r\n  padding: 10px 20px 20px;\r\n  width: 100%;\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n\r\n  .header-separator {\r\n    margin-top: 7px;\r\n\r\n    & > div {\r\n      background: none;\r\n      border: none;\r\n      margin: 7px 0 5px;\r\n      padding: 1rem 20px 0 0;\r\n}\r\n\r\n      h2 {\r\n        // border-bottom: 1px solid #e8e8e8;\r\n        padding-bottom: 0.2rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .dashboard-item {\r\n    height: 100%;\r\n    margin: 0.2rem;\r\n    & > div {\r\n      // border: none;\r\n      border-radius: 8px;\r\n      // box-shadow: 0px 0px 5px #dad8d8;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .carousel-wrapper {\r\n    display: block;\r\n  }\r\n\r\n  .ant-carousel .slick-slider {\r\n    background: none;\r\n    overflow: hidden;\r\n    padding-bottom: 1rem;\r\n    text-align: center;\r\n    // height: 160px;\r\n    // line-height: 160px;\r\n  }\r\n\r\n  .ant-carousel .slick-dots li button {\r\n    color: #000\r\n  }\r\n\r\n  .dashboard-item-revert {\r\n    & > div {\r\n      background-color: #2f5bb2;\r\n      color: #fff;\r\n\r\n      h4, h5, .ant-carousel .slick-dots li button, .big-number, .curr {\r\n        color: #fff !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .chart {\r\n    align-items: flex-end;\r\n    display: flex;\r\n    flex: 1;\r\n    min-height: 230px;\r\n    // padding: 1rem 1rem 0;\r\n  }\r\n\r\n  .ant-row > div {\r\n    margin-bottom: 3px;\r\n  }\r\n\r\n  .ant-col-8:first-child,\r\n  .ant-col-12:first-child {\r\n    .dashboard-item {\r\n      // margin: 0.5rem 0.5rem 0.5rem 0;\r\n    }\r\n  }\r\n\r\n  .ant-col-8:last-child,\r\n  .ant-col-12:last-child {\r\n    .dashboard-item {\r\n      // margin: 0.5rem 0 0.5rem 0.5rem;\r\n    }\r\n  }\r\n\r\n  .ant-col-8:nth-child(2) {\r\n    .dashboard-item {\r\n      // margin: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DateTime = styled.div`\r\n  // display: none;\r\n  align-items: flex-start;\r\n  display: flex;\r\n\r\n  div {\r\n    align-items: flex-end;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    text-align: right;\r\n  }\r\n\r\n  span {\r\n    font-size: 0.7rem;\r\n    text-align: right;\r\n    i {\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Form = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  // padding: 0 1rem;\r\n\r\n  label {\r\n    font-weight: bold;\r\n  }\r\n\r\n  label,\r\n  .ant-select-selection__rendered {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  align-items: flex-start;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  min-height: 50px;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst SubTitle = styled.h5`\r\n  color: #9a9a9a;\r\n  font-size: 0.7rem;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport {\r\n  CenterContent,\r\n  DashboardWrapper,\r\n  DateTime,\r\n  Form,\r\n  Header,\r\n  SubTitle,\r\n  Title\r\n};\r\n","const actions = {\r\n  getDashboardReports: filter => ({\r\n    type: \"GET_DASHBOARD_REPORTS_REQUEST\",\r\n    payload: {\r\n      filter: filter\r\n    }\r\n  })\r\n};\r\n\r\nexport default actions;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { Carousel, Col, Row, Select, Spin } from \"antd\";\r\nimport {\r\n  Bar\r\n  // HorizontalBar\r\n  // Line\r\n} from \"react-chartjs-2\";\r\n\r\nimport { Box } from \"./App/app.style\";\r\nimport {\r\n  CenterContent,\r\n  DashboardWrapper,\r\n  DateTime,\r\n  Form,\r\n  Header,\r\n  SubTitle,\r\n  Title\r\n} from \"./App/dashboard.style\";\r\nimport Button from \"../components/uielements/button\";\r\nimport LayoutContentWrapper from \"../components/utility/layoutWrapper\";\r\nimport IntlMessages from \"../components/utility/intlMessages\";\r\nimport NumberFormat from \"./App/NumberFormat\";\r\nimport getLanguage from \"./App/MyLanguange\"\r\n// import { changeLanguage } from \"../helpers/helper\";\r\n\r\n// actions\r\nimport dashboardActions from \"../redux/dashboard/actions\";\r\nimport fRActions from \"../redux/report/financialRatioReport/actions\";\r\nimport tIActions from \"../redux/report/topItemReport/actions\";\r\n\r\nconst { getDashboardReports } = dashboardActions;\r\nconst { getFinancialRatioReports } = fRActions;\r\nconst { getTopItemReports } = tIActions;\r\n\r\nconst Option = Select.Option;\r\n\r\nconst chartColor = {\r\n  red: \"rgb(255, 99, 132)\",\r\n  orange: \"rgb(255, 159, 64)\",\r\n  yellow: \"rgb(255, 205, 86)\",\r\n  green: \"rgb(75, 192, 192)\",\r\n  blue: \"#2f5bb2\",\r\n  purple: \"rgb(153, 102, 255)\",\r\n  grey: \"rgb(201, 203, 207)\"\r\n}\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    account_payables: null,\r\n    account_receivables: null,\r\n    doneCalcAccPay: false,\r\n    doneCalcAccRec: false,\r\n    doneCalcTotSales: false,\r\n    filter: {\r\n      end_date: moment().format(\"YYYY-MM-DD HH:mm:ss\"), // sales and ap ar reports\r\n      fixed_end_date: moment().format(\"YYYY-MM-DD HH:mm:ss\"), // finantial ratio reports\r\n      id_location: \"allLocation\",\r\n      limit: 5,\r\n      month_year: moment().startOf(\"month\"),\r\n      sort_by: \"total_qty\",\r\n      sort_type: \"desc\",\r\n      start_date: moment().subtract(3, \"month\").format(\"YYYY-MM-DD HH:mm:ss\")\r\n    },\r\n    topItemAmtBasedData: null,\r\n    topItemQtyBasedData: null,\r\n    totalSales: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {\r\n      getDashboardReports,\r\n      getFinancialRatioReports,\r\n      getTopItemReports\r\n    } = this.props;\r\n    const { filter } = this.state;\r\n    getDashboardReports(\"start_date=\" + filter.start_date + \"&end_date=\" + filter.end_date)\r\n    getFinancialRatioReports(1, null, \"year=\" + moment().format(\"YYYY\"));\r\n\r\n    // top item report - qty based\r\n    let filterString =\r\n      \"limit=\" +\r\n      5 +\r\n      \"&start_date=\" +\r\n      moment()\r\n        // .startOf(\"month\")\r\n        .subtract(3, \"month\") +\r\n      \"&end_date=\" +\r\n      filter.end_date +\r\n      \"&sort_by=total_qty&sort_type=desc\";\r\n    getTopItemReports(1, null, filterString, null, \"total_qty\");\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { loading } = this.props.dashboardReport;\r\n\r\n    if (!loading && this.props.dashboardReport !== prevProps.dashboardReport) {\r\n      this.generateChartDatas()\r\n    }\r\n  }\r\n\r\n  // config untuk chart dengan tipe bar\r\n  globalOptions(title) {\r\n    var options = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n              callback: function (value, index, values) {\r\n                return value.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              callback: function (value, index, values) {\r\n                if (value.length > 6) {\r\n                  return value.slice(0, 6) + \"...\";\r\n                } else return value;\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      hover: {\r\n        mode: 'nearest',\r\n        intersect: true\r\n      },\r\n      tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\r\n            // var title = data.labels[tooltipItem[0].datasetIndex];\r\n            // console.log(\"full ticksnya\", title);\r\n\r\n            if (label) {\r\n              label += \": \";\r\n            }\r\n            label += tooltipItem.yLabel\r\n              .toFixed(2)\r\n              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            return label;\r\n          },\r\n          title: function (t, d) {\r\n            return d.labels[t[0].index];\r\n          }\r\n        }\r\n      },\r\n      legend: { display: false },\r\n      title: {\r\n        display: true,\r\n        text: title\r\n      }\r\n    };\r\n    return options;\r\n  }\r\n\r\n  // handle filter chart.js\r\n  handleFilter = () => {\r\n    const { filter } = this.state;\r\n    const { id_location } = filter;\r\n    const start_date = moment().subtract(3, \"month\").format(\"YYYY-MM-DD HH:mm:ss\")\r\n    const end_date = moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n    const {\r\n      getDashboardReports\r\n    } = this.props;\r\n\r\n    if (id_location !== \"allLocation\") {\r\n      getDashboardReports(\"start_date=\" + start_date + \"&end_date=\" + end_date + \"&id_location=\" + id_location)\r\n    } else {\r\n      getDashboardReports(\"start_date=\" + start_date + \"&end_date=\" + end_date)\r\n    }\r\n\r\n    this.setState({ filter: { ...this.state.filter, start_date, end_date } })\r\n  };\r\n\r\n  // config untuk bar dengan multi Axes - horizontalBar\r\n  optionsHorBar(title) {\r\n    var options = {\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            type: \"linear\",\r\n            // position: \"top\",\r\n            ticks: {\r\n              beginAtZero: true,\r\n              callback: function (value, index, values) {\r\n                return value.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n              }\r\n            }\r\n          },\r\n          {\r\n            type: \"linear\",\r\n            // position: \"bottom\",\r\n            ticks: {\r\n              beginAtZero: true\r\n              // display: false\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: title\r\n      },\r\n      tooltips: {\r\n        // callbacks: {\r\n        //   label: function(tooltipItem, data) {\r\n        //     var value = data.datasets[0].data[tooltipItem.index];\r\n        //     value = value.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //     return value;\r\n        //   }\r\n        // },\r\n        mode: \"label\"\r\n      }\r\n    };\r\n    return options;\r\n  }\r\n\r\n  // generate sales, account receivables, account payables charts\r\n  generateChartDatas = () => {\r\n    // initiate\r\n    var topItemQtyBasedData, topItemAmtBasedData = null\r\n    var totalSales = 0;\r\n\r\n    const { dashboardReport } = this.props;\r\n    const {\r\n      account_payables,\r\n      account_receivables,\r\n      loading,\r\n      top_items_by_amount,\r\n      top_items_by_qty,\r\n      total_sales\r\n    } = dashboardReport;\r\n\r\n    // top sales (item)\r\n    // top sales item - qty\r\n    if (top_items_by_qty && top_items_by_qty.length > 0) {\r\n      topItemQtyBasedData = {\r\n        datasets: [\r\n          {\r\n            label: getLanguage({ id:\"totalQuantity\" }),\r\n            backgroundColor: [\r\n              chartColor.blue,\r\n              chartColor.red,\r\n              chartColor.orange,\r\n              chartColor.yellow,\r\n              chartColor.green\r\n            ],\r\n            data: top_items_by_qty.map(data => data.total_qty)\r\n          }\r\n        ],\r\n        labels: top_items_by_qty.map(data => data.item_name)\r\n      };\r\n    } else {\r\n      topItemQtyBasedData = {\r\n        datasets: [\r\n          {\r\n            label: getLanguage({ id:\"totalQuantity\" }),\r\n            backgroundColor: [],\r\n            data: []\r\n          }\r\n        ],\r\n        labels: []\r\n      };\r\n    }\r\n\r\n    // top sales item - amount\r\n    if (top_items_by_amount && top_items_by_amount.length > 0) {\r\n      topItemAmtBasedData = {\r\n        datasets: [\r\n          {\r\n            label: getLanguage({ id:\"totalAmountNilai\" }),\r\n            backgroundColor: [\r\n              chartColor.blue,\r\n              chartColor.red,\r\n              chartColor.orange,\r\n              chartColor.yellow,\r\n              chartColor.green\r\n            ],\r\n            data: top_items_by_amount.map(data => data.total_amount)\r\n          }\r\n        ],\r\n        labels: top_items_by_amount.map(data => data.item_name)\r\n      };\r\n    } else {\r\n      topItemAmtBasedData = {\r\n        datasets: [\r\n          {\r\n            label: getLanguage({ id:\"totalAmountNilai\" }),\r\n            backgroundColor: [],\r\n            data: []\r\n          }\r\n        ],\r\n        labels: []\r\n      };\r\n    }\r\n    // end of top sales (item)\r\n\r\n    // total sales\r\n    if (!loading) {\r\n      totalSales = parseFloat(total_sales);\r\n    }\r\n    // end of total sales\r\n\r\n    this.setState({\r\n      account_payables,\r\n      account_receivables,\r\n      doneCalcTotSales: true,\r\n      doneCalcAccRec: true,\r\n      doneCalcAccPay: true,\r\n      topItemQtyBasedData,\r\n      topItemAmtBasedData,\r\n      totalSales\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { user } = this.props.auth;\r\n    const { permissions } = user ? user : [];\r\n\r\n    // initiate\r\n    var cash_flow_daily_data,\r\n      current_ratio_data,\r\n      cash_turnover_data,\r\n      net_profit_data,\r\n      payable_turnover_data,\r\n      retained_earning_daily_data,\r\n      receivable_turnover_data = null;\r\n\r\n    // get foreign keys\r\n    const { locations } = this.props.topItemReport;\r\n\r\n    const { dashboardReport } = this.props;\r\n    const {\r\n      cash_flow,\r\n      loading,\r\n      retained_earning\r\n    } = dashboardReport;\r\n\r\n    const { account_payables,\r\n      account_receivables,\r\n      doneCalcTotSales,\r\n      doneCalcAccRec,\r\n      doneCalcAccPay,\r\n      topItemQtyBasedData,\r\n      topItemAmtBasedData,\r\n      totalSales } = this.state\r\n\r\n    if(topItemAmtBasedData){\r\n      topItemQtyBasedData.datasets[0].label= getLanguage({ id: \"totalQuantity\" })\r\n    }    \r\n    if (topItemAmtBasedData){\r\n      topItemAmtBasedData.datasets[0].label = getLanguage({ id: \"totalAmountNilai\" })\r\n    }\r\n\r\n    // financial ratio\r\n    const { financialRatioReport } = this.props;\r\n    const { financial_ratio_reports } = financialRatioReport;\r\n\r\n    if (financial_ratio_reports && financial_ratio_reports.length > 0) {\r\n      function generateDatas(id, label) {\r\n        var datas = financial_ratio_reports.find(data => data.id === id);\r\n        var exportDatas = {\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              backgroundColor: [chartColor.red, chartColor.blue],\r\n              data: [datas.last_ratio, datas.ratio]\r\n            }\r\n          ],\r\n          labels: [moment().format(\"YYYY\") - 1, moment().format(\"YYYY\")]\r\n        };\r\n        return exportDatas;\r\n      }\r\n      // net profit margin\r\n      net_profit_data = generateDatas(402, getLanguage({ id: \"financialRatioReports.netProfit\" }) + \" (%)\");\r\n\r\n      // current ratio\r\n      current_ratio_data = generateDatas(101, getLanguage({ id: \"financialRatioReports.currentRatio\" }) + \" (%)\");\r\n\r\n      // cash turnover\r\n      cash_turnover_data = generateDatas(104, getLanguage({ id: \"financialRatioReports.cashTurnover\" }) + \" (\" + getLanguage({ id: \"times\" }) + \")\");\r\n\r\n      // payable turnover\r\n      payable_turnover_data = generateDatas(303, getLanguage({ id: \"financialRatioReports.payableTurnover\" }) + \" (\" + getLanguage({ id: \"times\" }) + \")\");\r\n\r\n      // receivable turnover\r\n      receivable_turnover_data = generateDatas(\r\n        302,\r\n        getLanguage({ id: \"financialRatioReports.receivableTurnover\" }) + \" (\" + getLanguage({ id: \"times\" }) + \")\");\r\n    }\r\n    // end of financial ratio\r\n\r\n    // cash flow\r\n    if (cash_flow && cash_flow.length > 0) {\r\n      cash_flow_daily_data = {\r\n        datasets: [\r\n          {\r\n            label: getLanguage({ id: \"amount\" }) + \" (IDR)\",\r\n            backgroundColor: [\r\n              // chartColor.blue,\r\n              // chartColor.red,\r\n              // chartColor.orange,\r\n              chartColor.yellow,\r\n              chartColor.green,\r\n              // chartColor.gray,\r\n              chartColor.purple\r\n            ],\r\n            data: [cash_flow[0].cash_in, cash_flow[0].cash_out, cash_flow[0].net_movement]\r\n          }\r\n        ],\r\n        labels: [getLanguage({ id: \"cashIn\" }), getLanguage({ id: \"cashOut\" }), getLanguage({ id: \"netMovement\" })]\r\n      };\r\n    }\r\n    // end of cash flow\r\n\r\n    // retained earning\r\n    if (retained_earning && retained_earning.length > 0) {\r\n      retained_earning_daily_data = {\r\n        datasets: [\r\n          {\r\n            label: getLanguage({ id: \"amount\" }) + \" (IDR)\",\r\n            backgroundColor: chartColor.blue,\r\n            // [\r\n            // chartColor.blue,\r\n            // chartColor.red,\r\n            // chartColor.orange,\r\n            // chartColor.yellow,\r\n            // chartColor.green,\r\n            // chartColor.gray,\r\n            // chartColor.purple\r\n            // ],\r\n            data: retained_earning.map(data => data.amount)\r\n          }\r\n        ],\r\n        labels: [getLanguage({ id: \"january\" }), getLanguage({ id: \"february\" }), getLanguage({ id: \"march\" }), getLanguage({ id: \"april\" }), getLanguage({ id: \"may\" }), getLanguage({ id: \"june\" }), getLanguage({ id: \"july\" }), getLanguage({ id: \"august\" }), getLanguage({ id: \"september\" }), getLanguage({ id: \"october\" }), getLanguage({ id: \"november\" }), getLanguage({ id: \"december\" })]\r\n      };\r\n    }\r\n    // end of retained earning\r\n\r\n    // config untuk bar dengan multi Axes\r\n    // const optionsBar = {\r\n    //   responsive: true,\r\n    //   scales: {\r\n    //     yAxes: [\r\n    //       {\r\n    //         type: \"linear\",\r\n    //         position: \"left\"\r\n    //       },\r\n    //       {\r\n    //         type: \"linear\",\r\n    //         position: \"right\",\r\n    //         ticks: {\r\n    //           display: false\r\n    //         }\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   tooltips: {\r\n    //     mode: \"label\"\r\n    //   }\r\n    // };\r\n\r\n    return (\r\n      <LayoutContentWrapper style={{ minHeight: \"100vh\" }}>\r\n        {permissions && permissions.includes(\"Dashboard Report\") ?\r\n          (<>\r\n            <DashboardWrapper>\r\n              {/* separator */}\r\n              <Row>\r\n                <Col span={24}>\r\n                  <div className=\"header-separator\" style={{ width: \"100%\" }}>\r\n                    <Box>\r\n                      <h2>\r\n                        <IntlMessages id=\"dashboard.header\"></IntlMessages>\r\n                      </h2>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ marginBottom: \"1.5rem\" }}>\r\n                <Col span={12}>\r\n                  <Form>\r\n                    {/* <label>\r\n                  <IntlMessages id=\"locations.pageHeader\" />\r\n                </label> */}\r\n                    <Select\r\n                      showSearch\r\n                      filterOption={true}\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder={\r\n                        <IntlMessages id=\"select.location\" />\r\n                      }\r\n                      optionFilterProp=\"children\"\r\n                      onChange={e =>\r\n                        this.setState({\r\n                          filter: {\r\n                            ...this.state.filter,\r\n                            id_location: e\r\n                          }\r\n                        })\r\n                      }\r\n                      value={\r\n                        this.state.filter.id_location\r\n                          ? this.state.filter.id_location\r\n                          : []\r\n                      }\r\n                    // allowClear={true}\r\n                    >\r\n                      <Option key=\"allLocation\" value=\"allLocation\">\r\n                        <IntlMessages id=\"allLocations\" />\r\n                      </Option>\r\n                      {locations.map((data, key) => (\r\n                        <Option key={key} value={data.id_location}>\r\n                          {`${data.location_code} (${data.location_name})`}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      style={{ height: \"32px\", marginLeft: \"10px\" }}\r\n                      onClick={this.handleFilter}\r\n                    >\r\n                      <IntlMessages id=\"filter.only\" />\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* container: total sales, top sales item  - amt, top sales item - qty */}\r\n              <Row>\r\n                {/* top sales item - amount */}\r\n                <Col span={12}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages\r\n                              id=\"sales.topSalesItemAmt\"\r\n                              values={{ number: 5 }}\r\n                            ></IntlMessages>\r\n                          </Title>\r\n                          <SubTitle>\r\n                            <IntlMessages\r\n                              id=\"reportDateRange\"\r\n                              values={{\r\n                                fromDate: moment(this.state.filter.start_date)\r\n                                  .format(\"DD MMMM YYYY\"),\r\n                                toDate: moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")\r\n                              }}\r\n                            />\r\n                          </SubTitle>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!topItemAmtBasedData || loading ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <Bar\r\n                              width={480}\r\n                              height={350}\r\n                              data={topItemAmtBasedData}\r\n                              options={this.globalOptions(\r\n                                getLanguage({ id: \"topSalesItem\" }) + \" - \" + getLanguage({ id: \"totalAmount\" })\r\n                              )}\r\n                            />\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of:top sales item - amount */}\r\n\r\n                {/* top sales item - qty */}\r\n                <Col span={12}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages\r\n                              id=\"sales.topSalesItemQty\"\r\n                              values={{ number: 5 }}\r\n                            ></IntlMessages>\r\n                          </Title>\r\n                          <SubTitle>\r\n                            <IntlMessages\r\n                              id=\"reportDateRange\"\r\n                              values={{\r\n                                fromDate: moment()\r\n                                  // .startOf(\"month\")\r\n                                  .subtract(3, \"month\")\r\n                                  .format(\"DD MMMM YYYY\"),\r\n                                toDate: moment().format(\"DD MMMM YYYY\")\r\n                              }}\r\n                            />\r\n                          </SubTitle>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!topItemQtyBasedData || loading ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <Bar\r\n                              width={480}\r\n                              height={350}\r\n                              data={topItemQtyBasedData}\r\n                              options={this.globalOptions(\r\n                                getLanguage({ id: \"topSalesItem\" }) + \" - \" + getLanguage({ id: \"totalQuantity\" })\r\n                              )}\r\n                            />\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of:top sales item - qty */}\r\n              </Row>\r\n              {/* end of container: total sales, top sales item  - amt, top sales item - qty */}\r\n\r\n              <Row style={{ marginTop: \".2rem\" }}>\r\n                {/* total sales */}\r\n                <Col span={8}>\r\n                  <div className=\"dashboard-item dashboard-item-revert\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"sales.total\"></IntlMessages>\r\n                          </Title>\r\n                          <SubTitle>\r\n                            <IntlMessages\r\n                              id=\"asOf\"\r\n                            >{$txt => $txt + \" \" + moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</IntlMessages>\r\n                          </SubTitle>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <CenterContent className=\"span-chart\">\r\n                        <div>{!doneCalcTotSales || loading ? <Spin /> : \"\"}</div>\r\n                        <div className=\"big-number\">\r\n                          {totalSales ? <NumberFormat value={parseFloat(totalSales)}></NumberFormat> : \"0\"}\r\n                        </div>\r\n                        <div className=\"curr\">IDR (Indonesian Rupiah)</div>\r\n                      </CenterContent>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of: total sales */}\r\n                {/* cash flow (daily) */}\r\n                <Col span={8}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"sidebar.cashFlowReport\"></IntlMessages>\r\n                          </Title>\r\n                          <SubTitle>\r\n                            <IntlMessages\r\n                              id=\"asOf\"\r\n                            >{$txt => $txt + \" \" + moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</IntlMessages>\r\n                          </SubTitle>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!cash_flow_daily_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <>\r\n                              <Bar\r\n                                width={480}\r\n                                height={450}\r\n                                data={cash_flow_daily_data}\r\n                                options={this.globalOptions(getLanguage({ id: \"sidebar.cashFlowReport\" }))}\r\n                              />\r\n                            </>\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of: cash flow (daily) */}\r\n                <Col span={8}>\r\n                  {/* container: account receivable, bills to pay */}\r\n                  <Row style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}>\r\n                    {/* account receivable */}\r\n                    <Col span={24} style={{ marginBottom: \"0.1rem\", flex: \"1\" }}>\r\n                      <div className=\"dashboard-item\" style={{ marginBottom: \"0rem\" }}>\r\n                        <Box style={{ padding: \"20px 20px 10px\" }}>\r\n                          <Header>\r\n                            <div>\r\n                              <Title>\r\n                                <IntlMessages id=\"receivable\"></IntlMessages>\r\n                              </Title>\r\n                              <SubTitle>\r\n                                <IntlMessages\r\n                                  id=\"asOf\"\r\n                                >{$txt => $txt + \" \" + moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</IntlMessages>\r\n                              </SubTitle>\r\n                            </div>\r\n                            <DateTime>\r\n                              <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY HH:mm:ss\")}</span>\r\n                              <span>\r\n                                <i className=\"ion-clock\"></i>\r\n                              </span>\r\n                            </DateTime>\r\n                          </Header>\r\n                          <div>\r\n                            <div className=\"carousel-wrapper\">\r\n                              <div>{!doneCalcAccRec || loading ? <Spin /> : (\r\n                                <Carousel autoplay>\r\n                                  {account_receivables.length > 0 ? account_receivables.map((data, key) => (\r\n                                    <div key={key}>\r\n                                      <CenterContent style={{ padding: \".6rem 1rem\" }}>\r\n                                        <div className=\"big-number\">\r\n                                          {data.amount ? <NumberFormat value={parseFloat(data.amount)} /> : \"0\"}\r\n                                        </div>\r\n                                        <div className=\"curr\">{data.currency_code + \" \" + (data.currency_name ? \"(\" + data.currency_name + \")\" : \"\")}</div>\r\n                                      </CenterContent>\r\n                                    </div>)) : (\r\n                                      <CenterContent>\r\n                                        <div className=\"big-number\">\r\n                                          {\"0.00\"}\r\n                                        </div>\r\n                                        <div className=\"curr\">-</div>\r\n                                      </CenterContent>)\r\n                                  }\r\n                                </Carousel>\r\n                              )}</div>\r\n                            </div>\r\n                          </div>\r\n                        </Box>\r\n                      </div>\r\n                    </Col>\r\n                    {/* end of: account receivable */}\r\n                    {/* bills to pay */}\r\n                    <Col span={24} style={{ marginTop: \".1rem\", marginBottom: \"0rem\", flex: \"1\" }}>\r\n                      <div className=\"dashboard-item dashboard-item-revert\" style={{ marginBottom: \"0rem\" }}>\r\n                        <Box style={{ padding: \"20px 20px 10px\" }}>\r\n                          <Header>\r\n                            <div>\r\n                              <Title>\r\n                                <IntlMessages id=\"payable\"></IntlMessages>\r\n                              </Title>\r\n                              <SubTitle>\r\n                                <IntlMessages\r\n                                  id=\"asOf\"\r\n                                >{$txt => $txt + \" \" + moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</IntlMessages>\r\n                              </SubTitle>\r\n                            </div>\r\n                            <DateTime>\r\n                              <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY HH:mm:ss\")}</span>\r\n                              <span>\r\n                                <i className=\"ion-clock\"></i>\r\n                              </span>\r\n                            </DateTime>\r\n                          </Header>\r\n                          <div>\r\n                            <div className=\"carousel-wrapper\">\r\n                              <div>{!doneCalcAccPay || loading ? <Spin /> : (\r\n                                <Carousel autoplay>\r\n                                  {account_payables.length > 0 ? (account_payables.map((data, key) => (\r\n                                    <div key={key}>\r\n                                      <CenterContent style={{ padding: \".6rem 1rem\" }}>\r\n                                        <div className=\"big-number\">\r\n                                          {data.amount ? <NumberFormat value={parseFloat(data.amount)} /> : \"0\"}\r\n                                        </div>\r\n                                        <div className=\"curr\">{data.currency_code + \" \" + (data.currency_name ? \"(\" + data.currency_name + \")\" : \"\")}</div>\r\n                                      </CenterContent>\r\n                                    </div>))) : (\r\n                                      <CenterContent>\r\n                                        <div className=\"big-number\">\r\n                                          {\"0.00\"}\r\n                                        </div>\r\n                                        <div className=\"curr\">-</div>\r\n                                      </CenterContent>\r\n                                    )\r\n                                  }\r\n                                </Carousel>\r\n                              )}</div>\r\n                            </div>\r\n                          </div>\r\n                        </Box>\r\n                      </div>\r\n                    </Col>\r\n                    {/* end of: bills to pay */}\r\n                  </Row>\r\n                  {/* end of container: account receivable, bills to pay */}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row style={{ marginTop: \".2rem\" }}>\r\n                {/* retained earning */}\r\n                <Col span={24}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"sidebar.retainedEarningReport\"></IntlMessages>\r\n                          </Title>\r\n                          <SubTitle>\r\n                            <IntlMessages\r\n                              id=\"asOfYear\"\r\n                            >{$txt => $txt + \" \" + moment(this.state.filter.end_date).format(\"YYYY\")}</IntlMessages>\r\n                          </SubTitle>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!retained_earning_daily_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <>\r\n                              <Bar\r\n                                width={1000}\r\n                                height={350}\r\n                                data={retained_earning_daily_data}\r\n                                options={this.globalOptions(getLanguage({ id: \"sidebar.retainedEarningReport\" }))}\r\n                              />\r\n                            </>\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n\r\n                </Col>\r\n                {/* end of: retained earning */}\r\n              </Row>\r\n\r\n            </DashboardWrapper>\r\n            <DashboardWrapper style={{ marginTop: \"10px\" }}>\r\n              {/* separator */}\r\n              <Row>\r\n                <Col span={24}>\r\n                  <div className=\"header-separator\" style={{ width: \"100%\" }}>\r\n                    <Box>\r\n                      <h2 style={{ marginBottom: 0 }}>\r\n                        <IntlMessages id=\"sidebar.financialRatioReport\"></IntlMessages>\r\n                      </h2>\r\n                      <p style={{ paddingBottom: \".5rem\" }}><IntlMessages id=\"allLocations\" /></p>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* container: net profit margin, payable turnover, receivable turnover */}\r\n              <Row>\r\n                {/* cash turnover */}\r\n                <Col span={8}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"financialRatioReports.cashTurnover\"></IntlMessages>\r\n                          </Title>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!cash_turnover_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <>\r\n                              <Bar\r\n                                width={480}\r\n                                height={350}\r\n                                data={cash_turnover_data}\r\n                                options={this.globalOptions(\r\n                                  getLanguage({ id: \"financialRatioReports.cashTurnover\" }) + \" (\" + getLanguage({ id: \"lastYearAndPresent\" }) + \")\"\r\n                                )}\r\n                              />\r\n                            </>\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of: cash turnover */}\r\n                {/* payable turnover */}\r\n                <Col span={8}>\r\n                  {/* payable turnover */}\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"financialRatioReports.payableTurnover\"></IntlMessages>\r\n                          </Title>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!payable_turnover_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <>\r\n                              <Bar\r\n                                width={480}\r\n                                height={350}\r\n                                data={payable_turnover_data}\r\n                                options={this.globalOptions(\r\n                                  getLanguage({ id: \"financialRatioReports.payableTurnover\" }) + \" (\" + getLanguage({ id: \"lastYearAndPresent\" }) + \")\"\r\n                                )}\r\n                              />\r\n                            </>\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of payable turnover */}\r\n                {/* receivable turnover */}\r\n                <Col span={8}>\r\n                  {/* receivable ratio */}\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"financialRatioReports.receivableTurnover\"></IntlMessages>\r\n                          </Title>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!receivable_turnover_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <Bar\r\n                              width={480}\r\n                              height={350}\r\n                              data={receivable_turnover_data}\r\n                              options={this.globalOptions(\r\n                                getLanguage({ id: \"financialRatioReports.receivableTurnover\" }) + \" (\" + getLanguage({ id: \"lastYearAndPresent\" }) + \")\"\r\n                              )}\r\n                            />\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of receivable turnover */}\r\n              </Row>\r\n              {/*  end of: container: cash turnover, payable turnover, receivable turnover */}\r\n              {/* container: net profit margin, current ratio */}\r\n              <Row style={{ marginTop: \".2rem\" }}>\r\n                {/* net profit margin */}\r\n                <Col span={12}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"financialRatioReports.netProfit\"></IntlMessages>\r\n                          </Title>\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!net_profit_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <>\r\n                              <Bar\r\n                                width={480}\r\n                                height={350}\r\n                                data={net_profit_data}\r\n                                options={this.globalOptions(\r\n                                  getLanguage({ id: \"financialRatioReports.netProfit\" }) + \" (\" + getLanguage({ id: \"lastYearAndPresent\" }) + \")\"\r\n                                )}\r\n                              />\r\n                            </>\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of:net profit margin */}\r\n                {/* current ratio */}\r\n                <Col span={12}>\r\n                  <div className=\"dashboard-item\">\r\n                    <Box>\r\n                      <Header>\r\n                        <div>\r\n                          <Title>\r\n                            <IntlMessages id=\"financialRatioReports.currentRatio\"></IntlMessages>\r\n                          </Title>\r\n                          {/* <SubTitle>\r\n                        <IntlMessages id=\"sidebar.unit\">\r\n                          {txt => `${txt}: percent`}\r\n                        </IntlMessages>\r\n                      </SubTitle> */}\r\n                        </div>\r\n                        <DateTime>\r\n                          <div>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"DD MMMM YYYY\")}</span>\r\n                            <span>{moment(this.state.filter.fixed_end_date).format(\"HH:mm:ss\")}</span>\r\n                          </div>\r\n                          <span>\r\n                            <i className=\"ion-clock\"></i>\r\n                          </span>\r\n                        </DateTime>\r\n                      </Header>\r\n                      <div className=\"chart\">\r\n                        {!current_ratio_data ? (\r\n                          <Spin />\r\n                        ) : (\r\n                            <>\r\n                              <Bar\r\n                                width={480}\r\n                                height={350}\r\n                                data={current_ratio_data}\r\n                                options={this.globalOptions(\r\n                                  getLanguage({ id: \"financialRatioReports.currentRatio\" }) + \" (\" + getLanguage({ id: \"lastYearAndPresent\" }) + \")\"\r\n                                )}\r\n                              />\r\n                            </>\r\n                          )}\r\n                      </div>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n                {/* end of: current ratio */}\r\n              </Row>\r\n              {/* end of: container: cash turnover, current ratio */}\r\n            </DashboardWrapper>\r\n          </>)\r\n          : (\r\n            <DashboardWrapper>\r\n              {/* separator */}\r\n              <Row>\r\n                <Col span={24}>\r\n                  <div className=\"header-separator\" style={{ width: \"100%\" }}>\r\n                    <Box>\r\n                      <h2 style={{ marginBottom: 0, fontWeight: \"bold\", fontSize: \"2.5rem\" }}>\r\n                        <IntlMessages id=\"welcome\"></IntlMessages>\r\n                      </h2>\r\n                      <p style={{ paddingBottom: \".5rem\" }}><IntlMessages id=\"page.serverSettingTitle\" /></p>\r\n                    </Box>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </DashboardWrapper>\r\n          )}\r\n\r\n      </LayoutContentWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dashboardReport: state.dashboardReport,\r\n    financialRatioReport: state.financialRatioReport,\r\n    topItemReport: state.topItemReport,\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getDashboardReports,\r\n  getFinancialRatioReports,\r\n  getTopItemReports,\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(Dashboard);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${palette('text', 0)};\r\n  margin: 0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BoxSubTitle = styled.p`\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  color: ${palette('text', 3)};\r\n  line-height: 24px;\r\n`;\r\n\r\nexport { BoxTitle, BoxSubTitle };\r\n","import React from 'react';\r\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {props.title\r\n        ? <BoxTitle className=\"isoBoxTitle\">\r\n            {' '}{props.title}{' '}\r\n          </BoxTitle>\r\n        : ''}\r\n      {props.subtitle\r\n        ? <BoxSubTitle className=\"isoBoxSubTitle\">\r\n            {' '}{props.subtitle}{' '}\r\n          </BoxSubTitle>\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border: 1px solid ${palette('border', 0)};\r\n  margin: 0 0 30px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 20px;\r\n    ${'' /* margin: 0 10px 30px; */};\r\n  }\r\n\r\n  &.half {\r\n    width: calc(50% - 34px);\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { BoxWrapper };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\n// import theme from \"../../settings/themes/themedefault\";\r\nimport BoxComponent from \"../../components/utility/box\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\nimport { Row, Col } from \"antd\";\r\nimport { convertDiscountMask } from \"../../helpers/helper\";\r\n\r\nconst BoxWrapper = styled(BoxComponent)`\r\n  border-radius: 5px;\r\n\r\n  .isoInvoiceTableBtn {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .isoPageHeaderWrapper {\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .spinStyle {\r\n    text-align: center;\r\n    padding: 30px 50px;\r\n  }\r\n\r\n  .isoCode {\r\n    color: ${palette(\"text\", 1)};\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  .isoDetailDataFlex {\r\n    display: flex;\r\n    .isoColumn-1 {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    .isoColumn-2 {\r\n      width: 50%;\r\n    }\r\n    .isoColumn-3 {\r\n      width: 33%;\r\n    }\r\n  }\r\n\r\n  .isoFormGroupComp {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  .isoDetailDataBlock {\r\n    display: block;\r\n    .isoColumn {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .isoFilter {\r\n    margin-bottom: 30px;\r\n    .isoFilterContent {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .isoFormGroup {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    .isoInputCode-20 {\r\n      width: 20%;\r\n    }\r\n    .isoInputCode-30 {\r\n      width: 30%;\r\n    }\r\n    .isoInputCode-40 {\r\n      width: 40%;\r\n    }\r\n    .isoInputCode-50 {\r\n      width: 50%;\r\n    }\r\n    .isoInputCode-100 {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Fieldset = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 13px;\r\n  color: ${palette(\"text\", 1)};\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  margin: 0 0 8px;\r\n`;\r\n\r\nconst Form = styled.div``;\r\n\r\nconst StatusTag = styled.span`\r\n  padding: 0 5px;\r\n  height: 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n  text-transform: capitalize;\r\n\r\n  &.inside-form {\r\n    height: 25px;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span`\r\n  margin-right: 8px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  width: 10px;\r\n  height: 10px;\r\n  display: flex;\r\n  border-radius: 2%;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  color: #ffffff;\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst TransNo = styled.span`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  width: auto;\r\n  overflow: inherit;\r\n  position: relative;\r\n  .isoInvoiceTable {\r\n    table {\r\n      tbody {\r\n        tr {\r\n          td {\r\n            .isoInvoiceBtnView {\r\n              display: flex;\r\n              flex-direction: row;\r\n              > a {\r\n                margin: ${props =>\r\n    props[\"data-rtl\"] === \"rtl\" ? \"0 0 0 15px\" : \"0 15px 0 0\"};\r\n              }\r\n            }\r\n          }\r\n          &:hover {\r\n            .isoInvoiceBtnView {\r\n              ${\"\" /* opacity: 1; */};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .invoiceListTable {\r\n    .ant-dropdown-menu-item,\r\n    .ant-dropdown-menu-submenu-title {\r\n      &:hover {\r\n        background-color: ${palette(\"secondary\", 1)};\r\n      }\r\n    }\r\n\r\n    .invoiceViewBtn {\r\n      color: ${palette(\"text\", 3)};\r\n\r\n      &:hover {\r\n        color: ${palette(\"primary\", 0)};\r\n      }\r\n    }\r\n\r\n    .invoiceMrBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"grayscale\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"grayscale\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceDltBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"error\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"error\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRestBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"secondary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"secondary\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRstBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"success\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"success\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceEdtBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"primary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"primary\", 2)};\r\n      }\r\n  }\r\n}`;\r\n\r\nconst customCollapseStyle = {\r\n  background: \"#F1F3F6\",\r\n  marginBottom: \"-7px\"\r\n  // background: \"#797979\"\r\n};\r\n\r\nconst customPanelStyle = {\r\n  // background: \"#f7f7f7\",\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  // border: 1,\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst customDot = (icon, { status, title }) => {\r\n  // if (status && title === \"Pending\") {\r\n  //   return <span className=\"ant-steps-icon-dot\" />;\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Processed\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[4] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Cancelled\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[3] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  return icon;\r\n};\r\n\r\nconst Title = styled.h4`\r\n  text-align: center;\r\n  color: rgba(0, 0, 0, 0.85);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  font-variant: tabular-nums;\r\n  font-variant-ligatures: normal;\r\n  font-variant-caps: normal;\r\n  font-variant-numeric: tabular-nums;\r\n  font-variant-east-asian: normal;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 14px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n\r\n  &.company-name {\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n\r\nconst MiniText = styled.span`\r\n  margin-bottom: 1em;\r\n  font-weight: 400;\r\n  font-style: ${props => (props[\"italic\"] === true ? \"italic\" : \"normal\")};\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 10px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n`;\r\n\r\nexport const Strong = props => (\r\n  <strong style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </strong>\r\n);\r\nexport const Span = props => (\r\n  <span style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </span>\r\n);\r\n\r\nexport const TotalField = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <>\r\n        {data.map((data, key) => {\r\n          const {\r\n            label,\r\n            amount,\r\n            parseAmount,\r\n            isDiscount,\r\n            labelAlign,\r\n            amountAlign\r\n          } = data;\r\n          if (isDiscount) {\r\n            const { discount, discountAlign } = data;\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={10}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={4}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: discountAlign ? discountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? convertDiscountMask(discount)\r\n                      : discount\r\n                        ? convertDiscountMask(discount.replace(/\\$\\s?|(,*)/g, \"\"))\r\n                        : \"0.00\"}\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          } else {\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={15}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const Signature = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <Row className=\"avoid-page-break\" justify=\"space-between\" type=\"flex\">\r\n        {data.map((data, key) => {\r\n          const { label, name } = data;\r\n          return (\r\n            <Col style={{ textAlign: \"center\" }} key={key}>\r\n              <Row>\r\n                <Col style={{ marginBottom: \"84px\" }}>\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col>\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {name\r\n                      ? `( ${name} )`\r\n                      : \"(..............................................)\"}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nconst Box = WithDirection(BoxWrapper);\r\nexport {\r\n  Box,\r\n  StatusTag,\r\n  StatusBadge,\r\n  TransNo,\r\n  Fieldset,\r\n  Form,\r\n  Label,\r\n  customCollapseStyle,\r\n  customPanelStyle,\r\n  customDot,\r\n  Title,\r\n  Text,\r\n  MiniText\r\n};\r\nexport default WithDirection(CardWrapper);\r\n","import React from 'react';\r\nimport BoxTitleWrapper from './boxTitle';\r\nimport { BoxWrapper } from './box.style';\r\n\r\nexport default props => (\r\n  <BoxWrapper\r\n    className={`${props.className} isoBoxWrapper`}\r\n    style={props.style}\r\n  >\r\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\r\n    {props.children}\r\n  </BoxWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 10px 20px 10px 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from \"react\";\r\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\r\n\r\nexport default props => (\r\n  <LayoutContentWrapper\r\n    className={\r\n      props.className != null\r\n        ? `${props.className} isoLayoutContentWrapper`\r\n        : \"isoLayoutContentWrapper\"\r\n    }\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </LayoutContentWrapper>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n\r\nclass GlobalNumberFormat extends Component {\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { prefix, suffix } = this.props;\r\n    let { number } = user ? user : [];\r\n\r\n    return (\r\n      <NumberFormat\r\n        value={parseFloat(parseFloat(this.props.value).toFixed(6))}\r\n        displayType={'text'}\r\n        thousandSeparator={number ? number.separator : ','}\r\n        decimalSeparator={number ? number.decimal : '.'}\r\n        decimalScale={number ? parseInt(number.precision) : 2}\r\n        fixedDecimalScale={number ? parseInt(number.fixed_precision) === 1 ? true : false : false}\r\n        prefix={prefix ? prefix : undefined}\r\n        suffix={suffix ? suffix : undefined}\r\n      />\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n  )\r\n)(GlobalNumberFormat);\r\n","const actions = {\r\n  getFinancialRatioReports: (page, search, filter, filter_select) => ({\r\n    type: \"GET_FINANCIAL_RATIO_REPORTS_REQUEST\",\r\n    payload: {\r\n      page: page,\r\n      search: search,\r\n      filter: filter,\r\n      filter_select\r\n    }\r\n  }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\nexport default actions;\r\n","const actions = {\r\n  getTopItemReports: (page, search, filter, filter_select, based) => ({\r\n    type: \"GET_TOP_ITEM_REPORTS_REQUEST\",\r\n    payload: {\r\n      page: page,\r\n      search: search,\r\n      filter: filter,\r\n      filter_select,\r\n      based: based //sort_by: quantity based or amount based\r\n    }\r\n  }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\nexport default actions;\r\n"],"sourceRoot":""}