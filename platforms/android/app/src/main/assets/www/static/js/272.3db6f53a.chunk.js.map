{"version":3,"sources":["containers/Modules/GeneralLedger/Default/updateEquityForm.js","containers/Modules/GeneralLedger/Default/updateDebitCreditForm.js","containers/Modules/GeneralLedger/Default/updateDirectSalesForm.js","containers/Modules/GeneralLedger/Default/updateItemForm.js","containers/Modules/GeneralLedger/Default/update.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","containers/App/app.style.js","components/utility/box.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/utility/pageHeader.style.js","components/utility/pageHeader.js","redux/generalLedger/generalLedger/actions.js"],"names":["Option","Select","GeneralLedgerEquityForm","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","value","updateGeneralLedger","gl_configuration_name","id_account","opening_balance","retained_earning","income_summary","getFieldDecorator","this","generalLedger","loading","loadingSubmit","data","general_ledgers","map","formItemLayout","labelCol","xs","span","sm","wrapperCol","className","size","layout","onSubmit","style","padding","Item","label","id","initialValue","rules","required","message","showSearch","optionFilterProp","accounts","key","id_account_type","account_code","account_name","offset","type","htmlType","marginTop","marginLeft","Component","WrappedGeneralLedgerEquityForm","Form","create","name","compose","connect","state","actions","GeneralLedgerDebitCreditForm","debit_memo","deposit_paid","payable","WrappedGeneralLedgerDebitCreditForm","GeneralLedgerDirectSalesForm","credit_memo","customer_deposit","direct_sales","delivery_order","receivable","display","WrappedGeneralLedgerDirectSalesForm","GeneralLedgerItemForm","inventory","sales","item_discount","sales_return","cogs","expense","unbilled_goods","WrappedGeneralLedgerItemForm","TabPane","Tabs","UpdateGeneralLedger","componentDidMount","getGeneralLedgers","error","notification","clearError","success","clearSuccess","title","margin","onClick","history","replace","defaultActiveKey","tab","auth","BoxTitle","styled","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","div","children","StatusTag","StatusBadge","TransNo","CardWrapper","customCollapseStyle","background","marginBottom","customDot","icon","status","Title","h4","Text","MiniText","Strong","color","Span","TotalField","Array","isArray","length","amount","parseAmount","isDiscount","labelAlign","amountAlign","discount","discountAlign","justify","textAlign","fontSize","convertDiscountMask","parseFloat","toFixed","Signature","Box","WithDirection","LayoutContentWrapper","WDComponentTitleWrapper","h1","ComponentTitleWrapper","payload","body","clearErrorField"],"mappings":"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","file":"static/js/272.3db6f53a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n//import moment from \"moment\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Row, Col, Select, Spin } from \"antd\";\r\nimport actions from \"../../../../redux/generalLedger/generalLedger/actions\";\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n\r\nclass GeneralLedgerEquityForm extends Component {\r\n\r\n  handleSubmit = e => {\r\n    //console.log(\"Masuk Pak\")\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, value) => {\r\n      if (!err) {\r\n        const { updateGeneralLedger } = this.props;\r\n\r\n        let values = [\r\n          {\r\n            gl_configuration_name: \"opening_balance\",\r\n            id_account: value.opening_balance\r\n          },\r\n          {\r\n            gl_configuration_name: \"retained_earning\",\r\n            id_account: value.retained_earning\r\n          },\r\n          {\r\n            gl_configuration_name: \"income_summary\",\r\n            id_account: value.income_summary\r\n          },\r\n        ]\r\n        // console.log(values);\r\n        updateGeneralLedger(values);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n   // console.log(this.props.generalLedger);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { generalLedger } = this.props;\r\n    const { loading, loadingSubmit } = generalLedger;\r\n    const data = generalLedger.general_ledgers ? generalLedger.general_ledgers : [];\r\n\r\n    // const used = data.is_used;\r\n    // const error = generalLedger.errorField ? generalLedger.errorField : [];\r\n    let opening_balance=null;\r\n    let retained_earning=null;\r\n    let income_summary=null;\r\n\r\n    // console.log(data);\r\n\r\n    data.map((data) => {\r\n      if(data.gl_configuration_name === \"opening_balance\"){\r\n        opening_balance = data.id_account\r\n      }\r\n      if(data.gl_configuration_name === \"retained_earning\"){\r\n        retained_earning = data.id_account\r\n      }\r\n      if(data.gl_configuration_name === \"income_summary\"){\r\n        income_summary = data.id_account\r\n      }\r\n    })\r\n    \r\n    // {data.is_taxable!==undefined \r\n    //   ? this.setState({is_taxable: 1})\r\n    //   : this.setState({is_taxable: null})\r\n    // }\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.generalLedger.loading  ? (\r\n            <div className=\"spinStyle\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          ) : (\r\n\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        {/* {used ? (\r\n          <Row style={{ marginBottom: \"20px\" }}>\r\n            <Col span={24}>\r\n              <Alert\r\n                message={<IntlMessages id=\"generalLedger.help\" />}\r\n                type=\"warning\"\r\n                showIcon\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 15px 0 0\" }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"openingBalanceAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"opening_balance\", {\r\n                initialValue: opening_balance,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={this.props.generalLedger.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  // disabled={used ? true : false}\r\n                >\r\n                  {this.props.generalLedger.accounts.map((data, key) => (\r\n                    data.id_account_type === \"13\"\r\n                      ? (<Option key={key} value={data.id_account}>\r\n                          {data.account_code + \" (\" + data.account_name +\")\"}\r\n                        </Option>)\r\n                      : null\r\n                    \r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"retainedEarningAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"retained_earning\", {\r\n                initialValue: retained_earning,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={this.props.generalLedger.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  // disabled={used ? true : false}\r\n                >\r\n                  {this.props.generalLedger.accounts.map((data, key) => (\r\n                    data.id_account_type === \"13\"\r\n                      ? (<Option key={key} value={data.id_account}>\r\n                          {data.account_code + \" (\" + data.account_name +\")\"}\r\n                        </Option>)\r\n                      : null\r\n                    \r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"incomeSummaryAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"income_summary\", {\r\n                initialValue: income_summary,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={this.props.generalLedger.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  // disabled={used ? true : false}\r\n                >\r\n                  {this.props.generalLedger.accounts.map((data, key) => (\r\n                    data.id_account_type === \"13\"\r\n                      ? (<Option key={key} value={data.id_account}>\r\n                          {data.account_code + \" (\" + data.account_name +\")\"}\r\n                        </Option>)\r\n                      : null\r\n                    \r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col>\r\n          <Form.Item {...tailFormItemLayout}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ marginTop: \"20px\", marginLeft: \"50px\" }}\r\n            loading={loading || loadingSubmit}\r\n          >\r\n            <IntlMessages id=\"button.submit\" />\r\n          </Button>\r\n        </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        \r\n      </Form>\r\n      )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedGeneralLedgerEquityForm = Form.create({\r\n  name: \"general_ledger_equity\"\r\n})(GeneralLedgerEquityForm);\r\n\r\n//export default WrappedGeneralLedgerEquityForm;\r\n\r\nconst mapStateToProps = state => {\r\n  return { generalLedger: state.generalLedger };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    actions\r\n  )\r\n)(WrappedGeneralLedgerEquityForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n//import moment from \"moment\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Row, Col, Select, Spin } from \"antd\";\r\nimport actions from \"../../../../redux/generalLedger/generalLedger/actions\";\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n\r\nclass GeneralLedgerDebitCreditForm extends Component {\r\n  handleSubmit = e => {\r\n    //console.log(\"Masuk Pak\")\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, value) => {\r\n      if (!err) {\r\n        const { updateGeneralLedger } = this.props;\r\n\r\n        let values = [\r\n          {\r\n            gl_configuration_name: \"debit_memo\",\r\n            id_account: value.debit_memo\r\n          },\r\n          {\r\n            gl_configuration_name: \"deposit_paid\",\r\n            id_account: value.deposit_paid\r\n          },\r\n          {\r\n            gl_configuration_name: \"payable\",\r\n            id_account: value.payable\r\n          }\r\n        ];\r\n        // console.log(values);\r\n        updateGeneralLedger(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.generalLedger);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { generalLedger } = this.props;\r\n    const { loading, loadingSubmit } = generalLedger;\r\n    const data = generalLedger.general_ledgers\r\n      ? generalLedger.general_ledgers\r\n      : [];\r\n\r\n    // const used = data.is_used;\r\n    // const error = generalLedger.errorField ? generalLedger.errorField : [];\r\n    let debit_memo = null;\r\n    let deposit_paid = null;\r\n    let payable = null;\r\n    // console.log(data);\r\n\r\n    data.map(data => {\r\n      if (data.gl_configuration_name === \"debit_memo\") {\r\n        debit_memo = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"deposit_paid\") {\r\n        deposit_paid = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"payable\") {\r\n        payable = data.id_account;\r\n      }\r\n    });\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    // const formTextArea = {\r\n    //   labelCol: {\r\n    //     xs: { span: 24 },\r\n    //     sm: { span: 24 }\r\n    //   },\r\n    //   wrapperCol: {\r\n    //     xs: { span: 24 },\r\n    //     sm: { span: 24 }\r\n    //   }\r\n    // };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.generalLedger.loading ? (\r\n          <div className=\"spinStyle\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : (\r\n          <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n            <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n              <div\r\n                className=\"isoColumn-2 isoFormGroupComp\"\r\n                style={{ padding: \"0 15px 0 0\" }}\r\n              >\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"currencies.add.payableAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"payable\", {\r\n                    initialValue: payable,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"09\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"debitMemoAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"debit_memo\", {\r\n                    initialValue: debit_memo,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"04\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"isoColumn-2 isoFormGroupComp\"\r\n                style={{ padding: \"0 0 0 15px\" }}\r\n              >\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"depositPaidAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"deposit_paid\", {\r\n                    initialValue: deposit_paid,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"03\" ||\r\n                        data.id_account_type === \"05\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginTop: \"20px\", marginLeft: \"50px\" }}\r\n                    loading={loading || loadingSubmit}\r\n                  >\r\n                    <IntlMessages id=\"button.submit\" />\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedGeneralLedgerDebitCreditForm = Form.create({\r\n  name: \"general_ledger_debit_credit\"\r\n})(GeneralLedgerDebitCreditForm);\r\n\r\n//export default WrappedGeneralLedgerDebitCreditForm;\r\n\r\nconst mapStateToProps = state => {\r\n  return { generalLedger: state.generalLedger };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, actions))(\r\n  WrappedGeneralLedgerDebitCreditForm\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n//import moment from \"moment\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Row, Col, Select, Spin } from \"antd\";\r\nimport actions from \"../../../../redux/generalLedger/generalLedger/actions\";\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n\r\nclass GeneralLedgerDirectSalesForm extends Component {\r\n  handleSubmit = e => {\r\n    //console.log(\"Masuk Pak\")\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, value) => {\r\n      if (!err) {\r\n        const { updateGeneralLedger } = this.props;\r\n\r\n        let values = [\r\n          {\r\n            gl_configuration_name: \"credit_memo\",\r\n            id_account: value.credit_memo\r\n          },\r\n          {\r\n            gl_configuration_name: \"customer_deposit\",\r\n            id_account: value.customer_deposit\r\n          },\r\n          {\r\n            gl_configuration_name: \"direct_sales\",\r\n            id_account: value.direct_sales\r\n          },\r\n          {\r\n            gl_configuration_name: \"delivery_order\",\r\n            id_account: value.delivery_order\r\n          },\r\n          {\r\n            gl_configuration_name: \"receivable\",\r\n            id_account: value.receivable\r\n          }\r\n        ];\r\n        // console.log(values);\r\n        updateGeneralLedger(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.generalLedger);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { generalLedger } = this.props;\r\n    const { loading, loadingSubmit } = generalLedger;\r\n    const data = generalLedger.general_ledgers\r\n      ? generalLedger.general_ledgers\r\n      : [];\r\n\r\n    // const used = data.is_used;\r\n    // const error = generalLedger.errorField ? generalLedger.errorField : [];\r\n    let credit_memo = null;\r\n    let customer_deposit = null;\r\n    let direct_sales = null;\r\n    let delivery_order = null;\r\n    let receivable = null;\r\n    // console.log(data);\r\n\r\n    data.map(data => {\r\n      if (data.gl_configuration_name === \"credit_memo\") {\r\n        credit_memo = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"customer_deposit\") {\r\n        customer_deposit = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"direct_sales\") {\r\n        direct_sales = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"delivery_order\") {\r\n        delivery_order = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"receivable\") {\r\n        receivable = data.id_account;\r\n      }\r\n    });\r\n\r\n    // {data.is_taxable!==undefined\r\n    //   ? this.setState({is_taxable: 1})\r\n    //   : this.setState({is_taxable: null})\r\n    // }\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    // const formTextArea = {\r\n    //   labelCol: {\r\n    //     xs: { span: 24 },\r\n    //     sm: { span: 24 }\r\n    //   },\r\n    //   wrapperCol: {\r\n    //     xs: { span: 24 },\r\n    //     sm: { span: 24 }\r\n    //   }\r\n    // };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.generalLedger.loading ? (\r\n          <div className=\"spinStyle\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : (\r\n          <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n            {/* {used ? (\r\n          <Row style={{ marginBottom: \"20px\" }}>\r\n            <Col span={24}>\r\n              <Alert\r\n                message={<IntlMessages id=\"generalLedger.help\" />}\r\n                type=\"warning\"\r\n                showIcon\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n            <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n              <div\r\n                className=\"isoColumn-2 isoFormGroupComp\"\r\n                style={{ padding: \"0 15px 0 0\" }}\r\n              >\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"currencies.add.receivableAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"receivable\", {\r\n                    initialValue: receivable,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"03\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"creditMemoAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"credit_memo\", {\r\n                    initialValue: credit_memo,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"14\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  style={{ display: \"none\" }}\r\n                  label={<IntlMessages id=\"directSalesAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"direct_sales\", {\r\n                    initialValue: direct_sales,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"14\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"isoColumn-2 isoFormGroupComp\"\r\n                style={{ padding: \"0 0 0 15px\" }}\r\n              >\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"customerDepositAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"customer_deposit\", {\r\n                    initialValue: customer_deposit,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"09\" ||\r\n                        data.id_account_type === \"10\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"deliveryOrderAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"delivery_order\", {\r\n                    initialValue: delivery_order,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"03\" ||\r\n                        data.id_account_type === \"04\" ||\r\n                        data.id_account_type === \"05\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginTop: \"20px\", marginLeft: \"50px\" }}\r\n                    loading={loading || loadingSubmit}\r\n                  >\r\n                    <IntlMessages id=\"button.submit\" />\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedGeneralLedgerDirectSalesForm = Form.create({\r\n  name: \"general_ledger_direct_sales\"\r\n})(GeneralLedgerDirectSalesForm);\r\n\r\n//export default WrappedGeneralLedgerDirectSalesForm;\r\n\r\nconst mapStateToProps = state => {\r\n  return { generalLedger: state.generalLedger };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, actions))(\r\n  WrappedGeneralLedgerDirectSalesForm\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n//import moment from \"moment\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Row, Col, Select, Spin } from \"antd\";\r\nimport actions from \"../../../../redux/generalLedger/generalLedger/actions\";\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n\r\nclass GeneralLedgerItemForm extends Component {\r\n  handleSubmit = e => {\r\n    //console.log(\"Masuk Pak\")\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, value) => {\r\n      if (!err) {\r\n        const { updateGeneralLedger } = this.props;\r\n\r\n        let values = [\r\n          {\r\n            gl_configuration_name: \"inventory\",\r\n            id_account: value.inventory\r\n          },\r\n          {\r\n            gl_configuration_name: \"sales\",\r\n            id_account: value.sales\r\n          },\r\n          {\r\n            gl_configuration_name: \"item_discount\",\r\n            id_account: value.item_discount\r\n          },\r\n          {\r\n            gl_configuration_name: \"sales_return\",\r\n            id_account: value.sales_return\r\n          },\r\n          {\r\n            gl_configuration_name: \"cogs\",\r\n            id_account: value.cogs\r\n          },\r\n          // {\r\n          //   gl_configuration_name: \"purchase_return\",\r\n          //   id_account: value.purchase_return\r\n          // },\r\n          // {\r\n          //   gl_configuration_name: \"purchase_return_freight_in\",\r\n          //   id_account: value.purchase_return_freight_in\r\n          // },\r\n          {\r\n            gl_configuration_name: \"expense\",\r\n            id_account: value.expense\r\n          },\r\n          {\r\n            gl_configuration_name: \"unbilled_goods\",\r\n            id_account: value.unbilled_goods\r\n          }\r\n        ];\r\n        // console.log(values);\r\n        updateGeneralLedger(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.generalLedger);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { generalLedger } = this.props;\r\n    const { loading, loadingSubmit } = generalLedger;\r\n    const data = generalLedger.general_ledgers\r\n      ? generalLedger.general_ledgers\r\n      : [];\r\n\r\n    // const used = data.is_used;\r\n    // const error = generalLedger.errorField ? generalLedger.errorField : [];\r\n    let inventory = null;\r\n    let sales = null;\r\n    let item_discount = null;\r\n    let sales_return = null;\r\n    let cogs = null;\r\n    // let purchase_return = null;\r\n    // let purchase_return_freight_in = null;\r\n    let expense = null;\r\n    let unbilled_goods = null;\r\n\r\n    // console.log(data);\r\n\r\n    data.map(data => {\r\n      if (data.gl_configuration_name === \"inventory\") {\r\n        inventory = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"sales\") {\r\n        sales = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"item_discount\") {\r\n        item_discount = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"sales_return\") {\r\n        sales_return = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"cogs\") {\r\n        cogs = data.id_account;\r\n      }\r\n      // if (data.gl_configuration_name === \"purchase_return\") {\r\n      //   purchase_return = data.id_account;\r\n      // }\r\n      // if (data.gl_configuration_name === \"purchase_return_freight_in\") {\r\n      //   purchase_return_freight_in = data.id_account;\r\n      // }\r\n      if (data.gl_configuration_name === \"expense\") {\r\n        expense = data.id_account;\r\n      }\r\n      if (data.gl_configuration_name === \"unbilled_goods\") {\r\n        unbilled_goods = data.id_account;\r\n      }\r\n    });\r\n\r\n    // {data.is_taxable!==undefined\r\n    //   ? this.setState({is_taxable: 1})\r\n    //   : this.setState({is_taxable: null})\r\n    // }\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.generalLedger.loading ? (\r\n          <div className=\"spinStyle\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        ) : (\r\n          <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n            <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n              <div\r\n                className=\"isoColumn-2 isoFormGroupComp\"\r\n                style={{ padding: \"0 15px 0 0\" }}\r\n              >\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"inventoryAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"inventory\", {\r\n                    initialValue: inventory,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"04\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"salesAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"sales\", {\r\n                    initialValue: sales,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"14\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"itemDiscountAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"item_discount\", {\r\n                    initialValue: item_discount,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"14\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"salesReturnAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"sales_return\", {\r\n                    initialValue: sales_return,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"14\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </div>\r\n              <div\r\n                className=\"isoColumn-2 isoFormGroupComp\"\r\n                style={{ padding: \"0 0 0 15px\" }}\r\n              >\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"cogsAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"cogs\", {\r\n                    initialValue: cogs,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"15\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {/* <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"purchaseReturnAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"purchase_return\", {\r\n                initialValue: purchase_return,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={this.props.generalLedger.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                >\r\n                  {this.props.generalLedger.accounts.map((data, key) => (\r\n                    data.id_account_type === \"04\" ||\r\n                    data.id_account_type === \"16\"\r\n                      ? (<Option key={key} value={data.id_account}>\r\n                          {data.account_code + \" (\" + data.account_name +\")\"}\r\n                        </Option>)\r\n                      : null\r\n                    \r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item> */}\r\n\r\n                {/* <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"purchaseReturnFreightInAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"purchase_return_freight_in\", {\r\n                initialValue: purchase_return_freight_in,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={this.props.generalLedger.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                >\r\n                  {this.props.generalLedger.accounts.map((data, key) => (\r\n                    data.id_account_type === \"04\" ||\r\n                    data.id_account_type === \"16\"\r\n                      ? (<Option key={key} value={data.id_account}>\r\n                          {data.account_code + \" (\" + data.account_name +\")\"}\r\n                        </Option>)\r\n                      : null\r\n                    \r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item> */}\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"expenseAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"expense\", {\r\n                    initialValue: expense,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"16\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"unbilledGoodsAccount\" />}\r\n                >\r\n                  {getFieldDecorator(\"unbilled_goods\", {\r\n                    initialValue: unbilled_goods,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.generalLedger.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      // disabled={used ? true : false}\r\n                    >\r\n                      {this.props.generalLedger.accounts.map((data, key) =>\r\n                        data.id_account_type === \"10\" ? (\r\n                          <Option key={key} value={data.id_account}>\r\n                            {data.account_code + \" (\" + data.account_name + \")\"}\r\n                          </Option>\r\n                        ) : null\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginTop: \"20px\", marginLeft: \"50px\" }}\r\n                    loading={loading || loadingSubmit}\r\n                  >\r\n                    <IntlMessages id=\"button.submit\" />\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedGeneralLedgerItemForm = Form.create({\r\n  name: \"general_ledger_item\"\r\n})(GeneralLedgerItemForm);\r\n\r\n//export default WrappedGeneralLedgerItemForm;\r\n\r\nconst mapStateToProps = state => {\r\n  return { generalLedger: state.generalLedger };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, actions))(\r\n  WrappedGeneralLedgerItemForm\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nimport EquityForm from \"./updateEquityForm\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport DebitCreditForm from \"./updateDebitCreditForm\";\r\nimport DirectSalesForm from \"./updateDirectSalesForm\";\r\nimport ItemForm from \"./updateItemForm\";\r\n\r\nimport { Tabs } from \"antd\";\r\n\r\nimport notification from \"../../../../components/notification\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\n// import Button from \"../../../../components/uielements/button\";\r\nimport { Box } from \"../../../App/app.style\";\r\nimport actions from \"../../../../redux/generalLedger/generalLedger/actions\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst redirectTo = \"/dashboard/setup/menus\";\r\n\r\nclass UpdateGeneralLedger extends Component {\r\n  state = {};\r\n\r\n  componentDidMount = () => {\r\n    const { getGeneralLedgers } = this.props;\r\n    getGeneralLedgers();\r\n  };\r\n\r\n  render() {\r\n    //const general_ledger = this.props.generalLedger.generalLedger ? this.props.generalLedger.generalLedger : []\r\n\r\n    //Display error notif\r\n    if (this.props.generalLedger.error) {\r\n      notification(\"error\", this.props.generalLedger.error);\r\n      this.props.clearError();\r\n    }\r\n\r\n    // Display success notif\r\n    if (this.props.generalLedger.success) {\r\n      notification(\"success\", this.props.generalLedger.success);\r\n      this.props.clearSuccess();\r\n    }\r\n    //console.log(this.props.generalLedger);\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <PageHeader\r\n            title={<IntlMessages id=\"sidebar.generalLedgerDefault\" />}\r\n            style={{ margin: 0 }}\r\n          >\r\n            <Button\r\n              onClick={() => this.props.history.replace(redirectTo)}\r\n              style={{ marginLeft: \"5px\" }}\r\n            >\r\n              <IntlMessages id=\"button.back\" />\r\n            </Button>\r\n          </PageHeader>\r\n\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane\r\n              tab={<IntlMessages id=\"generalLedgers.tab.equity\" />}\r\n              key=\"1\"\r\n            >\r\n              <EquityForm auth={this.props.auth} />\r\n            </TabPane>\r\n            <TabPane tab={<IntlMessages id=\"Purchase\" />} key=\"2\">\r\n              <DebitCreditForm auth={this.props.auth} />\r\n            </TabPane>\r\n            <TabPane tab={<IntlMessages id=\"Sales\" />} key=\"3\">\r\n              <DirectSalesForm auth={this.props.auth} />\r\n            </TabPane>\r\n            <TabPane\r\n              tab={<IntlMessages id=\"generalLedgers.tab.defaultItem\" />}\r\n              key=\"4\"\r\n            >\r\n              <ItemForm auth={this.props.auth} />\r\n            </TabPane>\r\n          </Tabs>\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { auth: state.auth, generalLedger: state.generalLedger };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, actions))(UpdateGeneralLedger);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${palette('text', 0)};\r\n  margin: 0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BoxSubTitle = styled.p`\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  color: ${palette('text', 3)};\r\n  line-height: 24px;\r\n`;\r\n\r\nexport { BoxTitle, BoxSubTitle };\r\n","import React from 'react';\r\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {props.title\r\n        ? <BoxTitle className=\"isoBoxTitle\">\r\n            {' '}{props.title}{' '}\r\n          </BoxTitle>\r\n        : ''}\r\n      {props.subtitle\r\n        ? <BoxSubTitle className=\"isoBoxSubTitle\">\r\n            {' '}{props.subtitle}{' '}\r\n          </BoxSubTitle>\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border: 1px solid ${palette('border', 0)};\r\n  margin: 0 0 30px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 20px;\r\n    ${'' /* margin: 0 10px 30px; */};\r\n  }\r\n\r\n  &.half {\r\n    width: calc(50% - 34px);\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { BoxWrapper };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\n// import theme from \"../../settings/themes/themedefault\";\r\nimport BoxComponent from \"../../components/utility/box\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\nimport { Row, Col } from \"antd\";\r\nimport { convertDiscountMask } from \"../../helpers/helper\";\r\n\r\nconst BoxWrapper = styled(BoxComponent)`\r\n  border-radius: 5px;\r\n\r\n  .isoInvoiceTableBtn {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .isoPageHeaderWrapper {\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .spinStyle {\r\n    text-align: center;\r\n    padding: 30px 50px;\r\n  }\r\n\r\n  .isoCode {\r\n    color: ${palette(\"text\", 1)};\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  .isoDetailDataFlex {\r\n    display: flex;\r\n    .isoColumn-1 {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    .isoColumn-2 {\r\n      width: 50%;\r\n    }\r\n    .isoColumn-3 {\r\n      width: 33%;\r\n    }\r\n  }\r\n\r\n  .isoFormGroupComp {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  .isoDetailDataBlock {\r\n    display: block;\r\n    .isoColumn {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .isoFilter {\r\n    margin-bottom: 30px;\r\n    .isoFilterContent {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .isoFormGroup {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    .isoInputCode-20 {\r\n      width: 20%;\r\n    }\r\n    .isoInputCode-30 {\r\n      width: 30%;\r\n    }\r\n    .isoInputCode-40 {\r\n      width: 40%;\r\n    }\r\n    .isoInputCode-50 {\r\n      width: 50%;\r\n    }\r\n    .isoInputCode-100 {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Fieldset = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 13px;\r\n  color: ${palette(\"text\", 1)};\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  margin: 0 0 8px;\r\n`;\r\n\r\nconst Form = styled.div``;\r\n\r\nconst StatusTag = styled.span`\r\n  padding: 0 5px;\r\n  height: 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n  text-transform: capitalize;\r\n\r\n  &.inside-form {\r\n    height: 25px;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span`\r\n  margin-right: 8px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  width: 10px;\r\n  height: 10px;\r\n  display: flex;\r\n  border-radius: 2%;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  color: #ffffff;\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst TransNo = styled.span`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  width: auto;\r\n  overflow: inherit;\r\n  position: relative;\r\n  .isoInvoiceTable {\r\n    table {\r\n      tbody {\r\n        tr {\r\n          td {\r\n            .isoInvoiceBtnView {\r\n              display: flex;\r\n              flex-direction: row;\r\n              > a {\r\n                margin: ${props =>\r\n    props[\"data-rtl\"] === \"rtl\" ? \"0 0 0 15px\" : \"0 15px 0 0\"};\r\n              }\r\n            }\r\n          }\r\n          &:hover {\r\n            .isoInvoiceBtnView {\r\n              ${\"\" /* opacity: 1; */};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .invoiceListTable {\r\n    .ant-dropdown-menu-item,\r\n    .ant-dropdown-menu-submenu-title {\r\n      &:hover {\r\n        background-color: ${palette(\"secondary\", 1)};\r\n      }\r\n    }\r\n\r\n    .invoiceViewBtn {\r\n      color: ${palette(\"text\", 3)};\r\n\r\n      &:hover {\r\n        color: ${palette(\"primary\", 0)};\r\n      }\r\n    }\r\n\r\n    .invoiceMrBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"grayscale\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"grayscale\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceDltBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"error\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"error\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRestBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"secondary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"secondary\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRstBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"success\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"success\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceEdtBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"primary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"primary\", 2)};\r\n      }\r\n  }\r\n}`;\r\n\r\nconst customCollapseStyle = {\r\n  background: \"#F1F3F6\",\r\n  marginBottom: \"-7px\"\r\n  // background: \"#797979\"\r\n};\r\n\r\nconst customPanelStyle = {\r\n  // background: \"#f7f7f7\",\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  // border: 1,\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst customDot = (icon, { status, title }) => {\r\n  // if (status && title === \"Pending\") {\r\n  //   return <span className=\"ant-steps-icon-dot\" />;\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Processed\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[4] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Cancelled\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[3] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  return icon;\r\n};\r\n\r\nconst Title = styled.h4`\r\n  text-align: center;\r\n  color: rgba(0, 0, 0, 0.85);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  font-variant: tabular-nums;\r\n  font-variant-ligatures: normal;\r\n  font-variant-caps: normal;\r\n  font-variant-numeric: tabular-nums;\r\n  font-variant-east-asian: normal;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 14px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n\r\n  &.company-name {\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n\r\nconst MiniText = styled.span`\r\n  margin-bottom: 1em;\r\n  font-weight: 400;\r\n  font-style: ${props => (props[\"italic\"] === true ? \"italic\" : \"normal\")};\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 10px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n`;\r\n\r\nexport const Strong = props => (\r\n  <strong style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </strong>\r\n);\r\nexport const Span = props => (\r\n  <span style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </span>\r\n);\r\n\r\nexport const TotalField = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <>\r\n        {data.map((data, key) => {\r\n          const {\r\n            label,\r\n            amount,\r\n            parseAmount,\r\n            isDiscount,\r\n            labelAlign,\r\n            amountAlign\r\n          } = data;\r\n          if (isDiscount) {\r\n            const { discount, discountAlign } = data;\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={10}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={4}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: discountAlign ? discountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? convertDiscountMask(discount)\r\n                      : discount\r\n                        ? convertDiscountMask(discount.replace(/\\$\\s?|(,*)/g, \"\"))\r\n                        : \"0.00\"}\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          } else {\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={15}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const Signature = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <Row className=\"avoid-page-break\" justify=\"space-between\" type=\"flex\">\r\n        {data.map((data, key) => {\r\n          const { label, name } = data;\r\n          return (\r\n            <Col style={{ textAlign: \"center\" }} key={key}>\r\n              <Row>\r\n                <Col style={{ marginBottom: \"84px\" }}>\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col>\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {name\r\n                      ? `( ${name} )`\r\n                      : \"(..............................................)\"}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nconst Box = WithDirection(BoxWrapper);\r\nexport {\r\n  Box,\r\n  StatusTag,\r\n  StatusBadge,\r\n  TransNo,\r\n  Fieldset,\r\n  Form,\r\n  Label,\r\n  customCollapseStyle,\r\n  customPanelStyle,\r\n  customDot,\r\n  Title,\r\n  Text,\r\n  MiniText\r\n};\r\nexport default WithDirection(CardWrapper);\r\n","import React from 'react';\r\nimport BoxTitleWrapper from './boxTitle';\r\nimport { BoxWrapper } from './box.style';\r\n\r\nexport default props => (\r\n  <BoxWrapper\r\n    className={`${props.className} isoBoxWrapper`}\r\n    style={props.style}\r\n  >\r\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\r\n    {props.children}\r\n  </BoxWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 10px 20px 10px 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from \"react\";\r\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\r\n\r\nexport default props => (\r\n  <LayoutContentWrapper\r\n    className={\r\n      props.className != null\r\n        ? `${props.className} isoLayoutContentWrapper`\r\n        : \"isoLayoutContentWrapper\"\r\n    }\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </LayoutContentWrapper>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDComponentTitleWrapper = styled.h1`\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  color: ${palette('secondary', 2)};\r\n  width: 100%;\r\n  margin-right: 17px;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    margin: 0 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    width: 5px;\r\n    height: 40px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n  }\r\n`;\r\n\r\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\r\nexport { ComponentTitleWrapper };\r\n","import React from \"react\";\r\nimport { ComponentTitleWrapper } from \"./pageHeader.style\";\r\nimport { Divider } from \"antd\";\r\n\r\nexport default props =>\r\n  props.title ? (\r\n    <div>\r\n      <div className=\"isoPageHeaderWrapper\">\r\n        <h1 className=\"isoCode\">{props.title}</h1>\r\n        {props.children}\r\n      </div>\r\n      <Divider\r\n        style={{ margin: props.marginBottom ? \"10px 0 20px 0\" : \"10px 0\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <ComponentTitleWrapper className=\"isoComponentTitle\">\r\n      {props.children}\r\n    </ComponentTitleWrapper>\r\n  );\r\n","const actions = {\r\n  getGeneralLedgers: () => ({\r\n    type: \"GET_GENERAL_LEDGERS_REQUEST\"\r\n  }),\r\n  updateGeneralLedger: data => ({\r\n    type: \"UPDATE_GENERAL_LEDGER_REQUEST\",\r\n    payload: {\r\n      body: data\r\n    }\r\n  }),\r\n  // deactivateGeneralLedger: id_general_ledger => ({\r\n  //   type: \"DEACTIVATE_GENERAL_LEDGER_REQUEST\",\r\n  //   payload: { id_general_ledger }\r\n  // }),\r\n  // activateGeneralLedger: id_general_ledger => ({\r\n  //   type: \"ACTIVATE_GENERAL_LEDGER_REQUEST\",\r\n  //   payload: { id_general_ledger }\r\n  // }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\nexport default actions;\r\n"],"sourceRoot":""}