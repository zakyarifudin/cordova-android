{"version":3,"sources":["components/uielements/styles/input.style.js","components/uielements/input.js","components/uielements/styles/select.style.js","components/uielements/select.js","containers/Modules/Server/Setup/serverSetting.js","components/uielements/form.js"],"names":["ComponentName","Search","Input","TextArea","Group","WDStyledInput","styled","props","palette","borderRadius","transition","StyledInput","WithDirection","WDInputGroup","boxShadow","InputGroupWrapper","InputGroup","WDInputSearch","InputSearchWrapper","WDTextarea","TextAreaWrapper","WDSelect","AntSelect","Select","isoSelect","SelectOption","Option","FormItem","Form","Item","formItemLayout","wrapperCol","xs","span","sm","serverSetup","actions","serverValidate","typingServer","serverSuccessValidateRedirect","stripTrailingSlash","str","slice","ServerSettingStyleNewWrapper","div","Logo","ServerSetting","state","url","prefix","componentDidMount","document","title","siteConfig","documentTitle","isElectron","window","ipcRenderer","on","readyListener","beforeQuitListener","new_server","localStorage","getItem","setItem","removeItem","componentDidUpdate","validate_status","serverSetting","validateStatus","typing","clear","serverAddress","history","push","notification","error","event","args","console","log","renderUrl","baseUrl","serverAddressText","length","send","componentWillUnmount","removeAllListeners","onChangeServer","value","name","target","setState","onSubmitServer","urlForm","style","marginBottom","compact","addonBefore","onChange","defaultValue","onPressEnter","size","placeholder","submitButton","loading","type","onClick","id","buttonLabel","submitButtonNew","className","src","APP_VERSION","this","display","marginLeft","Link","to","Component","connect","auth"],"mappings":"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","file":"static/js/344.a141d3c5.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport {\r\n  transition,\r\n  borderRadius,\r\n  boxShadow,\r\n} from '../../../settings/style-util';\r\n\r\nconst InputWrapper = ComponentName => styled(ComponentName)`\r\n  &.ant-input {\r\n    padding: 4px 10px;\r\n    width: 100%;\r\n    height: 35px;\r\n    cursor: text;\r\n    text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n    font-size: 13px;\r\n    line-height: 1.5;\r\n    color: ${palette('text', 1)};\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid ${palette('border', 0)};\r\n    ${borderRadius('4px')};\r\n    ${transition()};\r\n\r\n    &:focus {\r\n      border-color: ${palette('primary', 0)};\r\n    }\r\n\r\n    &.ant-input-lg {\r\n      height: 42px;\r\n      padding: 6px 10px;\r\n    }\r\n\r\n    &.ant-input-sm {\r\n      padding: 1px 10px;\r\n      height: 30px;\r\n    }\r\n\r\n    &::-webkit-input-placeholder {\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n\r\n    &:-moz-placeholder {\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n\r\n    &::-moz-placeholder {\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n    &:-ms-input-placeholder {\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n  }\r\n`;\r\nconst InputGroupWrapper = ComponentName => styled(ComponentName)`\r\n  &.ant-input-group {\r\n    margin-bottom: 10px;\r\n\r\n    .ant-select-auto-complete {\r\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '-1px' : '0')};\r\n    }\r\n\r\n    .ant-input {\r\n      &:first-child {\r\n        border-radius: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0 4px 4px 0' : '4px 0 0 4px'};\r\n      }\r\n    }\r\n\r\n    .ant-input-group-addon:not(:first-child):not(:last-child),\r\n    .ant-input-group-wrap:not(:first-child):not(:last-child),\r\n    > .ant-input:not(:first-child):not(:last-child) {\r\n      padding: 0 7px;\r\n      border-left-width: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0' : '1px'};\r\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '-1px' : '0')};\r\n    }\r\n\r\n    .ant-input-group-addon {\r\n      padding: 4px 7px;\r\n      font-size: 12px;\r\n      color: ${palette('text', 1)};\r\n      text-align: center;\r\n      background-color: ${palette('grayscale', 4)};\r\n      border: 1px solid ${palette('border', 0)};\r\n      ${transition()};\r\n\r\n      &:first-child {\r\n        border-right-width: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '1px' : '0'};\r\n        border-left-width: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0' : '1px'};\r\n        border-radius: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0 4px 4px 0' : '4px 0 0 4px'};\r\n      }\r\n\r\n      &:last-child {\r\n        border-right-width: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0' : '1px'};\r\n        border-left-width: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '1px' : '0'};\r\n        border-radius: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '4px 0 0 4px' : '0 4px 4px 0'};\r\n      }\r\n\r\n      .ant-select {\r\n        .ant-select-selection {\r\n          background-color: inherit;\r\n          margin: -1px;\r\n          border: 1px solid transparent;\r\n          ${boxShadow()};\r\n        }\r\n      }\r\n    }\r\n\r\n    .ant-input-group-addon:not(:first-child):not(:last-child),\r\n    .ant-input-group-wrap:not(:first-child):not(:last-child) {\r\n      border-left: 0;\r\n      border-right: 0;\r\n    }\r\n\r\n    & > .ant-input:not(:first-child):not(:last-child) {\r\n      ${'' /* border-left: 0; */};\r\n    }\r\n\r\n    .ant-input:first-child:last-child {\r\n      border-radius: 4px;\r\n    }\r\n\r\n    &.ant-input-group-compact > * {\r\n      border-right-width: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '1px ' : '0'};\r\n    }\r\n\r\n    &.ant-input-group-compact > .ant-select > .ant-select-selection,\r\n    &.ant-input-group-compact > .ant-calendar-picker .ant-input,\r\n    &.ant-input-group-compact > .ant-select-auto-complete .ant-input,\r\n    &.ant-input-group-compact > .ant-cascader-picker .ant-input,\r\n    &.ant-input-group-compact > .ant-mention-wrapper .ant-mention-editor,\r\n    &.ant-input-group-compact > .ant-time-picker .ant-time-picker-input {\r\n      border-right-width: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '1px ' : '0'};\r\n    }\r\n\r\n    &.ant-input-group-compact > *:first-child,\r\n    &.ant-input-group-compact > .ant-select:first-child > .ant-select-selection,\r\n    &.ant-input-group-compact > .ant-calendar-picker:first-child .ant-input,\r\n    &.ant-input-group-compact\r\n      > .ant-select-auto-complete:first-child\r\n      .ant-input,\r\n    &.ant-input-group-compact > .ant-cascader-picker:first-child .ant-input,\r\n    &.ant-input-group-compact\r\n      > .ant-mention-wrapper:first-child\r\n      .ant-mention-editor,\r\n    &.ant-input-group-compact\r\n      > .ant-time-picker:first-child\r\n      .ant-time-picker-input {\r\n      border-radius: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 4px 4px 0' : '4px 0 0 4px'};\r\n      border-left-width: 1px\r\n        ${'' /* border-right-width: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '1px' : '0'}; */};\r\n    }\r\n\r\n    &.ant-input-group-compact > *:last-child,\r\n    &.ant-input-group-compact > .ant-select:last-child > .ant-select-selection,\r\n    &.ant-input-group-compact > .ant-calendar-picker:last-child .ant-input,\r\n    &.ant-input-group-compact > .ant-select-auto-complete:last-child .ant-input,\r\n    &.ant-input-group-compact > .ant-cascader-picker:last-child .ant-input,\r\n    &.ant-input-group-compact\r\n      > .ant-mention-wrapper:last-child\r\n      .ant-mention-editor,\r\n    &.ant-input-group-compact\r\n      > .ant-time-picker:last-child\r\n      .ant-time-picker-input {\r\n      border-radius: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '4px 0 0 4px' : '0 4px 4px 0'};\r\n      border-right-width: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 ' : '1px'};\r\n    }\r\n\r\n    .ant-calendar-picker-clear,\r\n    .ant-calendar-picker-icon {\r\n      right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '8px')};\r\n      left: ${props => (props['data-rtl'] === 'rtl' ? '8px' : 'inherit')};\r\n    }\r\n  }\r\n\r\n  &.ant-input-group-lg {\r\n    .ant-input,\r\n    > .ant-input-group-addon {\r\n      padding: 6px 10px;\r\n      height: 35px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextAreaWrapper = ComponentName => styled(ComponentName)`\r\n  &.ant-input {\r\n    padding: 4px 10px;\r\n    width: 100%;\r\n    height: auto;\r\n    cursor: text;\r\n    font-size: 13px;\r\n    line-height: 1.5;\r\n    color: ${palette('text', 1)};\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid ${palette('border', 0)};\r\n    ${borderRadius('4px')};\r\n    ${transition()};\r\n\r\n    &:focus {\r\n      border-color: ${palette('primary', 0)};\r\n    }\r\n\r\n    &::-webkit-input-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n\r\n    &:-moz-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n\r\n    &::-moz-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n    &:-ms-input-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputSearchWrapper = ComponentName => styled(ComponentName)`\r\n  &.ant-input-affix-wrapper {\r\n    .ant-input {\r\n      padding: 4px 10px;\r\n      width: 100%;\r\n      height: 35px;\r\n      cursor: text;\r\n      font-size: 13px;\r\n      line-height: 1.5;\r\n      color: ${palette('text', 1)};\r\n      background-color: #fff;\r\n      background-image: none;\r\n      border: 1px solid ${palette('border', 0)};\r\n      ${borderRadius('4px')};\r\n      ${transition()};\r\n\r\n      &:focus {\r\n        border-color: ${palette('primary', 0)};\r\n      }\r\n\r\n      &.ant-input-lg {\r\n        height: 42px;\r\n        padding: 6px 10px;\r\n      }\r\n\r\n      &.ant-input-sm {\r\n        padding: 1px 10px;\r\n        height: 30px;\r\n      }\r\n\r\n      &::-webkit-input-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &:-moz-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &::-moz-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n      &:-ms-input-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n    }\r\n\r\n    .ant-input-suffix {\r\n      right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '7px')};\r\n      left: ${props => (props['data-rtl'] === 'rtl' ? '7px' : 'inherit')};\r\n    }\r\n\r\n    .ant-input-ant-input-prefix {\r\n      right: ${props => (props['data-rtl'] === 'rtl' ? '7px' : 'inherit')};\r\n      left: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '7px')};\r\n    }\r\n\r\n    .ant-input-search-icon {\r\n      color: ${palette('grayscale', 0)};\r\n\r\n      &:hover {\r\n        color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { InputWrapper, InputGroupWrapper, InputSearchWrapper, TextAreaWrapper };\r\n","import { Input } from 'antd';\r\nimport {\r\n  InputWrapper,\r\n  InputGroupWrapper,\r\n  InputSearchWrapper,\r\n  TextAreaWrapper,\r\n} from './styles/input.style';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst { Search, TextArea, Group } = Input;\r\n\r\nconst WDStyledInput = InputWrapper(Input);\r\nconst StyledInput = WithDirection(WDStyledInput);\r\n\r\nconst WDInputGroup = InputGroupWrapper(Group);\r\nconst InputGroup = WithDirection(WDInputGroup);\r\n\r\nconst WDInputSearch = InputSearchWrapper(Search);\r\nconst InputSearch = WithDirection(WDInputSearch);\r\n\r\nconst WDTextarea = TextAreaWrapper(TextArea);\r\nconst Textarea = WithDirection(WDTextarea);\r\n\r\nexport default StyledInput;\r\nexport { InputSearch, InputGroup, Textarea };\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition } from '../../../settings/style-util';\r\n\r\nconst AntSelect = ComponentName => styled(ComponentName)`\r\n  &.ant-select {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    position: relative;\r\n    color: ${palette('text', 1)};\r\n    font-size: 13px;\r\n\r\n    .ant-select-selection {\r\n      background-color: #fff;\r\n      border-radius: 4px;\r\n      border: 1px solid ${palette('border', 0)};\r\n      ${transition()};\r\n\r\n      &.ant-select-selection--single {\r\n        height: 35px;\r\n        position: relative;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .ant-select-selection__rendered {\r\n        margin-left: 10px;\r\n        margin-right: 10px;\r\n        line-height: 33px;\r\n\r\n        .ant-select-selection-selected-value {\r\n          float: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n          padding: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0 0 0 14px' : '0 14px 0 0'};\r\n        }\r\n      }\r\n\r\n      .ant-select-arrow {\r\n        right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '7px')};\r\n        left: ${props => (props['data-rtl'] === 'rtl' ? '7px' : 'inherit')};\r\n      }\r\n\r\n      &:hover {\r\n        border-color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n\r\n    &.ant-select-focused {\r\n      .ant-select-selection {\r\n        &:focus,\r\n        &:active {\r\n          border-color: ${palette('primary', 0)};\r\n          outline: 0;\r\n          box-shadow: 0 0 0 2px ${palette('primary', 3)};\r\n        }\r\n      }\r\n    }\r\n\r\n    &.ant-select-open {\r\n      .ant-select-selection {\r\n        border-color: ${palette('primary', 0)};\r\n        outline: 0;\r\n        box-shadow: 0 0 0 2px ${palette('primary', 3)};\r\n      }\r\n    }\r\n\r\n    .ant-select-selection--multiple > ul > li,\r\n    .ant-select-selection--multiple .ant-select-selection__rendered > ul > li {\r\n      margin-top: 4px;\r\n      height: 26px;\r\n      line-height: 26px;\r\n    }\r\n\r\n    .ant-select-selection--multiple .ant-select-selection__choice {\r\n      background-color: ${palette('grayscale', 4)};\r\n      color: ${palette('text', 1)};\r\n    }\r\n\r\n    .ant-select-tree li a {\r\n      font-size: 13px;\r\n      color: ${palette('text', 1)};\r\n    }\r\n  }\r\n`;\r\n\r\nconst AntSelectOption = ComponentName => styled(ComponentName)`\r\n  color: #000000;\r\n  .ant-select-dropdown-menu-item {\r\n    color: ${palette('text', 1)};\r\n  }\r\n`;\r\n\r\nexport { AntSelect, AntSelectOption };\r\n","import { Select } from 'antd';\r\nimport { AntSelect } from './styles/select.style';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDSelect = AntSelect(Select);\r\nconst isoSelect = WithDirection(WDSelect);\r\nconst SelectOption = Select.Option;\r\n\r\nexport default isoSelect;\r\nexport { SelectOption };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input, { InputGroup } from \"../../../../components/uielements/input\";\r\nimport Select, { SelectOption } from \"../../../../components/uielements/select\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport notification from \"../../../../components/notification\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\n// import ServerSettingStyleWrapper from \"./serverSetting.style\";\r\n\r\n// Action\r\nimport actions from \"../../../../redux/serverSetting/actions\";\r\n\r\n// Form\r\nimport Form from \"../../../../components/uielements/form\";\r\nimport { APP_VERSION, baseUrl, isElectron } from \"../../../../helpers/helper\";\r\n\r\n// /********************** new style */\r\nimport styled from \"styled-components\";\r\n// import LogoContainer from \"../../../../image/logo-bg.png\";\r\nimport Logo from \"../../../../image/equal-wide-logo.png\";\r\nimport { siteConfig } from \"../../../../settings\";\r\n\r\n// Setting Form\r\nconst FormItem = Form.Item;\r\nconst Option = SelectOption;\r\nconst formItemLayout = {\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  }\r\n};\r\n\r\n// Setup action\r\nconst {\r\n  serverSetup,\r\n  serverValidate,\r\n  typingServer,\r\n  serverSuccessValidateRedirect\r\n} = actions;\r\n\r\nconst stripTrailingSlash = str => {\r\n  if (str.slice(-1) === \"/\") {\r\n    return str;\r\n  }\r\n  return str + \"/\";\r\n};\r\n\r\n// new style\r\nconst ServerSettingStyleNewWrapper = styled.div`\r\n  align-items: center;\r\n  background-image: linear-gradient(to right, #fff, #ededed);\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 100vh;\r\n\r\n    .app-version {\r\n      h4 {\r\n        color: #fff;\r\n        font-size: 1rem;\r\n        margin-bottom: 1.5em;\r\n        position: relative;\r\n\r\n        &:after {\r\n          content: \"\";\r\n          background: #9fbf40;\r\n          height: 2px;\r\n          left: 0;\r\n          position: absolute;\r\n          top: 100%;\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  \r\n    .app-version-sub-logo {\r\n      color: #FFF;\r\n      padding: 1rem 0 0;\r\n      text-align: center;\r\n      .bold {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n  .middle-content {\r\n    align-items: center;\r\n    background-color: #2f5bb2;\r\n    border-radius: 20px;\r\n    box-shadow: 0px 0px 6px 1px #969696c7;\r\n    display: flex;\r\n    width: 60%;\r\n    .middle-content-child {\r\n      flex: 1;\r\n\r\n      &.welcome-message {\r\n        border-right: 2px solid #fff;\r\n        padding: 3rem 1.5rem;\r\n\r\n        .logo-container {\r\n          figure {\r\n            text-align: center;\r\n            \r\n            & > img {\r\n              // background-image: url('${Logo}');\r\n              background-position: center;\r\n              background-repeat: no-repeat;\r\n              background-size: contain;\r\n              // filter: brightness(0%);\r\n              max-width: 270px;\r\n            }\r\n          }\r\n        }\r\n        .welcome-message-text {\r\n          h2 {\r\n            font-size: 4.5em;\r\n            font-weight: bolder;\r\n            letter-spacing: .2rem;\r\n            margin-bottom: 0;\r\n          }\r\n          p span {\r\n            line-height: 1.7rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      &.server-setup {\r\n        color: #fff;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        min-height: 65vh;\r\n        padding: 3rem 4rem;\r\n\r\n        h2 {\r\n          color: #fff;\r\n          font-size: 3em;\r\n        }\r\n\r\n        button.ant-btn.ant-btn-primary {\r\n          background-color: #fff;\r\n          color: #000;\r\n          margin-top: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n   @media (max-width: 1024px){\r\n    .middle-content {\r\n    }\r\n  }\r\n\r\n   @media (max-width: 968px){\r\n    height: auto;\r\n    min-height: 100vh;\r\n    padding: 2rem;\r\n\r\n    .middle-content {\r\n      width:85%;\r\n      flex-direction: column;\r\n      height: auto;\r\n      min-height: 75vh;\r\n\r\n      .middle-content-child.welcome-message {\r\n        border-right: none;\r\n        padding: 3rem 4rem 0;\r\n      }\r\n\r\n      .middle-content-child.server-setup {\r\n        min-height: auto;\r\n        padding: 0 4rem 3rem;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n   @media (max-width: 480px){\r\n    .middle-content {\r\n      width: 95%;\r\n    }\r\n  }\r\n\r\n`;\r\n// new style\r\n\r\n// new style 2\r\n\r\n// /new style 2\r\n\r\nclass ServerSetting extends Component {\r\n  state = {\r\n    url: \"\",\r\n    prefix: \"http://\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.title = siteConfig.documentTitle;\r\n    this.props.serverSetup();\r\n\r\n    if (isElectron()) {\r\n      window.ipcRenderer.on(\"APP_READY\", this.readyListener);\r\n      window.ipcRenderer.on(\"APP_BEFORE_QUIT\", this.beforeQuitListener);\r\n    }\r\n\r\n    const new_server = localStorage.getItem(\"new-server\");\r\n    if (new_server) {\r\n      localStorage.setItem(\"server\", new_server);\r\n      localStorage.removeItem(\"new-server\");\r\n    }\r\n\r\n    // print serverAddress into state\r\n    // this.setState({ url: this.renderUrl()})\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const validate_status = this.props.serverSetting.validateStatus;\r\n    const typing = this.props.serverSetting.typing;\r\n\r\n    if (validate_status === \"success\") {\r\n      localStorage.clear();\r\n      localStorage.setItem(\"server\", this.props.serverSetting.serverAddress);\r\n      // sessionStorage.setItem(\"server_setting\", \"success\");\r\n      this.props.history.push(\"/signin\");\r\n    } else if (validate_status === \"error\" && !typing) {\r\n      notification(\"error\", this.props.serverSetting.error);\r\n    }\r\n  };\r\n\r\n  readyListener = (event, args) => console.log(event, args);\r\n\r\n  renderUrl = () => {\r\n    const serverAddress = baseUrl();\r\n    let serverAddressText = \"\";\r\n    if (serverAddress) {\r\n      if (serverAddress.slice(0, 5) === \"https\") {\r\n        serverAddressText = serverAddress.slice(8, serverAddress.length);\r\n      } else if (serverAddress.slice(0, 5) === \"http:\") {\r\n        serverAddressText = serverAddress.slice(7, serverAddress.length);\r\n      }\r\n    }\r\n    return serverAddressText;\r\n  };\r\n\r\n  beforeQuitListener = () => {\r\n    // console.log(\"quit listener signin\");\r\n    window.ipcRenderer.send(\"APP_CAN_QUIT\", \"from signin\");\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    if (isElectron()) {\r\n      window.ipcRenderer.removeAllListeners();\r\n    }\r\n  };\r\n\r\n  onChangeServer = event => {\r\n    // console.log(event);\r\n    const name = event.target ? event.target.name : \"prefix\";\r\n    let value = null;\r\n    value = name === \"url\" ? stripTrailingSlash(event.target.value) : event;\r\n    this.props.typingServer();\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  onSubmitServer = () => {\r\n    const url = this.state.prefix + this.state.url;\r\n    // console.log(url);\r\n    this.props.serverValidate(url);\r\n  };\r\n\r\n  urlForm = () => {\r\n    return (\r\n      <FormItem\r\n        {...formItemLayout}\r\n        // hasFeedback\r\n        validateStatus={this.props.serverSetting.validateStatus}\r\n        style={{ marginBottom: \"10px\" }}\r\n      >\r\n        <InputGroup compact>\r\n          <Input\r\n            addonBefore={\r\n              <Select\r\n                onChange={this.onChangeServer}\r\n                name=\"prefix\"\r\n                defaultValue=\"http://\"\r\n              >\r\n                <Option value=\"http://\">http://</Option>\r\n                <Option value=\"https://\">https://</Option>\r\n              </Select>\r\n            }\r\n            onChange={this.onChangeServer}\r\n            onPressEnter={this.onSubmitServer}\r\n            size=\"large\"\r\n            name=\"url\"\r\n            placeholder=\"example.com\"\r\n            // value={this.state.url || []}\r\n          />\r\n        </InputGroup>\r\n      </FormItem>\r\n    );\r\n  };\r\n\r\n  submitButton = () => {\r\n    return (\r\n      <Button\r\n        loading={this.props.serverSetting.loading}\r\n        type=\"primary\"\r\n        onClick={this.onSubmitServer}\r\n      >\r\n        <IntlMessages id={this.props.serverSetting.buttonLabel} />\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  // new style\r\n  submitButtonNew = () => {\r\n    return (\r\n      <Button\r\n        loading={this.props.serverSetting.loading}\r\n        type=\"default\"\r\n        onClick={this.onSubmitServer}\r\n      >\r\n        <IntlMessages id={this.props.serverSetting.buttonLabel} />\r\n      </Button>\r\n    );\r\n  };\r\n  // /new style\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n\r\n    return (\r\n      <>\r\n        {/* <ServerSettingStyleWrapper className=\"isoForgotPassPage\">\r\n          <div className=\"isoFormContentWrapper\">\r\n            <div className=\"isoFormContent\">\r\n              <div className=\"isoLogoWrapper\">\r\n                <Link to=\"/dashboard\">\r\n                  <IntlMessages id=\"page.serverSettingTitle\" />\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"isoFormHeadText\">\r\n                <h3>\r\n                  <IntlMessages id=\"page.serverSettingSubTitle\" />\r\n                </h3>\r\n                <p>\r\n                  <IntlMessages id=\"page.serverSettingDescription\" />\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"isoForgotPassForm\">\r\n                {this.urlForm()}\r\n\r\n                <div className=\"isoInputWrapper\">{this.submitButton()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ServerSettingStyleWrapper> */}\r\n        <ServerSettingStyleNewWrapper>\r\n          <div className=\"middle-content\">\r\n            <div className=\"middle-content-child welcome-message\">\r\n              <div className=\"logo-container\">\r\n                <figure>\r\n                  <img\r\n                    src={Logo}\r\n                    // style={{\r\n                    //   backgroundImage: `\"url(\" + ${LogoSample}+\")\"`\r\n                    // }}\r\n                  ></img>\r\n                  <div className=\"app-version-sub-logo\">\r\n                    <IntlMessages id=\"version\"></IntlMessages>\r\n                    <span className=\"bold\">{\" \" + APP_VERSION}</span>\r\n                  </div>\r\n                </figure>\r\n              </div>\r\n              {/* <div className=\"welcome-message-text\">\r\n                <h2>\r\n                  <IntlMessages id=\"welcome\"> {txt => `${txt} !`}</IntlMessages>\r\n                </h2>\r\n                <p>\r\n                  <IntlMessages id=\"appDesc\"></IntlMessages>\r\n                </p>\r\n              </div> */}\r\n            </div>\r\n            <div className=\"middle-content-child server-setup\">\r\n              <h2>\r\n                <IntlMessages id=\"page.serverSettingSubTitle\" />\r\n              </h2>\r\n              <div>\r\n                <p>\r\n                  <IntlMessages id=\"page.serverSettingDescription\" />\r\n                </p>\r\n                <div className=\"isoForgotPassForm\">\r\n                  {this.urlForm()}\r\n\r\n                  <div className=\"isoInputWrapper\" style={{ display: \"flex\" }}>\r\n                    {this.submitButtonNew()}\r\n                    {baseUrl() ? (\r\n                      <div style={{ marginLeft: \"5px\" }}>\r\n                        <Link to=\"/signin\">\r\n                          <Button\r\n                            // loading={this.props.serverSetting.loading}\r\n                            type=\"danger\"\r\n                          >\r\n                            <IntlMessages id=\"button.cancel\" />\r\n                          </Button>\r\n                        </Link>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ServerSettingStyleNewWrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    serverSetting: state.serverSetting\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  serverSetup,\r\n  serverValidate,\r\n  typingServer,\r\n  serverSuccessValidateRedirect\r\n})(ServerSetting);\r\n","import { Form } from 'antd';\r\n\r\nexport default Form;\r\n"],"sourceRoot":""}