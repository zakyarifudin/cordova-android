{"version":3,"sources":["redux/generalLedger/adjustmentType/actions.js","containers/Modules/GeneralLedger/AdjustmentType/updateAdjustmentTypeForm.js","containers/Modules/GeneralLedger/AdjustmentType/update.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","containers/App/app.style.js","components/utility/box.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/utility/pageHeader.style.js","components/utility/pageHeader.js"],"names":["actions","getGLAdjustmentTypes","type","updateGLAdjustmentType","id_adjustment_type","data","payload","body","clearSuccess","clearError","clearErrorField","Option","Select","GeneralLedgerAdjustmentTypeForm","handleChangeAdjustmentType","value","setFieldsValue","props","form","generalLedgerAdjustmentType","adjustment_types","map","id_account_adjustment","handleSubmit","e","preventDefault","validateFieldsAndScroll","err","getFieldDecorator","this","loading","loadingSubmit","formItemLayout","labelCol","xs","span","sm","wrapperCol","className","size","layout","onSubmit","style","padding","Item","label","id","rules","required","message","showSearch","optionFilterProp","onChange","placeholder","getLanguage","key","adjustment_type_code","description","orientation","fontSize","initialValue","accounts","id_account","account_code","account_name","offset","htmlType","marginTop","marginLeft","Component","WrappedGeneralLedgerAdjustmentTypeForm","Form","create","name","compose","connect","state","UpdateGeneralLedger","Tabs","TabPane","componentDidMount","componentDidUpdate","error","notification","success","title","margin","onClick","history","replace","auth","BoxTitle","styled","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","div","children","StatusTag","StatusBadge","TransNo","CardWrapper","customCollapseStyle","background","marginBottom","customDot","icon","status","Title","h4","Text","MiniText","Strong","color","Span","TotalField","Array","isArray","length","amount","parseAmount","isDiscount","labelAlign","amountAlign","discount","discountAlign","justify","textAlign","convertDiscountMask","parseFloat","toFixed","Signature","Box","WithDirection","LayoutContentWrapper","WDComponentTitleWrapper","h1","ComponentTitleWrapper"],"mappings":"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","file":"static/js/313.46151ec0.chunk.js","sourcesContent":["const actions = {\r\n  getGLAdjustmentTypes: () => ({\r\n    type: 'GET_GL_ADJUSTMENT_TYPES_REQUEST',\r\n  }),\r\n  updateGLAdjustmentType: (id_adjustment_type, data) => ({\r\n    type: 'UPDATE_GL_ADJUSTMENT_TYPE_REQUEST',\r\n    payload: {\r\n      id_adjustment_type: id_adjustment_type,\r\n      body: data\r\n    }\r\n  }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\n\r\nexport default actions;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\n//import moment from \"moment\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport { Form, Row, Col, Select, Spin, Divider } from \"antd\";\r\nimport actions from \"../../../../redux/generalLedger/adjustmentType/actions\";\r\nimport getLanguage from \"../../../App/MyLanguange\";\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\n// const InputGroup = Input.Group;\r\n\r\nclass GeneralLedgerAdjustmentTypeForm extends Component {\r\n\r\n  handleChangeAdjustmentType = (value) => {\r\n    const {setFieldsValue} = this.props.form \r\n    this.props.generalLedgerAdjustmentType.adjustment_types.map(data => {\r\n      if(data.id_adjustment_type === value){\r\n        setFieldsValue({\r\n          [\"id_account_adjustment\"]: data.id_account_adjustment,\r\n        }) \r\n      }\r\n          \r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    // console.log(\"Masuk Pak\")\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, value) => {\r\n      if (!err) {\r\n        const { updateGLAdjustmentType } = this.props;\r\n        // console.log(value);\r\n        // console.log(\"Masuk Pak\")\r\n        updateGLAdjustmentType(value.id_adjustment_type, value);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props.generalLedgerAdjustmentType);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { generalLedgerAdjustmentType } = this.props;\r\n    const { loading, loadingSubmit } = generalLedgerAdjustmentType;\r\n    const data = generalLedgerAdjustmentType.adjustment_types ? generalLedgerAdjustmentType.adjustment_types : [];\r\n\r\n    // const used = data.is_used;\r\n    // const error = generalLedgerAdjustmentType.errorField ? generalLedgerAdjustmentType.errorField : [];\r\n    // let opening_balance=null;\r\n    // let retained_earning=null;\r\n\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.generalLedgerAdjustmentType.loading  ? (\r\n            <div className=\"spinStyle\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          ) : (\r\n\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 15px 0 0\" }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"adjustmentTypes.pageHeader\" />}\r\n            >\r\n              {getFieldDecorator(\"id_adjustment_type\", {\r\n                // initialValue: ,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={generalLedgerAdjustmentType.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  onChange={this.handleChangeAdjustmentType}\r\n                  placeholder={getLanguage({ id: \"noAdjustmentType\"})}\r\n                >\r\n                  {this.props.generalLedgerAdjustmentType.adjustment_types.map((data, key) => (\r\n                    <Option key={key} value={data.id_adjustment_type}>\r\n                      {data.adjustment_type_code + \" (\" + data.description + \")\"}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider orientation=\"left\" style={{ fontSize: 14 }}>\r\n          <IntlMessages id=\"adjustmentTypes.add.subtitle.accounts\" />\r\n        </Divider>\r\n\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div className=\"isoColumn-2 isoFormGroupComp\" style={{ padding: \"0 15px 0 0\" }}>\r\n          <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"adjustmentTypes.add.adjustmentAccount\" />}\r\n            >\r\n              {getFieldDecorator(\"id_account_adjustment\", {\r\n                initialValue: data.id_account_adjustment,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={generalLedgerAdjustmentType.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  //disabled={used ? true : false}\r\n                >\r\n                  {this.props.generalLedgerAdjustmentType.accounts.map((data, key) => (\r\n                    // data.id_account_type === \"13\" ||\r\n                    // data.id_account_type === \"15\" ||\r\n                    // data.id_account_type === \"16\" ||\r\n                    // data.id_account_type === \"17\" ||\r\n                    // data.id_account_type === \"18\"\r\n                    // ? \r\n                    (<Option key={key} value={data.id_account}>\r\n                        {data.account_code + \" (\" + data.account_name + \")\"}\r\n                      </Option>)\r\n                    // : null\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ marginTop: \"20px\", marginLeft: \"50px\" }}\r\n                loading={loading || loadingSubmit}\r\n              >\r\n                <IntlMessages id=\"button.submit\" />\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        \r\n      </Form>\r\n      )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedGeneralLedgerAdjustmentTypeForm = Form.create({\r\n  name: \"general_ledger_adjustment_type\"\r\n})(GeneralLedgerAdjustmentTypeForm);\r\n\r\n//export default WrappedGeneralLedgerAdjustmentTypeForm;\r\n\r\nconst mapStateToProps = state => {\r\n  return { generalLedgerAdjustmentType: state.generalLedgerAdjustmentType };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    actions\r\n  )\r\n)(WrappedGeneralLedgerAdjustmentTypeForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nimport AdjustmentTypeForm from \"./updateAdjustmentTypeForm\";\r\n\r\nimport { Tabs, Divider } from \"antd\";\r\n\r\nimport notification from \"../../../../components/notification\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\n// import Button from \"../../../../components/uielements/button\";\r\nimport { Box } from \"../../../App/app.style\";\r\nimport actions from \"../../../../redux/generalLedger/adjustmentType/actions\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst redirectTo = \"/dashboard/setup/menus\";\r\n\r\nclass UpdateGeneralLedger extends Component {\r\n  componentDidMount = () => {\r\n    const { getGLAdjustmentTypes } = this.props;\r\n    getGLAdjustmentTypes();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    //Display error notif\r\n    if (this.props.generalLedgerAdjustmentType.error) {\r\n      notification(\"error\", this.props.generalLedgerAdjustmentType.error);\r\n      this.props.clearError();\r\n    }\r\n\r\n    // Display success notif\r\n    if (this.props.generalLedgerAdjustmentType.success) {\r\n      notification(\"success\", this.props.generalLedgerAdjustmentType.success);\r\n      this.props.clearSuccess();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //const general_ledger = this.props.adjustmentType.adjustmentType ? this.props.adjustmentType.adjustmentType : []\r\n    // console.log(this.props.generalLedgerAdjustmentType);\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <PageHeader\r\n            title={<IntlMessages id=\"generalLedgers.adjustmentType.title\" />}\r\n            style={{ margin: 0 }}\r\n          >\r\n            <Button\r\n              onClick={() => this.props.history.replace(redirectTo)}\r\n              style={{ marginLeft: \"5px\" }}\r\n            >\r\n              <IntlMessages id=\"button.back\" />\r\n            </Button>\r\n          </PageHeader>\r\n          {/* <Divider /> */}\r\n          <AdjustmentTypeForm auth={this.props.auth} />\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { auth: state.auth, generalLedgerAdjustmentType: state.generalLedgerAdjustmentType };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    actions\r\n  )\r\n)(UpdateGeneralLedger);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${palette('text', 0)};\r\n  margin: 0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BoxSubTitle = styled.p`\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  color: ${palette('text', 3)};\r\n  line-height: 24px;\r\n`;\r\n\r\nexport { BoxTitle, BoxSubTitle };\r\n","import React from 'react';\r\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {props.title\r\n        ? <BoxTitle className=\"isoBoxTitle\">\r\n            {' '}{props.title}{' '}\r\n          </BoxTitle>\r\n        : ''}\r\n      {props.subtitle\r\n        ? <BoxSubTitle className=\"isoBoxSubTitle\">\r\n            {' '}{props.subtitle}{' '}\r\n          </BoxSubTitle>\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border: 1px solid ${palette('border', 0)};\r\n  margin: 0 0 30px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 20px;\r\n    ${'' /* margin: 0 10px 30px; */};\r\n  }\r\n\r\n  &.half {\r\n    width: calc(50% - 34px);\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { BoxWrapper };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\n// import theme from \"../../settings/themes/themedefault\";\r\nimport BoxComponent from \"../../components/utility/box\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\nimport { Row, Col } from \"antd\";\r\nimport { convertDiscountMask } from \"../../helpers/helper\";\r\n\r\nconst BoxWrapper = styled(BoxComponent)`\r\n  border-radius: 5px;\r\n\r\n  .isoInvoiceTableBtn {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .isoPageHeaderWrapper {\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .spinStyle {\r\n    text-align: center;\r\n    padding: 30px 50px;\r\n  }\r\n\r\n  .isoCode {\r\n    color: ${palette(\"text\", 1)};\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  .isoDetailDataFlex {\r\n    display: flex;\r\n    .isoColumn-1 {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    .isoColumn-2 {\r\n      width: 50%;\r\n    }\r\n    .isoColumn-3 {\r\n      width: 33%;\r\n    }\r\n  }\r\n\r\n  .isoFormGroupComp {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  .isoDetailDataBlock {\r\n    display: block;\r\n    .isoColumn {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .isoFilter {\r\n    margin-bottom: 30px;\r\n    .isoFilterContent {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .isoFormGroup {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    .isoInputCode-20 {\r\n      width: 20%;\r\n    }\r\n    .isoInputCode-30 {\r\n      width: 30%;\r\n    }\r\n    .isoInputCode-40 {\r\n      width: 40%;\r\n    }\r\n    .isoInputCode-50 {\r\n      width: 50%;\r\n    }\r\n    .isoInputCode-100 {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Fieldset = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 13px;\r\n  color: ${palette(\"text\", 1)};\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  margin: 0 0 8px;\r\n`;\r\n\r\nconst Form = styled.div``;\r\n\r\nconst StatusTag = styled.span`\r\n  padding: 0 5px;\r\n  height: 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n  text-transform: capitalize;\r\n\r\n  &.inside-form {\r\n    height: 25px;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span`\r\n  margin-right: 8px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  width: 10px;\r\n  height: 10px;\r\n  display: flex;\r\n  border-radius: 2%;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  color: #ffffff;\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst TransNo = styled.span`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  width: auto;\r\n  overflow: inherit;\r\n  position: relative;\r\n  .isoInvoiceTable {\r\n    table {\r\n      tbody {\r\n        tr {\r\n          td {\r\n            .isoInvoiceBtnView {\r\n              display: flex;\r\n              flex-direction: row;\r\n              > a {\r\n                margin: ${props =>\r\n    props[\"data-rtl\"] === \"rtl\" ? \"0 0 0 15px\" : \"0 15px 0 0\"};\r\n              }\r\n            }\r\n          }\r\n          &:hover {\r\n            .isoInvoiceBtnView {\r\n              ${\"\" /* opacity: 1; */};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .invoiceListTable {\r\n    .ant-dropdown-menu-item,\r\n    .ant-dropdown-menu-submenu-title {\r\n      &:hover {\r\n        background-color: ${palette(\"secondary\", 1)};\r\n      }\r\n    }\r\n\r\n    .invoiceViewBtn {\r\n      color: ${palette(\"text\", 3)};\r\n\r\n      &:hover {\r\n        color: ${palette(\"primary\", 0)};\r\n      }\r\n    }\r\n\r\n    .invoiceMrBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"grayscale\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"grayscale\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceDltBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"error\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"error\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRestBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"secondary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"secondary\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRstBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"success\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"success\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceEdtBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"primary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"primary\", 2)};\r\n      }\r\n  }\r\n}`;\r\n\r\nconst customCollapseStyle = {\r\n  background: \"#F1F3F6\",\r\n  marginBottom: \"-7px\"\r\n  // background: \"#797979\"\r\n};\r\n\r\nconst customPanelStyle = {\r\n  // background: \"#f7f7f7\",\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  // border: 1,\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst customDot = (icon, { status, title }) => {\r\n  // if (status && title === \"Pending\") {\r\n  //   return <span className=\"ant-steps-icon-dot\" />;\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Processed\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[4] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Cancelled\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[3] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  return icon;\r\n};\r\n\r\nconst Title = styled.h4`\r\n  text-align: center;\r\n  color: rgba(0, 0, 0, 0.85);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  font-variant: tabular-nums;\r\n  font-variant-ligatures: normal;\r\n  font-variant-caps: normal;\r\n  font-variant-numeric: tabular-nums;\r\n  font-variant-east-asian: normal;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 14px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n\r\n  &.company-name {\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n\r\nconst MiniText = styled.span`\r\n  margin-bottom: 1em;\r\n  font-weight: 400;\r\n  font-style: ${props => (props[\"italic\"] === true ? \"italic\" : \"normal\")};\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 10px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n`;\r\n\r\nexport const Strong = props => (\r\n  <strong style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </strong>\r\n);\r\nexport const Span = props => (\r\n  <span style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </span>\r\n);\r\n\r\nexport const TotalField = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <>\r\n        {data.map((data, key) => {\r\n          const {\r\n            label,\r\n            amount,\r\n            parseAmount,\r\n            isDiscount,\r\n            labelAlign,\r\n            amountAlign\r\n          } = data;\r\n          if (isDiscount) {\r\n            const { discount, discountAlign } = data;\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={10}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={4}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: discountAlign ? discountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? convertDiscountMask(discount)\r\n                      : discount\r\n                        ? convertDiscountMask(discount.replace(/\\$\\s?|(,*)/g, \"\"))\r\n                        : \"0.00\"}\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          } else {\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={15}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const Signature = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <Row className=\"avoid-page-break\" justify=\"space-between\" type=\"flex\">\r\n        {data.map((data, key) => {\r\n          const { label, name } = data;\r\n          return (\r\n            <Col style={{ textAlign: \"center\" }} key={key}>\r\n              <Row>\r\n                <Col style={{ marginBottom: \"84px\" }}>\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col>\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {name\r\n                      ? `( ${name} )`\r\n                      : \"(..............................................)\"}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nconst Box = WithDirection(BoxWrapper);\r\nexport {\r\n  Box,\r\n  StatusTag,\r\n  StatusBadge,\r\n  TransNo,\r\n  Fieldset,\r\n  Form,\r\n  Label,\r\n  customCollapseStyle,\r\n  customPanelStyle,\r\n  customDot,\r\n  Title,\r\n  Text,\r\n  MiniText\r\n};\r\nexport default WithDirection(CardWrapper);\r\n","import React from 'react';\r\nimport BoxTitleWrapper from './boxTitle';\r\nimport { BoxWrapper } from './box.style';\r\n\r\nexport default props => (\r\n  <BoxWrapper\r\n    className={`${props.className} isoBoxWrapper`}\r\n    style={props.style}\r\n  >\r\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\r\n    {props.children}\r\n  </BoxWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 10px 20px 10px 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from \"react\";\r\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\r\n\r\nexport default props => (\r\n  <LayoutContentWrapper\r\n    className={\r\n      props.className != null\r\n        ? `${props.className} isoLayoutContentWrapper`\r\n        : \"isoLayoutContentWrapper\"\r\n    }\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </LayoutContentWrapper>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDComponentTitleWrapper = styled.h1`\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  color: ${palette('secondary', 2)};\r\n  width: 100%;\r\n  margin-right: 17px;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    margin: 0 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    width: 5px;\r\n    height: 40px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n  }\r\n`;\r\n\r\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\r\nexport { ComponentTitleWrapper };\r\n","import React from \"react\";\r\nimport { ComponentTitleWrapper } from \"./pageHeader.style\";\r\nimport { Divider } from \"antd\";\r\n\r\nexport default props =>\r\n  props.title ? (\r\n    <div>\r\n      <div className=\"isoPageHeaderWrapper\">\r\n        <h1 className=\"isoCode\">{props.title}</h1>\r\n        {props.children}\r\n      </div>\r\n      <Divider\r\n        style={{ margin: props.marginBottom ? \"10px 0 20px 0\" : \"10px 0\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <ComponentTitleWrapper className=\"isoComponentTitle\">\r\n      {props.children}\r\n    </ComponentTitleWrapper>\r\n  );\r\n"],"sourceRoot":""}