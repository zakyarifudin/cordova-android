{"version":3,"sources":["containers/Modules/Setting/AppTransCode/index.js","redux/setting/appTransCode/actions.js"],"names":["Search","Input","AppTransCode","state","filter","pagination","search","transaction_types","id","name","handleSearch","value","getAppTransCodes","props","setState","transaction_type","handleSearchValue","e","target","handleResetSearch","id_cash_flow_group","handleFilterChange","handleFilter","string","handleResetFilter","handleRecord","action","activateAppTransCode","deactivateAppTransCode","handlePageChange","page","appTransCode","listAction","title","dataIndex","rowKey","width","align","render","text","row","placement","to","match","path","size","className","this","error","notification","clearError","success","clearSuccess","columns","getLanguage","app_trans_codes","dataSource","user","auth","permissions","includes","length","push","map","data","key","trans_name","current_page","page_size","total","marginBottom","style","display","justifyContent","onClick","history","replace","marginLeft","placeholder","onSearch","marginRight","onChange","marginTop","type","bind","loading","bordered","current","pageSize","parseInt","description","Component","compose","connect","actions","payload","createAppTransCode","storeAppTransCode","body","editAppTransCode","id_app_trans_code","updateAppTransCode","clearErrorField"],"mappings":"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","file":"static/js/324.530f1447.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport notification from \"../../../../components/notification\";\r\nimport { Empty, Input, Tooltip } from \"antd\";\r\n\r\n// import Popconfirms from \"../../../../components/feedback/popconfirm\";\r\n// import Box from '../../components/utility/box';\r\n// import HelperText from \"../../../../components/utility/helper-text\";\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Scrollbars from \"../../../../components/utility/customScrollBar\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport actions from \"../../../../redux/setting/appTransCode/actions\";\r\nimport TableWrapper from \"../../../Tables/antTables/antTable.style\";\r\nimport CardWrapper, { Box } from \"../../../App/app.style\";\r\n\r\nimport getLanguage from \"../../../App/MyLanguange\";\r\n\r\n// const Panel = Collapse.Panel;\r\n// const Option = Select.Option;\r\nconst Search = Input.Search;\r\nconst redirectTo = \"/dashboard/setup/menus\";\r\n\r\nclass AppTransCode extends Component {\r\n  state = {\r\n    filter: {\r\n      pagination: null\r\n    },\r\n    search: null,\r\n    transaction_types: [\r\n      {\r\n        id: 1,\r\n        name: \"All\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Purchase\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Sales\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Get All data diawal\r\n  componentDidMount() {\r\n    const { getAppTransCodes } = this.props;\r\n    getAppTransCodes();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // Display error notif\r\n    if (this.props.appTransCode.error) {\r\n      notification(\"error\", this.props.appTransCode.error);\r\n      this.props.clearError();\r\n    }\r\n\r\n    // Display success notif\r\n    if (this.props.appTransCode.success) {\r\n      notification(\"success\", this.props.appTransCode.success);\r\n      this.props.clearSuccess();\r\n    }\r\n  }\r\n\r\n  // Handle search\r\n  handleSearch = value => {\r\n    const { getAppTransCodes } = this.props;\r\n    this.setState({\r\n      filter: {\r\n        //id_cash_flow_group: [],\r\n        transaction_type: [],\r\n        pagination: null\r\n      }\r\n    });\r\n    getAppTransCodes(1, value);\r\n  };\r\n\r\n  //handle Search Value\r\n  handleSearchValue = e => {\r\n    const value = e.target.value;\r\n\r\n    this.setState({ search: value });\r\n  };\r\n\r\n  // Handle Reset search\r\n  handleResetSearch = () => {\r\n    const { getAppTransCodes } = this.props;\r\n    this.setState({\r\n      filter: {\r\n        id_cash_flow_group: [],\r\n        transaction_type: [],\r\n        pagination: null\r\n      }\r\n    });\r\n    this.setState({ search: null });\r\n    getAppTransCodes();\r\n  };\r\n\r\n  // Handle filter change\r\n  handleFilterChange = (name, value) => {\r\n    this.setState({\r\n      filter: {\r\n        ...this.state.filter,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handle filter\r\n  handleFilter = () => {\r\n    const { getAppTransCodes } = this.props;\r\n    //const { current_page } = this.props.appTransCode;\r\n    const { filter } = this.state;\r\n    let string = \"\";\r\n\r\n    if (filter.transaction_type) {\r\n      string += \"transaction_type=\" + filter.transaction_type;\r\n    }\r\n    if (filter.pagination) {\r\n      string\r\n        ? (string += \"&pagination=\" + filter.pagination)\r\n        : (string += \"pagination=\" + filter.pagination);\r\n    }\r\n\r\n    this.setState({ search: null });\r\n    getAppTransCodes(1, null, string);\r\n  };\r\n\r\n  // Handle Reset Filter\r\n  handleResetFilter = () => {\r\n    const { getAppTransCodes } = this.props;\r\n    this.setState({\r\n      filter: {\r\n        //id_cash_flow_group: [],\r\n        transaction_type: [],\r\n        pagination: null\r\n      }\r\n    });\r\n    this.setState({ search: null });\r\n    getAppTransCodes();\r\n  };\r\n\r\n  // Handle action di table\r\n  handleRecord = (action, id) => {\r\n    if (action === \"activate\") {\r\n      this.props.activateAppTransCode(id);\r\n    } else {\r\n      this.props.deactivateAppTransCode(id);\r\n    }\r\n  };\r\n\r\n  // Handle pagination\r\n  handlePageChange = page => {\r\n    const { getAppTransCodes } = this.props;\r\n    const { search } = this.props.appTransCode;\r\n    const { filter } = this.props.appTransCode;\r\n    getAppTransCodes(page, search, filter);\r\n  };\r\n\r\n  // Definisi kolom2 serta field2 API yang dipakai tabel\r\n\r\n  listAction = {\r\n    title: \"\",\r\n    dataIndex: \"id_app_trans_code\",\r\n    rowKey: \"id_app_trans_code\",\r\n    width: \"10%\",\r\n    align: \"center\",\r\n    render: (text, row) => (\r\n      <div>\r\n        <Tooltip\r\n          placement=\"topLeft\"\r\n          title={<IntlMessages id=\"tooltip.update\" />}\r\n        >\r\n          <Link to={`${this.props.match.path}/update/${text}`}>\r\n            <Button size=\"small\" className=\"invoiceEdtBtn\">\r\n              <i className=\"ion-android-create\" />\r\n            </Button>\r\n          </Link>\r\n        </Tooltip>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: getLanguage({ id: \"appTransCodes.add.name\" }),\r\n        dataIndex: \"trans_name\",\r\n        rowKey: \"trans_name\",\r\n        width: \"10%\",\r\n        render: text => <span>{text}</span>\r\n      },\r\n      {\r\n        title: getLanguage({ id: \"appMasterCodes.add.code\" }),\r\n        dataIndex: \"trans_code\",\r\n        rowKey: \"trans_code\",\r\n        width: \"15%\",\r\n        render: text => <span>{text}</span>\r\n      }\r\n    ];\r\n    // console.log(this.props.appTransCode);\r\n    // Data setup\r\n    const { app_trans_codes } = this.props.appTransCode;\r\n    // console.log(app_trans_codes); //console.log(this.state);\r\n    const dataSource = [];\r\n    const { user } = this.props.auth;\r\n    let { permissions } = user ? user : [];\r\n    permissions = permissions ? permissions : [];\r\n\r\n    //console.log(permissions);\r\n    if (\r\n      permissions.includes(\"Update App Transaction Code\") &&\r\n      columns.length === 2\r\n    ) {\r\n      columns.push(this.listAction);\r\n    }\r\n\r\n    app_trans_codes.map((data, key) => {\r\n      return dataSource.push({\r\n        ...data,\r\n        trans_name: getLanguage({ id: data.trans_name }),\r\n        key\r\n      });\r\n    });\r\n\r\n    // Pagination Setup\r\n    const { current_page, page_size, total } = this.props.appTransCode;\r\n\r\n    //console.log(this.props);\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <PageHeader\r\n            title={<IntlMessages id=\"appTransCodes.pageHeader\" />}\r\n            marginBottom={true}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <Button\r\n                onClick={() => this.props.history.replace(redirectTo)}\r\n                style={{ marginLeft: \"5px\" }}\r\n              >\r\n                <IntlMessages id=\"button.back\" />\r\n              </Button>\r\n            </div>\r\n          </PageHeader>\r\n          <div className=\"isoInvoiceTableBtn\">\r\n            <Search\r\n              placeholder={getLanguage({ id: \"appTransCodes.add.name\" })}\r\n              onSearch={this.handleSearch}\r\n              style={{ marginRight: \"1%\" }}\r\n              value={this.state.search}\r\n              onChange={this.handleSearchValue}\r\n            />\r\n            <div\r\n              style={{\r\n                // width: \"20%\",\r\n                marginTop: \"auto\",\r\n                marginRight: \"1%\"\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.handleSearch.bind(this, this.state.search)}\r\n              >\r\n                <IntlMessages id=\"button.search\" />\r\n              </Button>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: \"30%\",\r\n                marginTop: \"auto\",\r\n                marginRight: \"27%\"\r\n                // marginLeft: \"-2%\"\r\n              }}\r\n            >\r\n              <Button onClick={this.handleResetSearch}>\r\n                <IntlMessages id=\"filter.reset\" />\r\n              </Button>\r\n            </div>\r\n            {/* {permissions.includes(\"Create App Trans Code\") ? (\r\n              <Link to={`${this.props.match.path}/add`}>\r\n                <Button type=\"primary\" className=\"mateAddInvoiceBtn\">\r\n                  <IntlMessages id=\"app_trans_codes.button.add\" />\r\n                </Button>\r\n              </Link>\r\n            ) : null} */}\r\n          </div>\r\n\r\n          <CardWrapper>\r\n            {app_trans_codes.length === 0 &&\r\n            !this.props.appTransCode.loading ? (\r\n              <Empty\r\n                description={<IntlMessages id=\"appTransCodes.table.noData\" />}\r\n              />\r\n            ) : (\r\n              <div className=\"isoInvoiceTable\">\r\n                <Scrollbars style={{ width: \"100%\" }}>\r\n                  <TableWrapper\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    loading={this.props.appTransCode.loading}\r\n                    className=\"invoiceListTable\"\r\n                    bordered={true}\r\n                    // Set pagination, jika ada page_size mengunakan pagination API\r\n                    // jika tidak ada page_size menggunakan pagination bawaan\r\n                    pagination={\r\n                      page_size\r\n                        ? {\r\n                            current: current_page,\r\n                            pageSize: parseInt(page_size),\r\n                            total: total,\r\n                            onChange: this.handlePageChange.bind(this)\r\n                          }\r\n                        : true\r\n                    }\r\n                  />\r\n                </Scrollbars>\r\n              </div>\r\n            )}\r\n          </CardWrapper>\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appTransCode: state.appTransCode,\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, actions))(AppTransCode);\r\n","const actions = {\r\n  getAppTransCodes: (page, search, filter) => ({\r\n    type: 'GET_APP_TRANS_CODES_REQUEST',\r\n    payload: {\r\n      page: page,\r\n      search: search,\r\n      filter: filter\r\n    }\r\n  }),\r\n  createAppTransCode: () => ({\r\n    type: 'CREATE_APP_TRANS_CODE_REQUEST'\r\n  }),\r\n  storeAppTransCode: data => ({\r\n    type: 'STORE_APP_TRANS_CODE_REQUEST',\r\n    payload: { body: data }\r\n  }),\r\n  editAppTransCode: id_app_trans_code => ({\r\n    type: 'EDIT_APP_TRANS_CODE_REQUEST',\r\n    payload: { id_app_trans_code: id_app_trans_code }\r\n  }),\r\n  updateAppTransCode: (id_app_trans_code, data) => ({\r\n    type: 'UPDATE_APP_TRANS_CODE_REQUEST',\r\n    payload: {\r\n      id_app_trans_code: id_app_trans_code,\r\n      body: data\r\n    }\r\n  }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\nexport default actions;\r\n"],"sourceRoot":""}