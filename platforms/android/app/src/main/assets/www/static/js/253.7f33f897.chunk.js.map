{"version":3,"sources":["containers/Modules/CashBank/CashBank/updateForm.js","containers/Modules/CashBank/CashBank/update.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","containers/App/app.style.js","components/utility/box.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/utility/pageHeader.style.js","components/utility/pageHeader.js","redux/cashBank/cashBank/actions.js"],"names":["Option","Select","InputGroup","Input","Group","CashBankUpdateForm","state","is_cash","bank_account_number","currency","currency_is_base","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","submit","handleChangeIsCash","target","value","setState","handleChange","name","filter","setFieldRate","id_currency","date","currencies","cashBank","setFieldsValue","map","data","rate","getCurrencyRate","currency_rate","ob_rate","handleChangeStartDate","getFieldValue","moment","handleChangeAccount","accounts","id_account","this","cash_bank","getFieldDecorator","getFieldError","loading","used","is_used","error","errorField","formItemLayout","labelCol","xs","span","sm","wrapperCol","layout","onSubmit","style","marginBottom","message","id","type","showIcon","className","padding","Item","label","validateStatus","cash_bank_code","help","initialValue","rules","required","max","disabled","description","display","width","onChange","bind","buttonStyle","Button","flex","textAlign","pattern","id_location","showSearch","optionFilterProp","locations","key","location_code","location_name","id_account_type","account_code","account_name","compact","currency_code","currency_name","formatter","replace","parser","precision","opening_balance","start_date","isValid","allowClear","showTime","format","disabledDate","valueOf","onOpenChange","offset","htmlType","marginTop","marginLeft","Component","WrappedCashBankUpdateForm","Form","create","UpdateCashBank","updateCashBank","match","params","editCashBank","notification","clearError","success","history","title","margin","onClick","loadingEdit","size","auth","compose","connect","actions","BoxTitle","styled","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","div","children","StatusTag","StatusBadge","TransNo","CardWrapper","customCollapseStyle","background","customDot","icon","status","Title","h4","Text","MiniText","Strong","color","Span","TotalField","Array","isArray","length","amount","parseAmount","isDiscount","labelAlign","amountAlign","discount","discountAlign","justify","fontSize","convertDiscountMask","parseFloat","toFixed","Signature","Box","WithDirection","LayoutContentWrapper","WDComponentTitleWrapper","h1","ComponentTitleWrapper","getCashBanks","page","search","payload","createCashBank","storeCashBank","body","id_cash_bank","showCashBank","deactivateCashBank","activateCashBank","clearSuccess","clearErrorField"],"mappings":"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","file":"static/js/253.7f33f897.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Radio,\r\n  // Divider,\r\n  Col,\r\n  DatePicker,\r\n  InputNumber,\r\n  Row,\r\n  Alert\r\n} from \"antd\";\r\nimport { getCurrencyRate } from \"../../../../helpers/helper\";\r\n\r\nconst { Option } = Select;\r\n// const { TextArea } = Input;\r\nconst InputGroup = Input.Group;\r\n\r\nclass CashBankUpdateForm extends Component {\r\n  state = {\r\n    is_cash: null,\r\n    bank_account_number: null,\r\n    currency: null,\r\n    currency_is_base: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.cashBank.cash_bank) {\r\n      this.setState({\r\n        is_cash: this.props.cashBank.cash_bank.is_cash,\r\n        bank_account_number: this.props.cashBank.cash_bank.bank_account_number\r\n      });\r\n    } else {\r\n      this.setState({ is_cash: 1 });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.props.submit(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChangeIsCash = e => {\r\n    if (e.target.value === 0) {\r\n      this.setState({\r\n        is_cash: 0,\r\n        bank_account_number: null\r\n      });\r\n    } else {\r\n      this.setState({\r\n        is_cash: 1,\r\n        bank_account_number: null\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (name, e) => {\r\n    //let name  = e.target.name\r\n    let value = e.target.value;\r\n    //console.log(e)\r\n    this.setState({\r\n      ...this.state.filter,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  setFieldRate = (id_currency, date) => {\r\n    const { currencies } = this.props.cashBank;\r\n    const { setFieldsValue } = this.props.form;\r\n\r\n    currencies.map(data => {\r\n      if (data.id_currency === id_currency) {\r\n        let rate = getCurrencyRate(data.currency_rate, date);\r\n        setFieldsValue({\r\n          ob_rate: rate\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChangeStartDate = value => {\r\n    const { getFieldValue } = this.props.form;\r\n    if (getFieldValue(\"id_currency\") && value instanceof moment) {\r\n      this.setFieldRate(getFieldValue(\"id_currency\"), value);\r\n    }\r\n  };\r\n\r\n  handleChangeAccount = value => {\r\n    const { setFieldsValue, getFieldValue } = this.props.form;\r\n    this.props.cashBank.accounts.map(data => {\r\n      if (data.id_account === value) {\r\n        setFieldsValue({\r\n          id_currency: data.id_currency\r\n        });\r\n        this.setFieldRate(data.id_currency, getFieldValue(\"start_date\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    const { getFieldDecorator, getFieldError } = this.props.form;\r\n    const { cashBank } = this.props;\r\n    const { loading } = cashBank;\r\n    const data = cashBank.cash_bank ? cashBank.cash_bank : [];\r\n\r\n    const used = data.is_used;\r\n    const error = cashBank.errorField ? cashBank.errorField : [];\r\n    // console.log(data);\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const formTextArea = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\r\n        {used ? (\r\n          <Row style={{ marginBottom: \"20px\" }}>\r\n            <Col span={24}>\r\n              <Alert\r\n                message={<IntlMessages id=\"cashBank.help\" />}\r\n                type=\"warning\"\r\n                showIcon\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* <Divider orientation=\"left\" style={{ fontSize: 14 }}>\r\n          <IntlMessages id=\"cashBanks.add.subtitle.data\" />\r\n        </Divider> */}\r\n        <div className=\"isoDetailDataFlex\" style={{ padding: \"0\" }}>\r\n          <div\r\n            className=\"isoColumn-2 isoFormGroupComp\"\r\n            style={{ padding: \"0 15px 0 0\" }}\r\n          >\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"cashBanks.add.code\" />}\r\n              validateStatus={\r\n                error.cash_bank_code || getFieldError(\"cash_bank_code\")\r\n                  ? \"error\"\r\n                  : null\r\n              }\r\n              help={\r\n                error.cash_bank_code\r\n                  ? error.cash_bank_code\r\n                  : getFieldError(\"cash_bank_code\")\r\n              }\r\n            >\r\n              {getFieldDecorator(\"cash_bank_code\", {\r\n                initialValue: data.cash_bank_code,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                  {\r\n                    max: 30,\r\n                    message: <IntlMessages id=\"maxLength30\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  disabled={used ? true : false}\r\n                  //style={{ textTransform: \"uppercase\" }}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formTextArea}\r\n              label={<IntlMessages id=\"name\" />}\r\n              validateStatus={\r\n                error.description || getFieldError(\"description\")\r\n                  ? \"error\"\r\n                  : null\r\n              }\r\n              help={\r\n                error.description\r\n                  ? error.description\r\n                  : getFieldError(\"description\")\r\n              }\r\n            >\r\n              {getFieldDecorator(\"description\", {\r\n                initialValue: data.description,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  },\r\n                  {\r\n                    max: 50,\r\n                    message: <IntlMessages id=\"maxLength50\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  //autosize={{ minRows: 2 }}\r\n                  disabled={used ? true : false}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item {...formItemLayout} label={<IntlMessages id=\"isCash\" />}>\r\n              {getFieldDecorator(\"is_cash\", {\r\n                initialValue: this.state.is_cash,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Radio.Group\r\n                  style={{ display: \"flex\", width: \"50%\" }}\r\n                  onChange={this.handleChangeIsCash.bind(this)}\r\n                  buttonStyle=\"solid\"\r\n                  disabled={used ? true : false}\r\n                >\r\n                  <Radio.Button\r\n                    style={{ flex: \"1\", textAlign: \"center\" }}\r\n                    value={1}\r\n                  >\r\n                    <IntlMessages id=\"yes\" />\r\n                  </Radio.Button>\r\n                  <Radio.Button\r\n                    style={{ flex: \"1\", textAlign: \"center\" }}\r\n                    value={0}\r\n                  >\r\n                    <IntlMessages id=\"no\" />\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"cashBanks.add.bankAccountNumber\" />}\r\n            >\r\n              {getFieldDecorator(\"bank_account_number\", {\r\n                initialValue:\r\n                  this.state.is_cash === 1\r\n                    ? null\r\n                    : this.state.bank_account_number,\r\n                rules: [\r\n                  {\r\n                    max: 20,\r\n                    message: <IntlMessages id=\"maxLength20\" />\r\n                  },\r\n                  {\r\n                    pattern: \"^[0-9]*$\",\r\n                    message: <IntlMessages id=\"bankAccountMustNumber\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  //addonBefore={is_cash}\r\n                  onChange={this.handleChange.bind(this, \"bank_account_number\")}\r\n                  disabled={\r\n                    used ? true : this.state.is_cash === 1 ? true : false\r\n                  }\r\n                  //style={{ textTransform: \"uppercase\" }}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </div>\r\n          <div\r\n            className=\"isoColumn-2 isoFormGroupComp\"\r\n            style={{ padding: \"0 0 0 15px\" }}\r\n          >\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"locations.pageHeader\" />}\r\n            >\r\n              {getFieldDecorator(\"id_location\", {\r\n                initialValue: data.id_location,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={cashBank.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  disabled={used ? true : false}\r\n                >\r\n                  {this.props.cashBank.locations.map((data, key) => (\r\n                    <Option key={key} value={data.id_location}>\r\n                      {data.location_code + \" (\" + data.location_name + \")\"}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"accounts.pageHeader\" />}\r\n            >\r\n              {getFieldDecorator(\"id_account\", {\r\n                initialValue: data.id_account,\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"required\" />\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  loading={cashBank.loading}\r\n                  showSearch\r\n                  optionFilterProp=\"children\"\r\n                  disabled={used ? true : false}\r\n                  onChange={this.handleChangeAccount.bind(this)}\r\n                >\r\n                  {this.props.cashBank.accounts.map((data, key) =>\r\n                    data.id_account_type === \"02\" ? (\r\n                      <Option key={key} value={data.id_account}>\r\n                        {data.account_code + \" (\" + data.account_name + \")\"}\r\n                      </Option>\r\n                    ) : null\r\n                  )}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <InputGroup compact>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"currency\" />}\r\n                >\r\n                  {getFieldDecorator(\"id_currency\", {\r\n                    initialValue: data.id_currency,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      loading={this.props.cashBank.loading}\r\n                      showSearch\r\n                      optionFilterProp=\"children\"\r\n                      style={{ width: \"100%\" }}\r\n                      //onChange={this.handleChangeCurrency}\r\n                      disabled={true}\r\n                    >\r\n                      {this.props.cashBank.currencies.map((data, key) => (\r\n                        <Option key={key} value={data.id_currency}>\r\n                          {data.currency_code + \" (\" + data.currency_name + \")\"}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"accounts.rate\" />}\r\n                >\r\n                  {getFieldDecorator(\"ob_rate\", {\r\n                    initialValue: data.ob_rate,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      formatter={value =>\r\n                        `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      }\r\n                      parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\r\n                      disabled={true}\r\n                      style={{ width: \"100%\" }}\r\n                      precision={2}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </InputGroup>\r\n\r\n            <InputGroup compact>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"accounts.openingBalance\" />}\r\n                >\r\n                  {getFieldDecorator(\"opening_balance\", {\r\n                    initialValue: data.opening_balance,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      formatter={value =>\r\n                        `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      }\r\n                      parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\r\n                      //min={0}\r\n                      disabled={used ? true : false}\r\n                      style={{ width: \"100%\" }}\r\n                      precision={2}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label={<IntlMessages id=\"accounts.openingBalanceDate\" />}\r\n                >\r\n                  {getFieldDecorator(\"start_date\", {\r\n                    initialValue: moment(\r\n                      data.start_date,\r\n                      \"YYYY-MM-DD HH:mm:ss\"\r\n                    ).isValid()\r\n                      ? moment(data.start_date, \"YYYY-MM-DD HH:mm:ss\")\r\n                      : null,\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <IntlMessages id=\"required\" />\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <DatePicker\r\n                      style={{ width: \"100%\" }}\r\n                      allowClear={false}\r\n                      disabled={used ? true : false}\r\n                      showTime\r\n                      format=\"DD MMMM YYYY HH:mm:ss\"\r\n                      disabledDate={e => e.valueOf() > moment()}\r\n                      onChange={this.handleChangeStartDate}\r\n                      onOpenChange={this.handleChangeStartDate}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ marginTop: \"20px\", marginLeft: \"50px\" }}\r\n            loading={loading}\r\n            disabled={used ? true : false}\r\n          >\r\n            <IntlMessages id=\"button.submit\" />\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedCashBankUpdateForm = Form.create({ name: \"update_cash_bank\" })(\r\n  CashBankUpdateForm\r\n);\r\n\r\nexport default WrappedCashBankUpdateForm;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CashBankUpdateForm from \"./updateForm\";\r\n\r\nimport notification from \"../../../../components/notification\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport LayoutWrapper from \"../../../../components/utility/layoutWrapper\";\r\nimport PageHeader from \"../../../../components/utility/pageHeader\";\r\nimport IntlMessages from \"../../../../components/utility/intlMessages\";\r\nimport Button from \"../../../../components/uielements/button\";\r\nimport actions from \"../../../../redux/cashBank/cashBank/actions\";\r\nimport { Box } from \"../../../App/app.style\";\r\n\r\nconst redirectTo = \"/dashboard/setup/cash-banks\"\r\n\r\nclass UpdateCashBank extends Component {\r\n  // Get All data diawal\r\n  componentDidMount() {\r\n    const { editCashBank } = this.props;\r\n    const { id } = this.props.match.params;\r\n    editCashBank(id);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // Display error notif\r\n    if (this.props.cashBank.error) {\r\n      notification(\"error\", this.props.cashBank.error);\r\n      this.props.clearError();\r\n    }\r\n\r\n    if (this.props.cashBank.success) {\r\n      this.props.history.replace(redirectTo);\r\n    }\r\n  }\r\n\r\n  handleSubmit = value => {\r\n    const { updateCashBank } = this.props;\r\n    const { id } = this.props.match.params;\r\n\r\n    if (value.is_cash === 1) {\r\n      value.bank_account_number = \"\";\r\n    }\r\n    value.start_date = value.start_date.format(\"YYYY-MM-DD HH:mm:ss\");\r\n    //console.log(value);\r\n    updateCashBank(id, value);\r\n  };\r\n\r\n  render() {\r\n\r\n    // console.log(this.props);\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <PageHeader title={<IntlMessages id=\"cashBanks.update.title\" />}\r\n            style={{ margin: 0 }}\r\n          >\r\n            <Button onClick={() => this.props.history.replace(redirectTo)}>\r\n              <IntlMessages id=\"button.back\" />\r\n            </Button>\r\n          </PageHeader>\r\n\r\n          {this.props.cashBank.loadingEdit ? (\r\n            <div className=\"spinStyle\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          ) : (\r\n              <CashBankUpdateForm\r\n                auth={this.props.auth}\r\n                submit={this.handleSubmit}\r\n                cashBank={this.props.cashBank}\r\n              />\r\n            )}\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { auth: state.auth, cashBank: state.cashBank };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    actions\r\n  )\r\n)(UpdateCashBank);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${palette('text', 0)};\r\n  margin: 0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BoxSubTitle = styled.p`\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  color: ${palette('text', 3)};\r\n  line-height: 24px;\r\n`;\r\n\r\nexport { BoxTitle, BoxSubTitle };\r\n","import React from 'react';\r\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {props.title\r\n        ? <BoxTitle className=\"isoBoxTitle\">\r\n            {' '}{props.title}{' '}\r\n          </BoxTitle>\r\n        : ''}\r\n      {props.subtitle\r\n        ? <BoxSubTitle className=\"isoBoxSubTitle\">\r\n            {' '}{props.subtitle}{' '}\r\n          </BoxSubTitle>\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst BoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border: 1px solid ${palette('border', 0)};\r\n  margin: 0 0 30px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 20px;\r\n    ${'' /* margin: 0 10px 30px; */};\r\n  }\r\n\r\n  &.half {\r\n    width: calc(50% - 34px);\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { BoxWrapper };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\n// import theme from \"../../settings/themes/themedefault\";\r\nimport BoxComponent from \"../../components/utility/box\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\nimport { Row, Col } from \"antd\";\r\nimport { convertDiscountMask } from \"../../helpers/helper\";\r\n\r\nconst BoxWrapper = styled(BoxComponent)`\r\n  border-radius: 5px;\r\n\r\n  .isoInvoiceTableBtn {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .isoPageHeaderWrapper {\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .spinStyle {\r\n    text-align: center;\r\n    padding: 30px 50px;\r\n  }\r\n\r\n  .isoCode {\r\n    color: ${palette(\"text\", 1)};\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n  }\r\n\r\n  .isoDetailDataFlex {\r\n    display: flex;\r\n    .isoColumn-1 {\r\n      width: 100%;\r\n      display: block;\r\n    }\r\n    .isoColumn-2 {\r\n      width: 50%;\r\n    }\r\n    .isoColumn-3 {\r\n      width: 33%;\r\n    }\r\n  }\r\n\r\n  .isoFormGroupComp {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n\r\n  .isoDetailDataBlock {\r\n    display: block;\r\n    .isoColumn {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .isoFilter {\r\n    margin-bottom: 30px;\r\n    .isoFilterContent {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .isoFormGroup {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    .isoInputCode-20 {\r\n      width: 20%;\r\n    }\r\n    .isoInputCode-30 {\r\n      width: 30%;\r\n    }\r\n    .isoInputCode-40 {\r\n      width: 40%;\r\n    }\r\n    .isoInputCode-50 {\r\n      width: 50%;\r\n    }\r\n    .isoInputCode-100 {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Fieldset = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 13px;\r\n  color: ${palette(\"text\", 1)};\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  margin: 0 0 8px;\r\n`;\r\n\r\nconst Form = styled.div``;\r\n\r\nconst StatusTag = styled.span`\r\n  padding: 0 5px;\r\n  height: 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n  text-transform: capitalize;\r\n\r\n  &.inside-form {\r\n    height: 25px;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span`\r\n  margin-right: 8px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  width: 10px;\r\n  height: 10px;\r\n  display: flex;\r\n  border-radius: 2%;\r\n  background-color: ${palette(\"primary\", 0)};\r\n  color: #ffffff;\r\n\r\n  &.nonactive {\r\n    background-color: ${palette(\"error\", 0)};\r\n  }\r\n\r\n  &.warning {\r\n    background-color: ${palette(\"warning\", 0)};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${palette(\"success\", 0)};\r\n  }\r\n\r\n  &.new {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.requested {\r\n    background-color: ${palette(\"status\", 8)};\r\n  }\r\n\r\n  &.transferred {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.fulfilled {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.progress {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.cancelled {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.ordered {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.closed {\r\n    background-color: ${palette(\"status\", 1)};\r\n  }\r\n\r\n  &.approved {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.invoiced {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.rejected {\r\n    background-color: ${palette(\"status\", 3)};\r\n  }\r\n\r\n  &.pending {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.processed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.confirmed {\r\n    background-color: ${palette(\"status\", 4)};\r\n  }\r\n\r\n  &.received {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-payment {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.billed-payment {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.paid-payment {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n\r\n  &.new-receipt {\r\n    background-color: ${palette(\"status\", 0)};\r\n  }\r\n\r\n  &.partial-receipt {\r\n    background-color: ${palette(\"status\", 2)};\r\n  }\r\n\r\n  &.full-receipt {\r\n    background-color: ${palette(\"status\", 5)};\r\n  }\r\n`;\r\n\r\nconst TransNo = styled.span`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  width: auto;\r\n  overflow: inherit;\r\n  position: relative;\r\n  .isoInvoiceTable {\r\n    table {\r\n      tbody {\r\n        tr {\r\n          td {\r\n            .isoInvoiceBtnView {\r\n              display: flex;\r\n              flex-direction: row;\r\n              > a {\r\n                margin: ${props =>\r\n    props[\"data-rtl\"] === \"rtl\" ? \"0 0 0 15px\" : \"0 15px 0 0\"};\r\n              }\r\n            }\r\n          }\r\n          &:hover {\r\n            .isoInvoiceBtnView {\r\n              ${\"\" /* opacity: 1; */};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .invoiceListTable {\r\n    .ant-dropdown-menu-item,\r\n    .ant-dropdown-menu-submenu-title {\r\n      &:hover {\r\n        background-color: ${palette(\"secondary\", 1)};\r\n      }\r\n    }\r\n\r\n    .invoiceViewBtn {\r\n      color: ${palette(\"text\", 3)};\r\n\r\n      &:hover {\r\n        color: ${palette(\"primary\", 0)};\r\n      }\r\n    }\r\n\r\n    .invoiceMrBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"grayscale\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"grayscale\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceDltBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"error\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"error\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRestBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"secondary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"secondary\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceRstBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"success\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"success\", 2)};\r\n      }\r\n    }\r\n\r\n    .invoiceEdtBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette(\"primary\", 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette(\"primary\", 2)};\r\n      }\r\n  }\r\n}`;\r\n\r\nconst customCollapseStyle = {\r\n  background: \"#F1F3F6\",\r\n  marginBottom: \"-7px\"\r\n  // background: \"#797979\"\r\n};\r\n\r\nconst customPanelStyle = {\r\n  // background: \"#f7f7f7\",\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  // border: 1,\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst customDot = (icon, { status, title }) => {\r\n  // if (status && title === \"Pending\") {\r\n  //   return <span className=\"ant-steps-icon-dot\" />;\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Processed\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[4] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  // if (status === \"process\" && title === \"Cancelled\") {\r\n  //   return (\r\n  //     <span\r\n  //       style={{ background: theme.palette.status[3] }}\r\n  //       className=\"ant-steps-icon-dot\"\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  return icon;\r\n};\r\n\r\nconst Title = styled.h4`\r\n  text-align: center;\r\n  color: rgba(0, 0, 0, 0.85);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  font-variant: tabular-nums;\r\n  font-variant-ligatures: normal;\r\n  font-variant-caps: normal;\r\n  font-variant-numeric: tabular-nums;\r\n  font-variant-east-asian: normal;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 14px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n\r\n  &.company-name {\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n\r\nconst MiniText = styled.span`\r\n  margin-bottom: 1em;\r\n  font-weight: 400;\r\n  font-style: ${props => (props[\"italic\"] === true ? \"italic\" : \"normal\")};\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 10px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"PingFang SC\",\r\n    \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial,\r\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  line-height: 1.5;\r\n  font-variant: tabular-nums;\r\n  font-feature-settings: \"tnum\";\r\n`;\r\n\r\nexport const Strong = props => (\r\n  <strong style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </strong>\r\n);\r\nexport const Span = props => (\r\n  <span style={{ color: props.error ? \"#f5222d\" : \"inherit\" }}>\r\n    {props.children}\r\n  </span>\r\n);\r\n\r\nexport const TotalField = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <>\r\n        {data.map((data, key) => {\r\n          const {\r\n            label,\r\n            amount,\r\n            parseAmount,\r\n            isDiscount,\r\n            labelAlign,\r\n            amountAlign\r\n          } = data;\r\n          if (isDiscount) {\r\n            const { discount, discountAlign } = data;\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={10}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={4}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: discountAlign ? discountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? convertDiscountMask(discount)\r\n                      : discount\r\n                        ? convertDiscountMask(discount.replace(/\\$\\s?|(,*)/g, \"\"))\r\n                        : \"0.00\"}\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          } else {\r\n            return (\r\n              <Row\r\n                justify=\"flex\"\r\n                justify=\"end\"\r\n                key={key}\r\n                style={{ marginBottom: \"6px\" }}\r\n              >\r\n                <Col\r\n                  span={15}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: labelAlign ? labelAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col\r\n                  span={8}\r\n                  offset={1}\r\n                  style={{\r\n                    marginTop: \"5px\",\r\n                    textAlign: amountAlign ? amountAlign : \"right\"\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {parseAmount\r\n                      ? parseFloat(amount)\r\n                        .toFixed(2)\r\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                      : amount}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const Signature = props => {\r\n  const { data } = props;\r\n  if (Array.isArray(data) && data.length > 0) {\r\n    return (\r\n      <Row className=\"avoid-page-break\" justify=\"space-between\" type=\"flex\">\r\n        {data.map((data, key) => {\r\n          const { label, name } = data;\r\n          return (\r\n            <Col style={{ textAlign: \"center\" }} key={key}>\r\n              <Row>\r\n                <Col style={{ marginBottom: \"84px\" }}>\r\n                  <span style={{ fontSize: \"12px\" }}>{label}</span>\r\n                </Col>\r\n                <Col>\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    {name\r\n                      ? `( ${name} )`\r\n                      : \"(..............................................)\"}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nconst Box = WithDirection(BoxWrapper);\r\nexport {\r\n  Box,\r\n  StatusTag,\r\n  StatusBadge,\r\n  TransNo,\r\n  Fieldset,\r\n  Form,\r\n  Label,\r\n  customCollapseStyle,\r\n  customPanelStyle,\r\n  customDot,\r\n  Title,\r\n  Text,\r\n  MiniText\r\n};\r\nexport default WithDirection(CardWrapper);\r\n","import React from 'react';\r\nimport BoxTitleWrapper from './boxTitle';\r\nimport { BoxWrapper } from './box.style';\r\n\r\nexport default props => (\r\n  <BoxWrapper\r\n    className={`${props.className} isoBoxWrapper`}\r\n    style={props.style}\r\n  >\r\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\r\n    {props.children}\r\n  </BoxWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst LayoutContentWrapper = styled.div`\r\n  padding: 10px 20px 10px 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n\r\n  @media (max-width: 580px) {\r\n    padding: 5px 20px 30px 20px;\r\n  }\r\n`;\r\n\r\nexport { LayoutContentWrapper };\r\n","import React from \"react\";\r\nimport { LayoutContentWrapper } from \"./layoutWrapper.style\";\r\n\r\nexport default props => (\r\n  <LayoutContentWrapper\r\n    className={\r\n      props.className != null\r\n        ? `${props.className} isoLayoutContentWrapper`\r\n        : \"isoLayoutContentWrapper\"\r\n    }\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </LayoutContentWrapper>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDComponentTitleWrapper = styled.h1`\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  color: ${palette('secondary', 2)};\r\n  width: 100%;\r\n  margin-right: 17px;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    margin: 0 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    width: 5px;\r\n    height: 40px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: ${palette('secondary', 3)};\r\n    display: flex;\r\n    margin: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n  }\r\n`;\r\n\r\nconst ComponentTitleWrapper = WithDirection(WDComponentTitleWrapper);\r\nexport { ComponentTitleWrapper };\r\n","import React from \"react\";\r\nimport { ComponentTitleWrapper } from \"./pageHeader.style\";\r\nimport { Divider } from \"antd\";\r\n\r\nexport default props =>\r\n  props.title ? (\r\n    <div>\r\n      <div className=\"isoPageHeaderWrapper\">\r\n        <h1 className=\"isoCode\">{props.title}</h1>\r\n        {props.children}\r\n      </div>\r\n      <Divider\r\n        style={{ margin: props.marginBottom ? \"10px 0 20px 0\" : \"10px 0\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <ComponentTitleWrapper className=\"isoComponentTitle\">\r\n      {props.children}\r\n    </ComponentTitleWrapper>\r\n  );\r\n","const actions = {\r\n  getCashBanks: (page, search, filter) => ({\r\n    type: 'GET_CASH_BANKS_REQUEST',\r\n    payload: {\r\n      page: page,\r\n      search: search,\r\n      filter: filter\r\n    }\r\n  }),\r\n  createCashBank: () => ({\r\n    type: 'CREATE_CASH_BANK_REQUEST'\r\n  }),\r\n  storeCashBank: data => ({\r\n    type: 'STORE_CASH_BANK_REQUEST',\r\n    payload: { body: data }\r\n  }),\r\n  editCashBank: id_cash_bank => ({\r\n    type: 'EDIT_CASH_BANK_REQUEST',\r\n    payload: { id_cash_bank: id_cash_bank }\r\n  }),\r\n  updateCashBank: (id_cash_bank, data) => ({\r\n    type: 'UPDATE_CASH_BANK_REQUEST',\r\n    payload: {\r\n      id_cash_bank: id_cash_bank,\r\n      body: data\r\n    }\r\n  }),\r\n  showCashBank: id_cash_bank => ({\r\n    type: 'SHOW_CASH_BANK_REQUEST',\r\n    payload: { id_cash_bank: id_cash_bank }\r\n  }),\r\n  deactivateCashBank: id_cash_bank => ({\r\n    type: 'DEACTIVATE_CASH_BANK_REQUEST',\r\n    payload: { id_cash_bank }\r\n  }),\r\n  activateCashBank: id_cash_bank => ({\r\n    type: 'ACTIVATE_CASH_BANK_REQUEST',\r\n    payload: { id_cash_bank }\r\n  }),\r\n  clearSuccess: () => ({\r\n    type: \"CLEAR_SUCCESS\"\r\n  }),\r\n  clearError: () => ({\r\n    type: \"CLEAR_ERROR\"\r\n  }),\r\n  clearErrorField: () => ({\r\n    type: \"CLEAR_ERROR_FIELD\"\r\n  })\r\n};\r\n\r\nexport default actions;\r\n"],"sourceRoot":""}